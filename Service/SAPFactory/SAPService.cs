//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.33440.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name = "SAPServiceSoap", Namespace = "http://tempuri.org/")]
public partial class SAPService : System.Web.Services.Protocols.SoapHttpClientProtocol
{

    private System.Threading.SendOrPostCallback GetLastPOPriceOperationCompleted;

    private System.Threading.SendOrPostCallback getEmpWageTypenBasicOperationCompleted;

    private System.Threading.SendOrPostCallback getMaterialQtyDetailsOperationCompleted;

    private System.Threading.SendOrPostCallback setMaterialQtyDetailsOperationCompleted;

    private System.Threading.SendOrPostCallback getEcomCustomersOperationCompleted;

    private System.Threading.SendOrPostCallback GetInvoiceandLRDetailsOperationCompleted;

    private System.Threading.SendOrPostCallback getFreeGoodsForCustomerOperationCompleted;

    private System.Threading.SendOrPostCallback getinvoiceOperationCompleted;

    private System.Threading.SendOrPostCallback GetProductwiseBudgetOperationCompleted;

    private System.Threading.SendOrPostCallback GetOutstandingOperationCompleted;

    private System.Threading.SendOrPostCallback InsertMaterialstoragelocationExtensionOperationCompleted;

    private System.Threading.SendOrPostCallback GetPromoInvoiceDetailsOperationCompleted;

    private System.Threading.SendOrPostCallback GetEmployeePromotiondetailsOperationCompleted;

    private System.Threading.SendOrPostCallback GetTableDataWithMultiCondnOperationCompleted;

    private System.Threading.SendOrPostCallback GetOpeningbalOperationCompleted;

    private System.Threading.SendOrPostCallback GetGRNSTNDataOperationCompleted;

    private System.Threading.SendOrPostCallback GetSetEcomBankChargesOperationCompleted;

    private System.Threading.SendOrPostCallback rfcquarantineOperationCompleted;

    private System.Threading.SendOrPostCallback rfcpogatemoduleOperationCompleted;

    private System.Threading.SendOrPostCallback rfcQAOperationCompleted;

    private System.Threading.SendOrPostCallback rfcPODetModuleOperationCompleted;

    private System.Threading.SendOrPostCallback rfcToBeInspectedModuleOperationCompleted;

    private System.Threading.SendOrPostCallback rfcShipperModuleOperationCompleted;

    private System.Threading.SendOrPostCallback GetStockAtCFAOperationCompleted;

    private System.Threading.SendOrPostCallback InsertFGOSInSAPOperationCompleted;

    private System.Threading.SendOrPostCallback GetFGODetailsOperationCompleted;

    private System.Threading.SendOrPostCallback GetIntransitValuesOperationCompleted;

    private System.Threading.SendOrPostCallback SetGetPostRTGSOperationCompleted;

    private System.Threading.SendOrPostCallback SetGetPostRTGSUpdatedOperationCompleted;

    private System.Threading.SendOrPostCallback SetGetPRADetailsOperationCompleted;

    private System.Threading.SendOrPostCallback GetOrderToInvoiceOperationCompleted;

    private System.Threading.SendOrPostCallback GetStockToPromoOperationCompleted;

    private System.Threading.SendOrPostCallback TaxClassificationOperationCompleted;

    private System.Threading.SendOrPostCallback TaxActAssGroupOperationCompleted;

    private System.Threading.SendOrPostCallback ItemAvailOperationCompleted;

    private System.Threading.SendOrPostCallback DivDetOperationCompleted;

    private System.Threading.SendOrPostCallback GenCatItemGroupOperationCompleted;

    private System.Threading.SendOrPostCallback GetAssGroupOperationCompleted;

    private System.Threading.SendOrPostCallback GetMatGroup1OperationCompleted;

    private System.Threading.SendOrPostCallback GetLotSizeforFinOperationCompleted;

    private System.Threading.SendOrPostCallback GetMRPDetOperationCompleted;

    private System.Threading.SendOrPostCallback GetMRPTypeDetOperationCompleted;

    private System.Threading.SendOrPostCallback GetValuationClassOperationCompleted;

    private System.Threading.SendOrPostCallback GetProdHeirarchyOperationCompleted;

    private System.Threading.SendOrPostCallback FillddlTransGroupOperationCompleted;

    private System.Threading.SendOrPostCallback GetProductHierarchyDetOperationCompleted;

    private System.Threading.SendOrPostCallback GetControlCodeOperationCompleted;

    private System.Threading.SendOrPostCallback GetTempCondOperationCompleted;

    private System.Threading.SendOrPostCallback InsertFinishedItemOperationCompleted;

    private System.Threading.SendOrPostCallback FinishedMatExtensionOperationCompleted;

    private System.Threading.SendOrPostCallback PromoPrintDetOperationCompleted;

    private System.Threading.SendOrPostCallback SetGetVendorRegistrationOperationCompleted;

    private System.Threading.SendOrPostCallback GetOISConsigneeAddrOperationCompleted;

    private System.Threading.SendOrPostCallback GetOISMulitpleBatchesOperationCompleted;

    private System.Threading.SendOrPostCallback OISCheckStockOperationCompleted;

    private System.Threading.SendOrPostCallback OISCrateInvoiceOperationCompleted;

    private System.Threading.SendOrPostCallback GetPRADetOperationCompleted;

    private System.Threading.SendOrPostCallback InsertMiscExpensePostingMulitpleOperationCompleted;

    private System.Threading.SendOrPostCallback GetPPDBdataOperationCompleted;

    private System.Threading.SendOrPostCallback InsertQuotationInterestRateOperationCompleted;

    private System.Threading.SendOrPostCallback InsertMktgAdvOperationCompleted;

    private System.Threading.SendOrPostCallback GetMktgAdvDetOperationCompleted;

    private System.Threading.SendOrPostCallback ClearMktgAdvOperationCompleted;

    private System.Threading.SendOrPostCallback GetInvoiceDetOperationCompleted;

    private System.Threading.SendOrPostCallback InsertLabChemicalsItemOperationCompleted;

    private System.Threading.SendOrPostCallback InsertPromotionalItemOperationCompleted;

    private System.Threading.SendOrPostCallback InsertGlassWareItemOperationCompleted;

    private System.Threading.SendOrPostCallback InsertGeneralItemOperationCompleted;

    private System.Threading.SendOrPostCallback InsertRDLabChemicalsItemOperationCompleted;

    private System.Threading.SendOrPostCallback InsertRDConsumablesItemOperationCompleted;

    private System.Threading.SendOrPostCallback InsertRDGlassWareItemOperationCompleted;

    private System.Threading.SendOrPostCallback InsertRDCapitalAssetsItemOperationCompleted;

    private System.Threading.SendOrPostCallback InsertRDSparePartsItemOperationCompleted;

    private System.Threading.SendOrPostCallback GetMaterialInformationByItemCodeOperationCompleted;

    private System.Threading.SendOrPostCallback InsertRawMaterialExtensionOperationCompleted;

    private System.Threading.SendOrPostCallback InsertLabChemicalCodeExtensionOperationCompleted;

    private System.Threading.SendOrPostCallback InsertPackagingMaterialCodeExtensionOperationCompleted;

    private System.Threading.SendOrPostCallback InsertPromotinalMaterialCodeExtensionOperationCompleted;

    private System.Threading.SendOrPostCallback InsertSparePartsMaterialCodeExtensionOperationCompleted;

    private System.Threading.SendOrPostCallback InsertCapitalGoodsCodeExtensionOperationCompleted;

    private System.Threading.SendOrPostCallback InsertGlassWareMaterialCodeExtensionOperationCompleted;

    private System.Threading.SendOrPostCallback InsertConsumableMaterialCodeExtensionOperationCompleted;

    private System.Threading.SendOrPostCallback PostIncomeTax_Sec586OperationCompleted;

    private System.Threading.SendOrPostCallback PostIncomeTax_Sec585OperationCompleted;

    private System.Threading.SendOrPostCallback PostIncomeTax_Sec584OperationCompleted;

    private System.Threading.SendOrPostCallback PostIncomeTax_Sec581OperationCompleted;

    private System.Threading.SendOrPostCallback PanCardUpdateOperationCompleted;

    private System.Threading.SendOrPostCallback R3CurrentMonthTransactionOperationCompleted;

    private System.Threading.SendOrPostCallback R3ProductSalesOperationCompleted;

    private System.Threading.SendOrPostCallback R3AgeWiseOperationCompleted;

    private System.Threading.SendOrPostCallback R3OrderStatusOperationCompleted;

    private System.Threading.SendOrPostCallback R3RollingPlanOperationCompleted;

    private System.Threading.SendOrPostCallback MatitemstockOperationCompleted;

    private System.Threading.SendOrPostCallback MatScrapDocNoOperationCompleted;

    private System.Threading.SendOrPostCallback GetAssetDataOperationCompleted;

    private System.Threading.SendOrPostCallback PostAssetDataOperationCompleted;

    private System.Threading.SendOrPostCallback R3AITStockDetailsOperationCompleted;

    private System.Threading.SendOrPostCallback GetIndentorDetailsByPOOperationCompleted;

    private System.Threading.SendOrPostCallback SetCustXD02OperationCompleted;

    private System.Threading.SendOrPostCallback SetMktgEmpAsCustomerOperationCompleted;

    private System.Threading.SendOrPostCallback GetTargetsOperationCompleted;

    private System.Threading.SendOrPostCallback GetAITStockRepOperationCompleted;

    private System.Threading.SendOrPostCallback GetAITStockRepCustOperationCompleted;

    private System.Threading.SendOrPostCallback R3getMonthwiseBasicOperationCompleted;

    private System.Threading.SendOrPostCallback GetProjectsOperationCompleted;

    private System.Threading.SendOrPostCallback setMaterialReservationOperationCompleted;

    private System.Threading.SendOrPostCallback setMatllResIssueOperationCompleted;

    private System.Threading.SendOrPostCallback setMatllResTransferOperationCompleted;

    private System.Threading.SendOrPostCallback setMaterialReservationRejectOperationCompleted;

    private System.Threading.SendOrPostCallback GetCCGLAmtOperationCompleted;

    private System.Threading.SendOrPostCallback GetEmpStockRepOldOperationCompleted;

    private System.Threading.SendOrPostCallback GetEmpStockRepOperationCompleted;

    private System.Threading.SendOrPostCallback getASUserCreationOperationCompleted;

    private System.Threading.SendOrPostCallback GetSalesDashboardOperationCompleted;

    private System.Threading.SendOrPostCallback GetSTNDetailsOperationCompleted;

    private System.Threading.SendOrPostCallback InsertManHoursOperationCompleted;

    private System.Threading.SendOrPostCallback GetAssetDataFromSAPOperationCompleted;

    private System.Threading.SendOrPostCallback GETAUCwisePOValueOperationCompleted;

    private System.Threading.SendOrPostCallback setAttendanceLOPPostOperationCompleted;

    private System.Threading.SendOrPostCallback setAttendanceLateMinLOPPostOperationCompleted;

    private System.Threading.SendOrPostCallback GETAUCwisePOValueNewOperationCompleted;

    private System.Threading.SendOrPostCallback GetPDSResultsOperationCompleted;

    private System.Threading.SendOrPostCallback InsertPDPostingOperationCompleted;

    private System.Threading.SendOrPostCallback GetInstitutionalQuationsOperationCompleted;

    private System.Threading.SendOrPostCallback InsertQuoAdvAmtOperationCompleted;

    private System.Threading.SendOrPostCallback InsertFinishedMaterialExtensionOperationCompleted;

    private System.Threading.SendOrPostCallback InsertFinishedMaterialAccountingExtensionOperationCompleted;

    private System.Threading.SendOrPostCallback GetRetestMatAlertMailDetailsOperationCompleted;

    private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;

    private System.Threading.SendOrPostCallback GetAccountsOperationCompleted;

    private System.Threading.SendOrPostCallback GetEMDCustomersOperationCompleted;

    private System.Threading.SendOrPostCallback GetCustomersListforOrdOperationCompleted;

    private System.Threading.SendOrPostCallback InsertEMDClosureOperationCompleted;

    private System.Threading.SendOrPostCallback GetCustomersListOperationCompleted;

    private System.Threading.SendOrPostCallback GetTableDataOperationCompleted;

    private System.Threading.SendOrPostCallback ReadmaterialOperationCompleted;

    private System.Threading.SendOrPostCallback InsertQuotatoinInSAPOperationCompleted;

    private System.Threading.SendOrPostCallback R3itemstockOperationCompleted;

    private System.Threading.SendOrPostCallback R3itemConsumptionOperationCompleted;

    private System.Threading.SendOrPostCallback InsertTourApprovalBillOperationCompleted;

    private System.Threading.SendOrPostCallback InsertTourExpenditureOperationCompleted;

    private System.Threading.SendOrPostCallback SetPRAllocation1OperationCompleted;

    private System.Threading.SendOrPostCallback SetPRAllocation2OperationCompleted;

    private System.Threading.SendOrPostCallback InsertLeaveEncashmentDetailsOperationCompleted;

    private System.Threading.SendOrPostCallback InsertTourApprovalBillDataTableOperationCompleted;

    private System.Threading.SendOrPostCallback PODetailsOperationCompleted;

    private System.Threading.SendOrPostCallback InsertConveyanceOperationCompleted;

    private System.Threading.SendOrPostCallback IndentsForClosingOperationCompleted;

    private System.Threading.SendOrPostCallback IndentCloseOperationCompleted;

    private System.Threading.SendOrPostCallback InsertLTAFinanceOperationCompleted;

    private System.Threading.SendOrPostCallback R3POdetailsOperationCompleted;

    private System.Threading.SendOrPostCallback R3EmpCreationOperationCompleted;

    private System.Threading.SendOrPostCallback R3EmpUpdationOperationCompleted;

    private System.Threading.SendOrPostCallback GetEmpMiscOSOperationCompleted;

    private System.Threading.SendOrPostCallback GetSequenceNosOperationCompleted;

    private System.Threading.SendOrPostCallback GetPaySlipforEmployeeOperationCompleted;

    private System.Threading.SendOrPostCallback InsertMiscExpensePostingOperationCompleted;

    private System.Threading.SendOrPostCallback R3PRDetailsOperationCompleted;

    private System.Threading.SendOrPostCallback InsertEmpInternalorderCreationOperationCompleted;

    private System.Threading.SendOrPostCallback InsertEmpVendorCreationOperationCompleted;

    private System.Threading.SendOrPostCallback ctcAccountLedgerOperationCompleted;

    private System.Threading.SendOrPostCallback InsertPhoneNumberOperationCompleted;

    private System.Threading.SendOrPostCallback UpdatePhoneNumberOperationCompleted;

    private System.Threading.SendOrPostCallback UpdateDeductionsInSalaryOperationCompleted;

    private System.Threading.SendOrPostCallback UpdateDeductionsInSalaryforRecExcessAmountOperationCompleted;

    private System.Threading.SendOrPostCallback SaveBillEntryOperationCompleted;

    private System.Threading.SendOrPostCallback GetMaterialsOperationCompleted;

    private System.Threading.SendOrPostCallback GetMaterialItemandCodeOperationCompleted;

    private System.Threading.SendOrPostCallback GetStorageLocationOperationCompleted;

    private System.Threading.SendOrPostCallback GetWareHouseNumberOperationCompleted;

    private System.Threading.SendOrPostCallback GetStorageTypeOperationCompleted;

    private System.Threading.SendOrPostCallback BaseUnitofMeasureOperationCompleted;

    private System.Threading.SendOrPostCallback MaterialGroupOperationCompleted;

    private System.Threading.SendOrPostCallback PurchasingGroupOperationCompleted;

    private System.Threading.SendOrPostCallback PurchasingKeyValueOperationCompleted;

    private System.Threading.SendOrPostCallback MRPTypeOperationCompleted;

    private System.Threading.SendOrPostCallback TempConditionsOperationCompleted;

    private System.Threading.SendOrPostCallback StockRemovalOperationCompleted;

    private System.Threading.SendOrPostCallback StockPlacementOperationCompleted;

    private System.Threading.SendOrPostCallback StorageSectionOperationCompleted;

    private System.Threading.SendOrPostCallback GetLotSizeOperationCompleted;

    private System.Threading.SendOrPostCallback GetQMControlKeyOperationCompleted;

    private System.Threading.SendOrPostCallback GetInspectionTypesOperationCompleted;

    private System.Threading.SendOrPostCallback GetMaxIdOperationCompleted;

    private System.Threading.SendOrPostCallback InsertRawMaterialsOperationCompleted;

    private System.Threading.SendOrPostCallback InsertPackagingItemOperationCompleted;

    private System.Threading.SendOrPostCallback InsertSparePartsItemOperationCompleted;

    private System.Threading.SendOrPostCallback InsertConsumablesItemOperationCompleted;

    private System.Threading.SendOrPostCallback InsertCapitalItemOperationCompleted;

    /// <remarks/>
    public SAPService(string URL)
    {
        this.Url = URL;
    }

    /// <remarks/>
    public event GetLastPOPriceCompletedEventHandler GetLastPOPriceCompleted;

    /// <remarks/>
    public event getEmpWageTypenBasicCompletedEventHandler getEmpWageTypenBasicCompleted;

    /// <remarks/>
    public event getMaterialQtyDetailsCompletedEventHandler getMaterialQtyDetailsCompleted;

    /// <remarks/>
    public event setMaterialQtyDetailsCompletedEventHandler setMaterialQtyDetailsCompleted;

    /// <remarks/>
    public event getEcomCustomersCompletedEventHandler getEcomCustomersCompleted;

    /// <remarks/>
    public event GetInvoiceandLRDetailsCompletedEventHandler GetInvoiceandLRDetailsCompleted;

    /// <remarks/>
    public event getFreeGoodsForCustomerCompletedEventHandler getFreeGoodsForCustomerCompleted;

    /// <remarks/>
    public event getinvoiceCompletedEventHandler getinvoiceCompleted;

    /// <remarks/>
    public event GetProductwiseBudgetCompletedEventHandler GetProductwiseBudgetCompleted;

    /// <remarks/>
    public event GetOutstandingCompletedEventHandler GetOutstandingCompleted;

    /// <remarks/>
    public event InsertMaterialstoragelocationExtensionCompletedEventHandler InsertMaterialstoragelocationExtensionCompleted;

    /// <remarks/>
    public event GetPromoInvoiceDetailsCompletedEventHandler GetPromoInvoiceDetailsCompleted;

    /// <remarks/>
    public event GetEmployeePromotiondetailsCompletedEventHandler GetEmployeePromotiondetailsCompleted;

    /// <remarks/>
    public event GetTableDataWithMultiCondnCompletedEventHandler GetTableDataWithMultiCondnCompleted;

    /// <remarks/>
    public event GetOpeningbalCompletedEventHandler GetOpeningbalCompleted;

    /// <remarks/>
    public event GetGRNSTNDataCompletedEventHandler GetGRNSTNDataCompleted;

    /// <remarks/>
    public event GetSetEcomBankChargesCompletedEventHandler GetSetEcomBankChargesCompleted;

    /// <remarks/>
    public event rfcquarantineCompletedEventHandler rfcquarantineCompleted;

    /// <remarks/>
    public event rfcpogatemoduleCompletedEventHandler rfcpogatemoduleCompleted;

    /// <remarks/>
    public event rfcQACompletedEventHandler rfcQACompleted;

    /// <remarks/>
    public event rfcPODetModuleCompletedEventHandler rfcPODetModuleCompleted;

    /// <remarks/>
    public event rfcToBeInspectedModuleCompletedEventHandler rfcToBeInspectedModuleCompleted;

    /// <remarks/>
    public event rfcShipperModuleCompletedEventHandler rfcShipperModuleCompleted;

    /// <remarks/>
    public event GetStockAtCFACompletedEventHandler GetStockAtCFACompleted;

    /// <remarks/>
    public event InsertFGOSInSAPCompletedEventHandler InsertFGOSInSAPCompleted;

    /// <remarks/>
    public event GetFGODetailsCompletedEventHandler GetFGODetailsCompleted;

    /// <remarks/>
    public event GetIntransitValuesCompletedEventHandler GetIntransitValuesCompleted;

    /// <remarks/>
    public event SetGetPostRTGSCompletedEventHandler SetGetPostRTGSCompleted;

    /// <remarks/>
    public event SetGetPostRTGSUpdatedCompletedEventHandler SetGetPostRTGSUpdatedCompleted;

    /// <remarks/>
    public event SetGetPRADetailsCompletedEventHandler SetGetPRADetailsCompleted;

    /// <remarks/>
    public event GetOrderToInvoiceCompletedEventHandler GetOrderToInvoiceCompleted;

    /// <remarks/>
    public event GetStockToPromoCompletedEventHandler GetStockToPromoCompleted;

    /// <remarks/>
    public event TaxClassificationCompletedEventHandler TaxClassificationCompleted;

    /// <remarks/>
    public event TaxActAssGroupCompletedEventHandler TaxActAssGroupCompleted;

    /// <remarks/>
    public event ItemAvailCompletedEventHandler ItemAvailCompleted;

    /// <remarks/>
    public event DivDetCompletedEventHandler DivDetCompleted;

    /// <remarks/>
    public event GenCatItemGroupCompletedEventHandler GenCatItemGroupCompleted;

    /// <remarks/>
    public event GetAssGroupCompletedEventHandler GetAssGroupCompleted;

    /// <remarks/>
    public event GetMatGroup1CompletedEventHandler GetMatGroup1Completed;

    /// <remarks/>
    public event GetLotSizeforFinCompletedEventHandler GetLotSizeforFinCompleted;

    /// <remarks/>
    public event GetMRPDetCompletedEventHandler GetMRPDetCompleted;

    /// <remarks/>
    public event GetMRPTypeDetCompletedEventHandler GetMRPTypeDetCompleted;

    /// <remarks/>
    public event GetValuationClassCompletedEventHandler GetValuationClassCompleted;

    /// <remarks/>
    public event GetProdHeirarchyCompletedEventHandler GetProdHeirarchyCompleted;

    /// <remarks/>
    public event FillddlTransGroupCompletedEventHandler FillddlTransGroupCompleted;

    /// <remarks/>
    public event GetProductHierarchyDetCompletedEventHandler GetProductHierarchyDetCompleted;

    /// <remarks/>
    public event GetControlCodeCompletedEventHandler GetControlCodeCompleted;

    /// <remarks/>
    public event GetTempCondCompletedEventHandler GetTempCondCompleted;

    /// <remarks/>
    public event InsertFinishedItemCompletedEventHandler InsertFinishedItemCompleted;

    /// <remarks/>
    public event FinishedMatExtensionCompletedEventHandler FinishedMatExtensionCompleted;

    /// <remarks/>
    public event PromoPrintDetCompletedEventHandler PromoPrintDetCompleted;

    /// <remarks/>
    public event SetGetVendorRegistrationCompletedEventHandler SetGetVendorRegistrationCompleted;

    /// <remarks/>
    public event GetOISConsigneeAddrCompletedEventHandler GetOISConsigneeAddrCompleted;

    /// <remarks/>
    public event GetOISMulitpleBatchesCompletedEventHandler GetOISMulitpleBatchesCompleted;

    /// <remarks/>
    public event OISCheckStockCompletedEventHandler OISCheckStockCompleted;

    /// <remarks/>
    public event OISCrateInvoiceCompletedEventHandler OISCrateInvoiceCompleted;

    /// <remarks/>
    public event GetPRADetCompletedEventHandler GetPRADetCompleted;

    /// <remarks/>
    public event InsertMiscExpensePostingMulitpleCompletedEventHandler InsertMiscExpensePostingMulitpleCompleted;

    /// <remarks/>
    public event GetPPDBdataCompletedEventHandler GetPPDBdataCompleted;

    /// <remarks/>
    public event InsertQuotationInterestRateCompletedEventHandler InsertQuotationInterestRateCompleted;

    /// <remarks/>
    public event InsertMktgAdvCompletedEventHandler InsertMktgAdvCompleted;

    /// <remarks/>
    public event GetMktgAdvDetCompletedEventHandler GetMktgAdvDetCompleted;

    /// <remarks/>
    public event ClearMktgAdvCompletedEventHandler ClearMktgAdvCompleted;

    /// <remarks/>
    public event GetInvoiceDetCompletedEventHandler GetInvoiceDetCompleted;

    /// <remarks/>
    public event InsertLabChemicalsItemCompletedEventHandler InsertLabChemicalsItemCompleted;

    /// <remarks/>
    public event InsertPromotionalItemCompletedEventHandler InsertPromotionalItemCompleted;

    /// <remarks/>
    public event InsertGlassWareItemCompletedEventHandler InsertGlassWareItemCompleted;

    /// <remarks/>
    public event InsertGeneralItemCompletedEventHandler InsertGeneralItemCompleted;

    /// <remarks/>
    public event InsertRDLabChemicalsItemCompletedEventHandler InsertRDLabChemicalsItemCompleted;

    /// <remarks/>
    public event InsertRDConsumablesItemCompletedEventHandler InsertRDConsumablesItemCompleted;

    /// <remarks/>
    public event InsertRDGlassWareItemCompletedEventHandler InsertRDGlassWareItemCompleted;

    /// <remarks/>
    public event InsertRDCapitalAssetsItemCompletedEventHandler InsertRDCapitalAssetsItemCompleted;

    /// <remarks/>
    public event InsertRDSparePartsItemCompletedEventHandler InsertRDSparePartsItemCompleted;

    /// <remarks/>
    public event GetMaterialInformationByItemCodeCompletedEventHandler GetMaterialInformationByItemCodeCompleted;

    /// <remarks/>
    public event InsertRawMaterialExtensionCompletedEventHandler InsertRawMaterialExtensionCompleted;

    /// <remarks/>
    public event InsertLabChemicalCodeExtensionCompletedEventHandler InsertLabChemicalCodeExtensionCompleted;

    /// <remarks/>
    public event InsertPackagingMaterialCodeExtensionCompletedEventHandler InsertPackagingMaterialCodeExtensionCompleted;

    /// <remarks/>
    public event InsertPromotinalMaterialCodeExtensionCompletedEventHandler InsertPromotinalMaterialCodeExtensionCompleted;

    /// <remarks/>
    public event InsertSparePartsMaterialCodeExtensionCompletedEventHandler InsertSparePartsMaterialCodeExtensionCompleted;

    /// <remarks/>
    public event InsertCapitalGoodsCodeExtensionCompletedEventHandler InsertCapitalGoodsCodeExtensionCompleted;

    /// <remarks/>
    public event InsertGlassWareMaterialCodeExtensionCompletedEventHandler InsertGlassWareMaterialCodeExtensionCompleted;

    /// <remarks/>
    public event InsertConsumableMaterialCodeExtensionCompletedEventHandler InsertConsumableMaterialCodeExtensionCompleted;

    /// <remarks/>
    public event PostIncomeTax_Sec586CompletedEventHandler PostIncomeTax_Sec586Completed;

    /// <remarks/>
    public event PostIncomeTax_Sec585CompletedEventHandler PostIncomeTax_Sec585Completed;

    /// <remarks/>
    public event PostIncomeTax_Sec584CompletedEventHandler PostIncomeTax_Sec584Completed;

    /// <remarks/>
    public event PostIncomeTax_Sec581CompletedEventHandler PostIncomeTax_Sec581Completed;

    /// <remarks/>
    public event PanCardUpdateCompletedEventHandler PanCardUpdateCompleted;

    /// <remarks/>
    public event R3CurrentMonthTransactionCompletedEventHandler R3CurrentMonthTransactionCompleted;

    /// <remarks/>
    public event R3ProductSalesCompletedEventHandler R3ProductSalesCompleted;

    /// <remarks/>
    public event R3AgeWiseCompletedEventHandler R3AgeWiseCompleted;

    /// <remarks/>
    public event R3OrderStatusCompletedEventHandler R3OrderStatusCompleted;

    /// <remarks/>
    public event R3RollingPlanCompletedEventHandler R3RollingPlanCompleted;

    /// <remarks/>
    public event MatitemstockCompletedEventHandler MatitemstockCompleted;

    /// <remarks/>
    public event MatScrapDocNoCompletedEventHandler MatScrapDocNoCompleted;

    /// <remarks/>
    public event GetAssetDataCompletedEventHandler GetAssetDataCompleted;

    /// <remarks/>
    public event PostAssetDataCompletedEventHandler PostAssetDataCompleted;

    /// <remarks/>
    public event R3AITStockDetailsCompletedEventHandler R3AITStockDetailsCompleted;

    /// <remarks/>
    public event GetIndentorDetailsByPOCompletedEventHandler GetIndentorDetailsByPOCompleted;

    /// <remarks/>
    public event SetCustXD02CompletedEventHandler SetCustXD02Completed;

    /// <remarks/>
    public event SetMktgEmpAsCustomerCompletedEventHandler SetMktgEmpAsCustomerCompleted;

    /// <remarks/>
    public event GetTargetsCompletedEventHandler GetTargetsCompleted;

    /// <remarks/>
    public event GetAITStockRepCompletedEventHandler GetAITStockRepCompleted;

    /// <remarks/>
    public event GetAITStockRepCustCompletedEventHandler GetAITStockRepCustCompleted;

    /// <remarks/>
    public event R3getMonthwiseBasicCompletedEventHandler R3getMonthwiseBasicCompleted;

    /// <remarks/>
    public event GetProjectsCompletedEventHandler GetProjectsCompleted;

    /// <remarks/>
    public event setMaterialReservationCompletedEventHandler setMaterialReservationCompleted;

    /// <remarks/>
    public event setMatllResIssueCompletedEventHandler setMatllResIssueCompleted;

    /// <remarks/>
    public event setMatllResTransferCompletedEventHandler setMatllResTransferCompleted;

    /// <remarks/>
    public event setMaterialReservationRejectCompletedEventHandler setMaterialReservationRejectCompleted;

    /// <remarks/>
    public event GetCCGLAmtCompletedEventHandler GetCCGLAmtCompleted;

    /// <remarks/>
    public event GetEmpStockRepOldCompletedEventHandler GetEmpStockRepOldCompleted;

    /// <remarks/>
    public event GetEmpStockRepCompletedEventHandler GetEmpStockRepCompleted;

    /// <remarks/>
    public event getASUserCreationCompletedEventHandler getASUserCreationCompleted;

    /// <remarks/>
    public event GetSalesDashboardCompletedEventHandler GetSalesDashboardCompleted;

    /// <remarks/>
    public event GetSTNDetailsCompletedEventHandler GetSTNDetailsCompleted;

    /// <remarks/>
    public event InsertManHoursCompletedEventHandler InsertManHoursCompleted;

    /// <remarks/>
    public event GetAssetDataFromSAPCompletedEventHandler GetAssetDataFromSAPCompleted;

    /// <remarks/>
    public event GETAUCwisePOValueCompletedEventHandler GETAUCwisePOValueCompleted;

    /// <remarks/>
    public event setAttendanceLOPPostCompletedEventHandler setAttendanceLOPPostCompleted;

    /// <remarks/>
    public event setAttendanceLateMinLOPPostCompletedEventHandler setAttendanceLateMinLOPPostCompleted;

    /// <remarks/>
    public event GETAUCwisePOValueNewCompletedEventHandler GETAUCwisePOValueNewCompleted;

    /// <remarks/>
    public event GetPDSResultsCompletedEventHandler GetPDSResultsCompleted;

    /// <remarks/>
    public event InsertPDPostingCompletedEventHandler InsertPDPostingCompleted;

    /// <remarks/>
    public event GetInstitutionalQuationsCompletedEventHandler GetInstitutionalQuationsCompleted;

    /// <remarks/>
    public event InsertQuoAdvAmtCompletedEventHandler InsertQuoAdvAmtCompleted;

    /// <remarks/>
    public event InsertFinishedMaterialExtensionCompletedEventHandler InsertFinishedMaterialExtensionCompleted;

    /// <remarks/>
    public event InsertFinishedMaterialAccountingExtensionCompletedEventHandler InsertFinishedMaterialAccountingExtensionCompleted;

    /// <remarks/>
    public event GetRetestMatAlertMailDetailsCompletedEventHandler GetRetestMatAlertMailDetailsCompleted;

    /// <remarks/>
    public event HelloWorldCompletedEventHandler HelloWorldCompleted;

    /// <remarks/>
    public event GetAccountsCompletedEventHandler GetAccountsCompleted;

    /// <remarks/>
    public event GetEMDCustomersCompletedEventHandler GetEMDCustomersCompleted;

    /// <remarks/>
    public event GetCustomersListforOrdCompletedEventHandler GetCustomersListforOrdCompleted;

    /// <remarks/>
    public event InsertEMDClosureCompletedEventHandler InsertEMDClosureCompleted;

    /// <remarks/>
    public event GetCustomersListCompletedEventHandler GetCustomersListCompleted;

    /// <remarks/>
    public event GetTableDataCompletedEventHandler GetTableDataCompleted;

    /// <remarks/>
    public event ReadmaterialCompletedEventHandler ReadmaterialCompleted;

    /// <remarks/>
    public event InsertQuotatoinInSAPCompletedEventHandler InsertQuotatoinInSAPCompleted;

    /// <remarks/>
    public event R3itemstockCompletedEventHandler R3itemstockCompleted;

    /// <remarks/>
    public event R3itemConsumptionCompletedEventHandler R3itemConsumptionCompleted;

    /// <remarks/>
    public event InsertTourApprovalBillCompletedEventHandler InsertTourApprovalBillCompleted;

    /// <remarks/>
    public event InsertTourExpenditureCompletedEventHandler InsertTourExpenditureCompleted;

    /// <remarks/>
    public event SetPRAllocation1CompletedEventHandler SetPRAllocation1Completed;

    /// <remarks/>
    public event SetPRAllocation2CompletedEventHandler SetPRAllocation2Completed;

    /// <remarks/>
    public event InsertLeaveEncashmentDetailsCompletedEventHandler InsertLeaveEncashmentDetailsCompleted;

    /// <remarks/>
    public event InsertTourApprovalBillDataTableCompletedEventHandler InsertTourApprovalBillDataTableCompleted;

    /// <remarks/>
    public event PODetailsCompletedEventHandler PODetailsCompleted;

    /// <remarks/>
    public event InsertConveyanceCompletedEventHandler InsertConveyanceCompleted;

    /// <remarks/>
    public event IndentsForClosingCompletedEventHandler IndentsForClosingCompleted;

    /// <remarks/>
    public event IndentCloseCompletedEventHandler IndentCloseCompleted;

    /// <remarks/>
    public event InsertLTAFinanceCompletedEventHandler InsertLTAFinanceCompleted;

    /// <remarks/>
    public event R3POdetailsCompletedEventHandler R3POdetailsCompleted;

    /// <remarks/>
    public event R3EmpCreationCompletedEventHandler R3EmpCreationCompleted;

    /// <remarks/>
    public event R3EmpUpdationCompletedEventHandler R3EmpUpdationCompleted;

    /// <remarks/>
    public event GetEmpMiscOSCompletedEventHandler GetEmpMiscOSCompleted;

    /// <remarks/>
    public event GetSequenceNosCompletedEventHandler GetSequenceNosCompleted;

    /// <remarks/>
    public event GetPaySlipforEmployeeCompletedEventHandler GetPaySlipforEmployeeCompleted;

    /// <remarks/>
    public event InsertMiscExpensePostingCompletedEventHandler InsertMiscExpensePostingCompleted;

    /// <remarks/>
    public event R3PRDetailsCompletedEventHandler R3PRDetailsCompleted;

    /// <remarks/>
    public event InsertEmpInternalorderCreationCompletedEventHandler InsertEmpInternalorderCreationCompleted;

    /// <remarks/>
    public event InsertEmpVendorCreationCompletedEventHandler InsertEmpVendorCreationCompleted;

    /// <remarks/>
    public event ctcAccountLedgerCompletedEventHandler ctcAccountLedgerCompleted;

    /// <remarks/>
    public event InsertPhoneNumberCompletedEventHandler InsertPhoneNumberCompleted;

    /// <remarks/>
    public event UpdatePhoneNumberCompletedEventHandler UpdatePhoneNumberCompleted;

    /// <remarks/>
    public event UpdateDeductionsInSalaryCompletedEventHandler UpdateDeductionsInSalaryCompleted;

    /// <remarks/>
    public event UpdateDeductionsInSalaryforRecExcessAmountCompletedEventHandler UpdateDeductionsInSalaryforRecExcessAmountCompleted;

    /// <remarks/>
    public event SaveBillEntryCompletedEventHandler SaveBillEntryCompleted;

    /// <remarks/>
    public event GetMaterialsCompletedEventHandler GetMaterialsCompleted;

    /// <remarks/>
    public event GetMaterialItemandCodeCompletedEventHandler GetMaterialItemandCodeCompleted;

    /// <remarks/>
    public event GetStorageLocationCompletedEventHandler GetStorageLocationCompleted;

    /// <remarks/>
    public event GetWareHouseNumberCompletedEventHandler GetWareHouseNumberCompleted;

    /// <remarks/>
    public event GetStorageTypeCompletedEventHandler GetStorageTypeCompleted;

    /// <remarks/>
    public event BaseUnitofMeasureCompletedEventHandler BaseUnitofMeasureCompleted;

    /// <remarks/>
    public event MaterialGroupCompletedEventHandler MaterialGroupCompleted;

    /// <remarks/>
    public event PurchasingGroupCompletedEventHandler PurchasingGroupCompleted;

    /// <remarks/>
    public event PurchasingKeyValueCompletedEventHandler PurchasingKeyValueCompleted;

    /// <remarks/>
    public event MRPTypeCompletedEventHandler MRPTypeCompleted;

    /// <remarks/>
    public event TempConditionsCompletedEventHandler TempConditionsCompleted;

    /// <remarks/>
    public event StockRemovalCompletedEventHandler StockRemovalCompleted;

    /// <remarks/>
    public event StockPlacementCompletedEventHandler StockPlacementCompleted;

    /// <remarks/>
    public event StorageSectionCompletedEventHandler StorageSectionCompleted;

    /// <remarks/>
    public event GetLotSizeCompletedEventHandler GetLotSizeCompleted;

    /// <remarks/>
    public event GetQMControlKeyCompletedEventHandler GetQMControlKeyCompleted;

    /// <remarks/>
    public event GetInspectionTypesCompletedEventHandler GetInspectionTypesCompleted;

    /// <remarks/>
    public event GetMaxIdCompletedEventHandler GetMaxIdCompleted;

    /// <remarks/>
    public event InsertRawMaterialsCompletedEventHandler InsertRawMaterialsCompleted;

    /// <remarks/>
    public event InsertPackagingItemCompletedEventHandler InsertPackagingItemCompleted;

    /// <remarks/>
    public event InsertSparePartsItemCompletedEventHandler InsertSparePartsItemCompleted;

    /// <remarks/>
    public event InsertConsumablesItemCompletedEventHandler InsertConsumablesItemCompleted;

    /// <remarks/>
    public event InsertCapitalItemCompletedEventHandler InsertCapitalItemCompleted;

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLastPOPrice", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetLastPOPrice(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetLastPOPrice", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetLastPOPrice(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetLastPOPrice", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetLastPOPrice(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetLastPOPriceAsync(System.Xml.XmlNode xDoc)
    {
        this.GetLastPOPriceAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetLastPOPriceAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetLastPOPriceOperationCompleted == null))
        {
            this.GetLastPOPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastPOPriceOperationCompleted);
        }
        this.InvokeAsync("GetLastPOPrice", new object[] {
                    xDoc}, this.GetLastPOPriceOperationCompleted, userState);
    }

    private void OnGetLastPOPriceOperationCompleted(object arg)
    {
        if ((this.GetLastPOPriceCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetLastPOPriceCompleted(this, new GetLastPOPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEmpWageTypenBasic", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode getEmpWageTypenBasic(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("getEmpWageTypenBasic", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegingetEmpWageTypenBasic(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("getEmpWageTypenBasic", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndgetEmpWageTypenBasic(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void getEmpWageTypenBasicAsync(System.Xml.XmlNode xDoc)
    {
        this.getEmpWageTypenBasicAsync(xDoc, null);
    }

    /// <remarks/>
    public void getEmpWageTypenBasicAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.getEmpWageTypenBasicOperationCompleted == null))
        {
            this.getEmpWageTypenBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmpWageTypenBasicOperationCompleted);
        }
        this.InvokeAsync("getEmpWageTypenBasic", new object[] {
                    xDoc}, this.getEmpWageTypenBasicOperationCompleted, userState);
    }

    private void OngetEmpWageTypenBasicOperationCompleted(object arg)
    {
        if ((this.getEmpWageTypenBasicCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getEmpWageTypenBasicCompleted(this, new getEmpWageTypenBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMaterialQtyDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode getMaterialQtyDetails(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("getMaterialQtyDetails", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegingetMaterialQtyDetails(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("getMaterialQtyDetails", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndgetMaterialQtyDetails(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void getMaterialQtyDetailsAsync(System.Xml.XmlNode xDoc)
    {
        this.getMaterialQtyDetailsAsync(xDoc, null);
    }

    /// <remarks/>
    public void getMaterialQtyDetailsAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.getMaterialQtyDetailsOperationCompleted == null))
        {
            this.getMaterialQtyDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMaterialQtyDetailsOperationCompleted);
        }
        this.InvokeAsync("getMaterialQtyDetails", new object[] {
                    xDoc}, this.getMaterialQtyDetailsOperationCompleted, userState);
    }

    private void OngetMaterialQtyDetailsOperationCompleted(object arg)
    {
        if ((this.getMaterialQtyDetailsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getMaterialQtyDetailsCompleted(this, new getMaterialQtyDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setMaterialQtyDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode setMaterialQtyDetails(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("setMaterialQtyDetails", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginsetMaterialQtyDetails(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("setMaterialQtyDetails", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndsetMaterialQtyDetails(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void setMaterialQtyDetailsAsync(System.Xml.XmlNode xDoc)
    {
        this.setMaterialQtyDetailsAsync(xDoc, null);
    }

    /// <remarks/>
    public void setMaterialQtyDetailsAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.setMaterialQtyDetailsOperationCompleted == null))
        {
            this.setMaterialQtyDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetMaterialQtyDetailsOperationCompleted);
        }
        this.InvokeAsync("setMaterialQtyDetails", new object[] {
                    xDoc}, this.setMaterialQtyDetailsOperationCompleted, userState);
    }

    private void OnsetMaterialQtyDetailsOperationCompleted(object arg)
    {
        if ((this.setMaterialQtyDetailsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setMaterialQtyDetailsCompleted(this, new setMaterialQtyDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEcomCustomers", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode getEcomCustomers(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("getEcomCustomers", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegingetEcomCustomers(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("getEcomCustomers", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndgetEcomCustomers(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void getEcomCustomersAsync(System.Xml.XmlNode xDoc)
    {
        this.getEcomCustomersAsync(xDoc, null);
    }

    /// <remarks/>
    public void getEcomCustomersAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.getEcomCustomersOperationCompleted == null))
        {
            this.getEcomCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEcomCustomersOperationCompleted);
        }
        this.InvokeAsync("getEcomCustomers", new object[] {
                    xDoc}, this.getEcomCustomersOperationCompleted, userState);
    }

    private void OngetEcomCustomersOperationCompleted(object arg)
    {
        if ((this.getEcomCustomersCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getEcomCustomersCompleted(this, new getEcomCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInvoiceandLRDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetInvoiceandLRDetails(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetInvoiceandLRDetails", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetInvoiceandLRDetails(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetInvoiceandLRDetails", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetInvoiceandLRDetails(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetInvoiceandLRDetailsAsync(System.Xml.XmlNode xDoc)
    {
        this.GetInvoiceandLRDetailsAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetInvoiceandLRDetailsAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetInvoiceandLRDetailsOperationCompleted == null))
        {
            this.GetInvoiceandLRDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvoiceandLRDetailsOperationCompleted);
        }
        this.InvokeAsync("GetInvoiceandLRDetails", new object[] {
                    xDoc}, this.GetInvoiceandLRDetailsOperationCompleted, userState);
    }

    private void OnGetInvoiceandLRDetailsOperationCompleted(object arg)
    {
        if ((this.GetInvoiceandLRDetailsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetInvoiceandLRDetailsCompleted(this, new GetInvoiceandLRDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFreeGoodsForCustomer", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode getFreeGoodsForCustomer(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("getFreeGoodsForCustomer", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegingetFreeGoodsForCustomer(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("getFreeGoodsForCustomer", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndgetFreeGoodsForCustomer(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void getFreeGoodsForCustomerAsync(System.Xml.XmlNode xDoc)
    {
        this.getFreeGoodsForCustomerAsync(xDoc, null);
    }

    /// <remarks/>
    public void getFreeGoodsForCustomerAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.getFreeGoodsForCustomerOperationCompleted == null))
        {
            this.getFreeGoodsForCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFreeGoodsForCustomerOperationCompleted);
        }
        this.InvokeAsync("getFreeGoodsForCustomer", new object[] {
                    xDoc}, this.getFreeGoodsForCustomerOperationCompleted, userState);
    }

    private void OngetFreeGoodsForCustomerOperationCompleted(object arg)
    {
        if ((this.getFreeGoodsForCustomerCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getFreeGoodsForCustomerCompleted(this, new getFreeGoodsForCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getinvoice", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode getinvoice(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("getinvoice", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Begingetinvoice(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("getinvoice", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode Endgetinvoice(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void getinvoiceAsync(System.Xml.XmlNode xDoc)
    {
        this.getinvoiceAsync(xDoc, null);
    }

    /// <remarks/>
    public void getinvoiceAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.getinvoiceOperationCompleted == null))
        {
            this.getinvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetinvoiceOperationCompleted);
        }
        this.InvokeAsync("getinvoice", new object[] {
                    xDoc}, this.getinvoiceOperationCompleted, userState);
    }

    private void OngetinvoiceOperationCompleted(object arg)
    {
        if ((this.getinvoiceCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getinvoiceCompleted(this, new getinvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductwiseBudget", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetProductwiseBudget(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetProductwiseBudget", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetProductwiseBudget(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetProductwiseBudget", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetProductwiseBudget(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetProductwiseBudgetAsync(System.Xml.XmlNode xDoc)
    {
        this.GetProductwiseBudgetAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetProductwiseBudgetAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetProductwiseBudgetOperationCompleted == null))
        {
            this.GetProductwiseBudgetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductwiseBudgetOperationCompleted);
        }
        this.InvokeAsync("GetProductwiseBudget", new object[] {
                    xDoc}, this.GetProductwiseBudgetOperationCompleted, userState);
    }

    private void OnGetProductwiseBudgetOperationCompleted(object arg)
    {
        if ((this.GetProductwiseBudgetCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetProductwiseBudgetCompleted(this, new GetProductwiseBudgetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOutstanding", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetOutstanding(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetOutstanding", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetOutstanding(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetOutstanding", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetOutstanding(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetOutstandingAsync(System.Xml.XmlNode xDoc)
    {
        this.GetOutstandingAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetOutstandingAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetOutstandingOperationCompleted == null))
        {
            this.GetOutstandingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutstandingOperationCompleted);
        }
        this.InvokeAsync("GetOutstanding", new object[] {
                    xDoc}, this.GetOutstandingOperationCompleted, userState);
    }

    private void OnGetOutstandingOperationCompleted(object arg)
    {
        if ((this.GetOutstandingCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetOutstandingCompleted(this, new GetOutstandingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertMaterialstoragelocationExtension", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertMaterialstoragelocationExtension(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertMaterialstoragelocationExtension", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertMaterialstoragelocationExtension(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertMaterialstoragelocationExtension", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertMaterialstoragelocationExtension(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertMaterialstoragelocationExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertMaterialstoragelocationExtensionAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertMaterialstoragelocationExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertMaterialstoragelocationExtensionOperationCompleted == null))
        {
            this.InsertMaterialstoragelocationExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMaterialstoragelocationExtensionOperationCompleted);
        }
        this.InvokeAsync("InsertMaterialstoragelocationExtension", new object[] {
                    xDoc,
                    Dest}, this.InsertMaterialstoragelocationExtensionOperationCompleted, userState);
    }

    private void OnInsertMaterialstoragelocationExtensionOperationCompleted(object arg)
    {
        if ((this.InsertMaterialstoragelocationExtensionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertMaterialstoragelocationExtensionCompleted(this, new InsertMaterialstoragelocationExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPromoInvoiceDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetPromoInvoiceDetails(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetPromoInvoiceDetails", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetPromoInvoiceDetails(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetPromoInvoiceDetails", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetPromoInvoiceDetails(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetPromoInvoiceDetailsAsync(System.Xml.XmlNode xDoc)
    {
        this.GetPromoInvoiceDetailsAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetPromoInvoiceDetailsAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetPromoInvoiceDetailsOperationCompleted == null))
        {
            this.GetPromoInvoiceDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPromoInvoiceDetailsOperationCompleted);
        }
        this.InvokeAsync("GetPromoInvoiceDetails", new object[] {
                    xDoc}, this.GetPromoInvoiceDetailsOperationCompleted, userState);
    }

    private void OnGetPromoInvoiceDetailsOperationCompleted(object arg)
    {
        if ((this.GetPromoInvoiceDetailsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPromoInvoiceDetailsCompleted(this, new GetPromoInvoiceDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeePromotiondetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetEmployeePromotiondetails(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetEmployeePromotiondetails", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetEmployeePromotiondetails(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetEmployeePromotiondetails", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetEmployeePromotiondetails(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetEmployeePromotiondetailsAsync(System.Xml.XmlNode xDoc)
    {
        this.GetEmployeePromotiondetailsAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetEmployeePromotiondetailsAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetEmployeePromotiondetailsOperationCompleted == null))
        {
            this.GetEmployeePromotiondetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeePromotiondetailsOperationCompleted);
        }
        this.InvokeAsync("GetEmployeePromotiondetails", new object[] {
                    xDoc}, this.GetEmployeePromotiondetailsOperationCompleted, userState);
    }

    private void OnGetEmployeePromotiondetailsOperationCompleted(object arg)
    {
        if ((this.GetEmployeePromotiondetailsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetEmployeePromotiondetailsCompleted(this, new GetEmployeePromotiondetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTableDataWithMultiCondn", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetTableDataWithMultiCondn(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetTableDataWithMultiCondn", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetTableDataWithMultiCondn(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetTableDataWithMultiCondn", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetTableDataWithMultiCondn(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetTableDataWithMultiCondnAsync(System.Xml.XmlNode xDoc)
    {
        this.GetTableDataWithMultiCondnAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetTableDataWithMultiCondnAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetTableDataWithMultiCondnOperationCompleted == null))
        {
            this.GetTableDataWithMultiCondnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTableDataWithMultiCondnOperationCompleted);
        }
        this.InvokeAsync("GetTableDataWithMultiCondn", new object[] {
                    xDoc}, this.GetTableDataWithMultiCondnOperationCompleted, userState);
    }

    private void OnGetTableDataWithMultiCondnOperationCompleted(object arg)
    {
        if ((this.GetTableDataWithMultiCondnCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetTableDataWithMultiCondnCompleted(this, new GetTableDataWithMultiCondnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOpeningbal", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetOpeningbal(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetOpeningbal", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetOpeningbal(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetOpeningbal", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetOpeningbal(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetOpeningbalAsync(System.Xml.XmlNode xDoc)
    {
        this.GetOpeningbalAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetOpeningbalAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetOpeningbalOperationCompleted == null))
        {
            this.GetOpeningbalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpeningbalOperationCompleted);
        }
        this.InvokeAsync("GetOpeningbal", new object[] {
                    xDoc}, this.GetOpeningbalOperationCompleted, userState);
    }

    private void OnGetOpeningbalOperationCompleted(object arg)
    {
        if ((this.GetOpeningbalCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetOpeningbalCompleted(this, new GetOpeningbalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGRNSTNData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetGRNSTNData(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetGRNSTNData", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetGRNSTNData(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetGRNSTNData", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetGRNSTNData(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetGRNSTNDataAsync(System.Xml.XmlNode xDoc)
    {
        this.GetGRNSTNDataAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetGRNSTNDataAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetGRNSTNDataOperationCompleted == null))
        {
            this.GetGRNSTNDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGRNSTNDataOperationCompleted);
        }
        this.InvokeAsync("GetGRNSTNData", new object[] {
                    xDoc}, this.GetGRNSTNDataOperationCompleted, userState);
    }

    private void OnGetGRNSTNDataOperationCompleted(object arg)
    {
        if ((this.GetGRNSTNDataCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetGRNSTNDataCompleted(this, new GetGRNSTNDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSetEcomBankCharges", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetSetEcomBankCharges(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetSetEcomBankCharges", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetSetEcomBankCharges(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetSetEcomBankCharges", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetSetEcomBankCharges(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetSetEcomBankChargesAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.GetSetEcomBankChargesAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void GetSetEcomBankChargesAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.GetSetEcomBankChargesOperationCompleted == null))
        {
            this.GetSetEcomBankChargesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSetEcomBankChargesOperationCompleted);
        }
        this.InvokeAsync("GetSetEcomBankCharges", new object[] {
                    xDoc,
                    Dest}, this.GetSetEcomBankChargesOperationCompleted, userState);
    }

    private void OnGetSetEcomBankChargesOperationCompleted(object arg)
    {
        if ((this.GetSetEcomBankChargesCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetSetEcomBankChargesCompleted(this, new GetSetEcomBankChargesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/rfcquarantine", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode rfcquarantine(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("rfcquarantine", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginrfcquarantine(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("rfcquarantine", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode Endrfcquarantine(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void rfcquarantineAsync(System.Xml.XmlNode xDoc)
    {
        this.rfcquarantineAsync(xDoc, null);
    }

    /// <remarks/>
    public void rfcquarantineAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.rfcquarantineOperationCompleted == null))
        {
            this.rfcquarantineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrfcquarantineOperationCompleted);
        }
        this.InvokeAsync("rfcquarantine", new object[] {
                    xDoc}, this.rfcquarantineOperationCompleted, userState);
    }

    private void OnrfcquarantineOperationCompleted(object arg)
    {
        if ((this.rfcquarantineCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.rfcquarantineCompleted(this, new rfcquarantineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/rfcpogatemodule", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode rfcpogatemodule(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("rfcpogatemodule", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginrfcpogatemodule(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("rfcpogatemodule", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode Endrfcpogatemodule(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void rfcpogatemoduleAsync(System.Xml.XmlNode xDoc)
    {
        this.rfcpogatemoduleAsync(xDoc, null);
    }

    /// <remarks/>
    public void rfcpogatemoduleAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.rfcpogatemoduleOperationCompleted == null))
        {
            this.rfcpogatemoduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrfcpogatemoduleOperationCompleted);
        }
        this.InvokeAsync("rfcpogatemodule", new object[] {
                    xDoc}, this.rfcpogatemoduleOperationCompleted, userState);
    }

    private void OnrfcpogatemoduleOperationCompleted(object arg)
    {
        if ((this.rfcpogatemoduleCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.rfcpogatemoduleCompleted(this, new rfcpogatemoduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/rfcQA", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode rfcQA(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("rfcQA", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginrfcQA(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("rfcQA", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndrfcQA(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void rfcQAAsync(System.Xml.XmlNode xDoc)
    {
        this.rfcQAAsync(xDoc, null);
    }

    /// <remarks/>
    public void rfcQAAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.rfcQAOperationCompleted == null))
        {
            this.rfcQAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrfcQAOperationCompleted);
        }
        this.InvokeAsync("rfcQA", new object[] {
                    xDoc}, this.rfcQAOperationCompleted, userState);
    }

    private void OnrfcQAOperationCompleted(object arg)
    {
        if ((this.rfcQACompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.rfcQACompleted(this, new rfcQACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/rfcPODetModule", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode rfcPODetModule(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("rfcPODetModule", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginrfcPODetModule(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("rfcPODetModule", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndrfcPODetModule(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void rfcPODetModuleAsync(System.Xml.XmlNode xDoc)
    {
        this.rfcPODetModuleAsync(xDoc, null);
    }

    /// <remarks/>
    public void rfcPODetModuleAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.rfcPODetModuleOperationCompleted == null))
        {
            this.rfcPODetModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrfcPODetModuleOperationCompleted);
        }
        this.InvokeAsync("rfcPODetModule", new object[] {
                    xDoc}, this.rfcPODetModuleOperationCompleted, userState);
    }

    private void OnrfcPODetModuleOperationCompleted(object arg)
    {
        if ((this.rfcPODetModuleCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.rfcPODetModuleCompleted(this, new rfcPODetModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/rfcToBeInspectedModule", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode rfcToBeInspectedModule(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("rfcToBeInspectedModule", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginrfcToBeInspectedModule(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("rfcToBeInspectedModule", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndrfcToBeInspectedModule(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void rfcToBeInspectedModuleAsync(System.Xml.XmlNode xDoc)
    {
        this.rfcToBeInspectedModuleAsync(xDoc, null);
    }

    /// <remarks/>
    public void rfcToBeInspectedModuleAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.rfcToBeInspectedModuleOperationCompleted == null))
        {
            this.rfcToBeInspectedModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrfcToBeInspectedModuleOperationCompleted);
        }
        this.InvokeAsync("rfcToBeInspectedModule", new object[] {
                    xDoc}, this.rfcToBeInspectedModuleOperationCompleted, userState);
    }

    private void OnrfcToBeInspectedModuleOperationCompleted(object arg)
    {
        if ((this.rfcToBeInspectedModuleCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.rfcToBeInspectedModuleCompleted(this, new rfcToBeInspectedModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/rfcShipperModule", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode rfcShipperModule(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("rfcShipperModule", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginrfcShipperModule(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("rfcShipperModule", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndrfcShipperModule(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void rfcShipperModuleAsync(System.Xml.XmlNode xDoc)
    {
        this.rfcShipperModuleAsync(xDoc, null);
    }

    /// <remarks/>
    public void rfcShipperModuleAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.rfcShipperModuleOperationCompleted == null))
        {
            this.rfcShipperModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrfcShipperModuleOperationCompleted);
        }
        this.InvokeAsync("rfcShipperModule", new object[] {
                    xDoc}, this.rfcShipperModuleOperationCompleted, userState);
    }

    private void OnrfcShipperModuleOperationCompleted(object arg)
    {
        if ((this.rfcShipperModuleCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.rfcShipperModuleCompleted(this, new rfcShipperModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStockAtCFA", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetStockAtCFA(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetStockAtCFA", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetStockAtCFA(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetStockAtCFA", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetStockAtCFA(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetStockAtCFAAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.GetStockAtCFAAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void GetStockAtCFAAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.GetStockAtCFAOperationCompleted == null))
        {
            this.GetStockAtCFAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockAtCFAOperationCompleted);
        }
        this.InvokeAsync("GetStockAtCFA", new object[] {
                    xDoc,
                    Dest}, this.GetStockAtCFAOperationCompleted, userState);
    }

    private void OnGetStockAtCFAOperationCompleted(object arg)
    {
        if ((this.GetStockAtCFACompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetStockAtCFACompleted(this, new GetStockAtCFACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertFGOSInSAP", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertFGOSInSAP(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertFGOSInSAP", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertFGOSInSAP(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertFGOSInSAP", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertFGOSInSAP(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertFGOSInSAPAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertFGOSInSAPAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertFGOSInSAPAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertFGOSInSAPOperationCompleted == null))
        {
            this.InsertFGOSInSAPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFGOSInSAPOperationCompleted);
        }
        this.InvokeAsync("InsertFGOSInSAP", new object[] {
                    xDoc,
                    Dest}, this.InsertFGOSInSAPOperationCompleted, userState);
    }

    private void OnInsertFGOSInSAPOperationCompleted(object arg)
    {
        if ((this.InsertFGOSInSAPCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertFGOSInSAPCompleted(this, new InsertFGOSInSAPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFGODetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetFGODetails(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetFGODetails", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetFGODetails(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetFGODetails", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetFGODetails(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetFGODetailsAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.GetFGODetailsAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void GetFGODetailsAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.GetFGODetailsOperationCompleted == null))
        {
            this.GetFGODetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFGODetailsOperationCompleted);
        }
        this.InvokeAsync("GetFGODetails", new object[] {
                    xDoc,
                    Dest}, this.GetFGODetailsOperationCompleted, userState);
    }

    private void OnGetFGODetailsOperationCompleted(object arg)
    {
        if ((this.GetFGODetailsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetFGODetailsCompleted(this, new GetFGODetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIntransitValues", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetIntransitValues(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetIntransitValues", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetIntransitValues(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetIntransitValues", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetIntransitValues(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetIntransitValuesAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.GetIntransitValuesAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void GetIntransitValuesAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.GetIntransitValuesOperationCompleted == null))
        {
            this.GetIntransitValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIntransitValuesOperationCompleted);
        }
        this.InvokeAsync("GetIntransitValues", new object[] {
                    xDoc,
                    Dest}, this.GetIntransitValuesOperationCompleted, userState);
    }

    private void OnGetIntransitValuesOperationCompleted(object arg)
    {
        if ((this.GetIntransitValuesCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetIntransitValuesCompleted(this, new GetIntransitValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetGetPostRTGS", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode SetGetPostRTGS(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("SetGetPostRTGS", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginSetGetPostRTGS(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("SetGetPostRTGS", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndSetGetPostRTGS(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void SetGetPostRTGSAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.SetGetPostRTGSAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void SetGetPostRTGSAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.SetGetPostRTGSOperationCompleted == null))
        {
            this.SetGetPostRTGSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGetPostRTGSOperationCompleted);
        }
        this.InvokeAsync("SetGetPostRTGS", new object[] {
                    xDoc,
                    Dest}, this.SetGetPostRTGSOperationCompleted, userState);
    }

    private void OnSetGetPostRTGSOperationCompleted(object arg)
    {
        if ((this.SetGetPostRTGSCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetGetPostRTGSCompleted(this, new SetGetPostRTGSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetGetPostRTGSUpdated", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode SetGetPostRTGSUpdated(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("SetGetPostRTGSUpdated", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginSetGetPostRTGSUpdated(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("SetGetPostRTGSUpdated", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndSetGetPostRTGSUpdated(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void SetGetPostRTGSUpdatedAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.SetGetPostRTGSUpdatedAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void SetGetPostRTGSUpdatedAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.SetGetPostRTGSUpdatedOperationCompleted == null))
        {
            this.SetGetPostRTGSUpdatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGetPostRTGSUpdatedOperationCompleted);
        }
        this.InvokeAsync("SetGetPostRTGSUpdated", new object[] {
                    xDoc,
                    Dest}, this.SetGetPostRTGSUpdatedOperationCompleted, userState);
    }

    private void OnSetGetPostRTGSUpdatedOperationCompleted(object arg)
    {
        if ((this.SetGetPostRTGSUpdatedCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetGetPostRTGSUpdatedCompleted(this, new SetGetPostRTGSUpdatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetGetPRADetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode SetGetPRADetails(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("SetGetPRADetails", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginSetGetPRADetails(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("SetGetPRADetails", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndSetGetPRADetails(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void SetGetPRADetailsAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.SetGetPRADetailsAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void SetGetPRADetailsAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.SetGetPRADetailsOperationCompleted == null))
        {
            this.SetGetPRADetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGetPRADetailsOperationCompleted);
        }
        this.InvokeAsync("SetGetPRADetails", new object[] {
                    xDoc,
                    Dest}, this.SetGetPRADetailsOperationCompleted, userState);
    }

    private void OnSetGetPRADetailsOperationCompleted(object arg)
    {
        if ((this.SetGetPRADetailsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetGetPRADetailsCompleted(this, new SetGetPRADetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrderToInvoice", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetOrderToInvoice(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetOrderToInvoice", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetOrderToInvoice(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetOrderToInvoice", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetOrderToInvoice(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetOrderToInvoiceAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.GetOrderToInvoiceAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void GetOrderToInvoiceAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.GetOrderToInvoiceOperationCompleted == null))
        {
            this.GetOrderToInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderToInvoiceOperationCompleted);
        }
        this.InvokeAsync("GetOrderToInvoice", new object[] {
                    xDoc,
                    Dest}, this.GetOrderToInvoiceOperationCompleted, userState);
    }

    private void OnGetOrderToInvoiceOperationCompleted(object arg)
    {
        if ((this.GetOrderToInvoiceCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetOrderToInvoiceCompleted(this, new GetOrderToInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStockToPromo", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetStockToPromo(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetStockToPromo", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetStockToPromo(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetStockToPromo", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetStockToPromo(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetStockToPromoAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.GetStockToPromoAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void GetStockToPromoAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.GetStockToPromoOperationCompleted == null))
        {
            this.GetStockToPromoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockToPromoOperationCompleted);
        }
        this.InvokeAsync("GetStockToPromo", new object[] {
                    xDoc,
                    Dest}, this.GetStockToPromoOperationCompleted, userState);
    }

    private void OnGetStockToPromoOperationCompleted(object arg)
    {
        if ((this.GetStockToPromoCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetStockToPromoCompleted(this, new GetStockToPromoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TaxClassification", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode TaxClassification(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("TaxClassification", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginTaxClassification(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("TaxClassification", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndTaxClassification(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void TaxClassificationAsync(System.Xml.XmlNode xDoc)
    {
        this.TaxClassificationAsync(xDoc, null);
    }

    /// <remarks/>
    public void TaxClassificationAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.TaxClassificationOperationCompleted == null))
        {
            this.TaxClassificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTaxClassificationOperationCompleted);
        }
        this.InvokeAsync("TaxClassification", new object[] {
                    xDoc}, this.TaxClassificationOperationCompleted, userState);
    }

    private void OnTaxClassificationOperationCompleted(object arg)
    {
        if ((this.TaxClassificationCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TaxClassificationCompleted(this, new TaxClassificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TaxActAssGroup", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode TaxActAssGroup(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("TaxActAssGroup", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginTaxActAssGroup(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("TaxActAssGroup", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndTaxActAssGroup(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void TaxActAssGroupAsync(System.Xml.XmlNode xDoc)
    {
        this.TaxActAssGroupAsync(xDoc, null);
    }

    /// <remarks/>
    public void TaxActAssGroupAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.TaxActAssGroupOperationCompleted == null))
        {
            this.TaxActAssGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTaxActAssGroupOperationCompleted);
        }
        this.InvokeAsync("TaxActAssGroup", new object[] {
                    xDoc}, this.TaxActAssGroupOperationCompleted, userState);
    }

    private void OnTaxActAssGroupOperationCompleted(object arg)
    {
        if ((this.TaxActAssGroupCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TaxActAssGroupCompleted(this, new TaxActAssGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ItemAvail", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode ItemAvail(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("ItemAvail", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginItemAvail(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("ItemAvail", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndItemAvail(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void ItemAvailAsync(System.Xml.XmlNode xDoc)
    {
        this.ItemAvailAsync(xDoc, null);
    }

    /// <remarks/>
    public void ItemAvailAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.ItemAvailOperationCompleted == null))
        {
            this.ItemAvailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnItemAvailOperationCompleted);
        }
        this.InvokeAsync("ItemAvail", new object[] {
                    xDoc}, this.ItemAvailOperationCompleted, userState);
    }

    private void OnItemAvailOperationCompleted(object arg)
    {
        if ((this.ItemAvailCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ItemAvailCompleted(this, new ItemAvailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DivDet", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode DivDet(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("DivDet", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginDivDet(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("DivDet", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndDivDet(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void DivDetAsync(System.Xml.XmlNode xDoc)
    {
        this.DivDetAsync(xDoc, null);
    }

    /// <remarks/>
    public void DivDetAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.DivDetOperationCompleted == null))
        {
            this.DivDetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDivDetOperationCompleted);
        }
        this.InvokeAsync("DivDet", new object[] {
                    xDoc}, this.DivDetOperationCompleted, userState);
    }

    private void OnDivDetOperationCompleted(object arg)
    {
        if ((this.DivDetCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DivDetCompleted(this, new DivDetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenCatItemGroup", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GenCatItemGroup(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GenCatItemGroup", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGenCatItemGroup(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GenCatItemGroup", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGenCatItemGroup(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GenCatItemGroupAsync(System.Xml.XmlNode xDoc)
    {
        this.GenCatItemGroupAsync(xDoc, null);
    }

    /// <remarks/>
    public void GenCatItemGroupAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GenCatItemGroupOperationCompleted == null))
        {
            this.GenCatItemGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenCatItemGroupOperationCompleted);
        }
        this.InvokeAsync("GenCatItemGroup", new object[] {
                    xDoc}, this.GenCatItemGroupOperationCompleted, userState);
    }

    private void OnGenCatItemGroupOperationCompleted(object arg)
    {
        if ((this.GenCatItemGroupCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GenCatItemGroupCompleted(this, new GenCatItemGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAssGroup", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetAssGroup(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetAssGroup", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetAssGroup(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetAssGroup", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetAssGroup(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetAssGroupAsync(System.Xml.XmlNode xDoc)
    {
        this.GetAssGroupAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetAssGroupAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetAssGroupOperationCompleted == null))
        {
            this.GetAssGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssGroupOperationCompleted);
        }
        this.InvokeAsync("GetAssGroup", new object[] {
                    xDoc}, this.GetAssGroupOperationCompleted, userState);
    }

    private void OnGetAssGroupOperationCompleted(object arg)
    {
        if ((this.GetAssGroupCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAssGroupCompleted(this, new GetAssGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMatGroup1", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetMatGroup1(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetMatGroup1", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetMatGroup1(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetMatGroup1", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetMatGroup1(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetMatGroup1Async(System.Xml.XmlNode xDoc)
    {
        this.GetMatGroup1Async(xDoc, null);
    }

    /// <remarks/>
    public void GetMatGroup1Async(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetMatGroup1OperationCompleted == null))
        {
            this.GetMatGroup1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMatGroup1OperationCompleted);
        }
        this.InvokeAsync("GetMatGroup1", new object[] {
                    xDoc}, this.GetMatGroup1OperationCompleted, userState);
    }

    private void OnGetMatGroup1OperationCompleted(object arg)
    {
        if ((this.GetMatGroup1Completed != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetMatGroup1Completed(this, new GetMatGroup1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLotSizeforFin", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetLotSizeforFin(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetLotSizeforFin", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetLotSizeforFin(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetLotSizeforFin", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetLotSizeforFin(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetLotSizeforFinAsync(System.Xml.XmlNode xDoc)
    {
        this.GetLotSizeforFinAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetLotSizeforFinAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetLotSizeforFinOperationCompleted == null))
        {
            this.GetLotSizeforFinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLotSizeforFinOperationCompleted);
        }
        this.InvokeAsync("GetLotSizeforFin", new object[] {
                    xDoc}, this.GetLotSizeforFinOperationCompleted, userState);
    }

    private void OnGetLotSizeforFinOperationCompleted(object arg)
    {
        if ((this.GetLotSizeforFinCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetLotSizeforFinCompleted(this, new GetLotSizeforFinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMRPDet", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetMRPDet(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetMRPDet", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetMRPDet(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetMRPDet", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetMRPDet(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetMRPDetAsync(System.Xml.XmlNode xDoc)
    {
        this.GetMRPDetAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetMRPDetAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetMRPDetOperationCompleted == null))
        {
            this.GetMRPDetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMRPDetOperationCompleted);
        }
        this.InvokeAsync("GetMRPDet", new object[] {
                    xDoc}, this.GetMRPDetOperationCompleted, userState);
    }

    private void OnGetMRPDetOperationCompleted(object arg)
    {
        if ((this.GetMRPDetCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetMRPDetCompleted(this, new GetMRPDetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMRPTypeDet", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetMRPTypeDet(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetMRPTypeDet", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetMRPTypeDet(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetMRPTypeDet", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetMRPTypeDet(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetMRPTypeDetAsync(System.Xml.XmlNode xDoc)
    {
        this.GetMRPTypeDetAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetMRPTypeDetAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetMRPTypeDetOperationCompleted == null))
        {
            this.GetMRPTypeDetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMRPTypeDetOperationCompleted);
        }
        this.InvokeAsync("GetMRPTypeDet", new object[] {
                    xDoc}, this.GetMRPTypeDetOperationCompleted, userState);
    }

    private void OnGetMRPTypeDetOperationCompleted(object arg)
    {
        if ((this.GetMRPTypeDetCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetMRPTypeDetCompleted(this, new GetMRPTypeDetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetValuationClass", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetValuationClass(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetValuationClass", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetValuationClass(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetValuationClass", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetValuationClass(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetValuationClassAsync(System.Xml.XmlNode xDoc)
    {
        this.GetValuationClassAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetValuationClassAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetValuationClassOperationCompleted == null))
        {
            this.GetValuationClassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValuationClassOperationCompleted);
        }
        this.InvokeAsync("GetValuationClass", new object[] {
                    xDoc}, this.GetValuationClassOperationCompleted, userState);
    }

    private void OnGetValuationClassOperationCompleted(object arg)
    {
        if ((this.GetValuationClassCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetValuationClassCompleted(this, new GetValuationClassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProdHeirarchy", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetProdHeirarchy(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetProdHeirarchy", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetProdHeirarchy(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetProdHeirarchy", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetProdHeirarchy(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetProdHeirarchyAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.GetProdHeirarchyAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void GetProdHeirarchyAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.GetProdHeirarchyOperationCompleted == null))
        {
            this.GetProdHeirarchyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProdHeirarchyOperationCompleted);
        }
        this.InvokeAsync("GetProdHeirarchy", new object[] {
                    xDoc,
                    Dest}, this.GetProdHeirarchyOperationCompleted, userState);
    }

    private void OnGetProdHeirarchyOperationCompleted(object arg)
    {
        if ((this.GetProdHeirarchyCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetProdHeirarchyCompleted(this, new GetProdHeirarchyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FillddlTransGroup", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode FillddlTransGroup(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("FillddlTransGroup", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginFillddlTransGroup(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("FillddlTransGroup", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndFillddlTransGroup(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void FillddlTransGroupAsync(System.Xml.XmlNode xDoc)
    {
        this.FillddlTransGroupAsync(xDoc, null);
    }

    /// <remarks/>
    public void FillddlTransGroupAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.FillddlTransGroupOperationCompleted == null))
        {
            this.FillddlTransGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFillddlTransGroupOperationCompleted);
        }
        this.InvokeAsync("FillddlTransGroup", new object[] {
                    xDoc}, this.FillddlTransGroupOperationCompleted, userState);
    }

    private void OnFillddlTransGroupOperationCompleted(object arg)
    {
        if ((this.FillddlTransGroupCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.FillddlTransGroupCompleted(this, new FillddlTransGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductHierarchyDet", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetProductHierarchyDet(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetProductHierarchyDet", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetProductHierarchyDet(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetProductHierarchyDet", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetProductHierarchyDet(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetProductHierarchyDetAsync(System.Xml.XmlNode xDoc)
    {
        this.GetProductHierarchyDetAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetProductHierarchyDetAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetProductHierarchyDetOperationCompleted == null))
        {
            this.GetProductHierarchyDetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductHierarchyDetOperationCompleted);
        }
        this.InvokeAsync("GetProductHierarchyDet", new object[] {
                    xDoc}, this.GetProductHierarchyDetOperationCompleted, userState);
    }

    private void OnGetProductHierarchyDetOperationCompleted(object arg)
    {
        if ((this.GetProductHierarchyDetCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetProductHierarchyDetCompleted(this, new GetProductHierarchyDetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetControlCode", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetControlCode(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetControlCode", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetControlCode(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetControlCode", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetControlCode(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetControlCodeAsync(System.Xml.XmlNode xDoc)
    {
        this.GetControlCodeAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetControlCodeAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetControlCodeOperationCompleted == null))
        {
            this.GetControlCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetControlCodeOperationCompleted);
        }
        this.InvokeAsync("GetControlCode", new object[] {
                    xDoc}, this.GetControlCodeOperationCompleted, userState);
    }

    private void OnGetControlCodeOperationCompleted(object arg)
    {
        if ((this.GetControlCodeCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetControlCodeCompleted(this, new GetControlCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTempCond", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetTempCond(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetTempCond", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetTempCond(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetTempCond", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetTempCond(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetTempCondAsync(System.Xml.XmlNode xDoc)
    {
        this.GetTempCondAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetTempCondAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetTempCondOperationCompleted == null))
        {
            this.GetTempCondOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTempCondOperationCompleted);
        }
        this.InvokeAsync("GetTempCond", new object[] {
                    xDoc}, this.GetTempCondOperationCompleted, userState);
    }

    private void OnGetTempCondOperationCompleted(object arg)
    {
        if ((this.GetTempCondCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetTempCondCompleted(this, new GetTempCondCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertFinishedItem", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertFinishedItem(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertFinishedItem", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertFinishedItem(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertFinishedItem", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertFinishedItem(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertFinishedItemAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertFinishedItemAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertFinishedItemAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertFinishedItemOperationCompleted == null))
        {
            this.InsertFinishedItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFinishedItemOperationCompleted);
        }
        this.InvokeAsync("InsertFinishedItem", new object[] {
                    xDoc,
                    Dest}, this.InsertFinishedItemOperationCompleted, userState);
    }

    private void OnInsertFinishedItemOperationCompleted(object arg)
    {
        if ((this.InsertFinishedItemCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertFinishedItemCompleted(this, new InsertFinishedItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FinishedMatExtension", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode FinishedMatExtension(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("FinishedMatExtension", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginFinishedMatExtension(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("FinishedMatExtension", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndFinishedMatExtension(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void FinishedMatExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.FinishedMatExtensionAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void FinishedMatExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.FinishedMatExtensionOperationCompleted == null))
        {
            this.FinishedMatExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishedMatExtensionOperationCompleted);
        }
        this.InvokeAsync("FinishedMatExtension", new object[] {
                    xDoc,
                    Dest}, this.FinishedMatExtensionOperationCompleted, userState);
    }

    private void OnFinishedMatExtensionOperationCompleted(object arg)
    {
        if ((this.FinishedMatExtensionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.FinishedMatExtensionCompleted(this, new FinishedMatExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PromoPrintDet", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode PromoPrintDet(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("PromoPrintDet", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginPromoPrintDet(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("PromoPrintDet", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndPromoPrintDet(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void PromoPrintDetAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.PromoPrintDetAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void PromoPrintDetAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.PromoPrintDetOperationCompleted == null))
        {
            this.PromoPrintDetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPromoPrintDetOperationCompleted);
        }
        this.InvokeAsync("PromoPrintDet", new object[] {
                    xDoc,
                    Dest}, this.PromoPrintDetOperationCompleted, userState);
    }

    private void OnPromoPrintDetOperationCompleted(object arg)
    {
        if ((this.PromoPrintDetCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.PromoPrintDetCompleted(this, new PromoPrintDetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetGetVendorRegistration", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode SetGetVendorRegistration(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("SetGetVendorRegistration", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginSetGetVendorRegistration(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("SetGetVendorRegistration", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndSetGetVendorRegistration(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void SetGetVendorRegistrationAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.SetGetVendorRegistrationAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void SetGetVendorRegistrationAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.SetGetVendorRegistrationOperationCompleted == null))
        {
            this.SetGetVendorRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGetVendorRegistrationOperationCompleted);
        }
        this.InvokeAsync("SetGetVendorRegistration", new object[] {
                    xDoc,
                    Dest}, this.SetGetVendorRegistrationOperationCompleted, userState);
    }

    private void OnSetGetVendorRegistrationOperationCompleted(object arg)
    {
        if ((this.SetGetVendorRegistrationCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetGetVendorRegistrationCompleted(this, new SetGetVendorRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOISConsigneeAddr", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetOISConsigneeAddr(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetOISConsigneeAddr", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetOISConsigneeAddr(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetOISConsigneeAddr", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetOISConsigneeAddr(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetOISConsigneeAddrAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.GetOISConsigneeAddrAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void GetOISConsigneeAddrAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.GetOISConsigneeAddrOperationCompleted == null))
        {
            this.GetOISConsigneeAddrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOISConsigneeAddrOperationCompleted);
        }
        this.InvokeAsync("GetOISConsigneeAddr", new object[] {
                    xDoc,
                    Dest}, this.GetOISConsigneeAddrOperationCompleted, userState);
    }

    private void OnGetOISConsigneeAddrOperationCompleted(object arg)
    {
        if ((this.GetOISConsigneeAddrCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetOISConsigneeAddrCompleted(this, new GetOISConsigneeAddrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOISMulitpleBatches", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetOISMulitpleBatches(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetOISMulitpleBatches", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetOISMulitpleBatches(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetOISMulitpleBatches", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetOISMulitpleBatches(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetOISMulitpleBatchesAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.GetOISMulitpleBatchesAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void GetOISMulitpleBatchesAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.GetOISMulitpleBatchesOperationCompleted == null))
        {
            this.GetOISMulitpleBatchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOISMulitpleBatchesOperationCompleted);
        }
        this.InvokeAsync("GetOISMulitpleBatches", new object[] {
                    xDoc,
                    Dest}, this.GetOISMulitpleBatchesOperationCompleted, userState);
    }

    private void OnGetOISMulitpleBatchesOperationCompleted(object arg)
    {
        if ((this.GetOISMulitpleBatchesCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetOISMulitpleBatchesCompleted(this, new GetOISMulitpleBatchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OISCheckStock", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode OISCheckStock(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("OISCheckStock", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginOISCheckStock(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("OISCheckStock", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndOISCheckStock(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void OISCheckStockAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.OISCheckStockAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void OISCheckStockAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.OISCheckStockOperationCompleted == null))
        {
            this.OISCheckStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOISCheckStockOperationCompleted);
        }
        this.InvokeAsync("OISCheckStock", new object[] {
                    xDoc,
                    Dest}, this.OISCheckStockOperationCompleted, userState);
    }

    private void OnOISCheckStockOperationCompleted(object arg)
    {
        if ((this.OISCheckStockCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.OISCheckStockCompleted(this, new OISCheckStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OISCrateInvoice", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode OISCrateInvoice(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("OISCrateInvoice", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginOISCrateInvoice(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("OISCrateInvoice", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndOISCrateInvoice(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void OISCrateInvoiceAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.OISCrateInvoiceAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void OISCrateInvoiceAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.OISCrateInvoiceOperationCompleted == null))
        {
            this.OISCrateInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOISCrateInvoiceOperationCompleted);
        }
        this.InvokeAsync("OISCrateInvoice", new object[] {
                    xDoc,
                    Dest}, this.OISCrateInvoiceOperationCompleted, userState);
    }

    private void OnOISCrateInvoiceOperationCompleted(object arg)
    {
        if ((this.OISCrateInvoiceCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.OISCrateInvoiceCompleted(this, new OISCrateInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPRADet", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetPRADet(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetPRADet", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetPRADet(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetPRADet", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetPRADet(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetPRADetAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.GetPRADetAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void GetPRADetAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.GetPRADetOperationCompleted == null))
        {
            this.GetPRADetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPRADetOperationCompleted);
        }
        this.InvokeAsync("GetPRADet", new object[] {
                    xDoc,
                    Dest}, this.GetPRADetOperationCompleted, userState);
    }

    private void OnGetPRADetOperationCompleted(object arg)
    {
        if ((this.GetPRADetCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPRADetCompleted(this, new GetPRADetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertMiscExpensePostingMulitple", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertMiscExpensePostingMulitple(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertMiscExpensePostingMulitple", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertMiscExpensePostingMulitple(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertMiscExpensePostingMulitple", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertMiscExpensePostingMulitple(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertMiscExpensePostingMulitpleAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertMiscExpensePostingMulitpleAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertMiscExpensePostingMulitpleAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertMiscExpensePostingMulitpleOperationCompleted == null))
        {
            this.InsertMiscExpensePostingMulitpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMiscExpensePostingMulitpleOperationCompleted);
        }
        this.InvokeAsync("InsertMiscExpensePostingMulitple", new object[] {
                    xDoc,
                    Dest}, this.InsertMiscExpensePostingMulitpleOperationCompleted, userState);
    }

    private void OnInsertMiscExpensePostingMulitpleOperationCompleted(object arg)
    {
        if ((this.InsertMiscExpensePostingMulitpleCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertMiscExpensePostingMulitpleCompleted(this, new InsertMiscExpensePostingMulitpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPPDBdata", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetPPDBdata(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetPPDBdata", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetPPDBdata(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetPPDBdata", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetPPDBdata(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetPPDBdataAsync(System.Xml.XmlNode xDoc)
    {
        this.GetPPDBdataAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetPPDBdataAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetPPDBdataOperationCompleted == null))
        {
            this.GetPPDBdataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPPDBdataOperationCompleted);
        }
        this.InvokeAsync("GetPPDBdata", new object[] {
                    xDoc}, this.GetPPDBdataOperationCompleted, userState);
    }

    private void OnGetPPDBdataOperationCompleted(object arg)
    {
        if ((this.GetPPDBdataCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPPDBdataCompleted(this, new GetPPDBdataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertQuotationInterestRate", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertQuotationInterestRate(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertQuotationInterestRate", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertQuotationInterestRate(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertQuotationInterestRate", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertQuotationInterestRate(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertQuotationInterestRateAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertQuotationInterestRateAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertQuotationInterestRateAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertQuotationInterestRateOperationCompleted == null))
        {
            this.InsertQuotationInterestRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertQuotationInterestRateOperationCompleted);
        }
        this.InvokeAsync("InsertQuotationInterestRate", new object[] {
                    xDoc,
                    Dest}, this.InsertQuotationInterestRateOperationCompleted, userState);
    }

    private void OnInsertQuotationInterestRateOperationCompleted(object arg)
    {
        if ((this.InsertQuotationInterestRateCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertQuotationInterestRateCompleted(this, new InsertQuotationInterestRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertMktgAdv", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertMktgAdv(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertMktgAdv", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertMktgAdv(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertMktgAdv", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertMktgAdv(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertMktgAdvAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertMktgAdvAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertMktgAdvAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertMktgAdvOperationCompleted == null))
        {
            this.InsertMktgAdvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMktgAdvOperationCompleted);
        }
        this.InvokeAsync("InsertMktgAdv", new object[] {
                    xDoc,
                    Dest}, this.InsertMktgAdvOperationCompleted, userState);
    }

    private void OnInsertMktgAdvOperationCompleted(object arg)
    {
        if ((this.InsertMktgAdvCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertMktgAdvCompleted(this, new InsertMktgAdvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMktgAdvDet", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetMktgAdvDet(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetMktgAdvDet", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetMktgAdvDet(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetMktgAdvDet", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetMktgAdvDet(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetMktgAdvDetAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.GetMktgAdvDetAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void GetMktgAdvDetAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.GetMktgAdvDetOperationCompleted == null))
        {
            this.GetMktgAdvDetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMktgAdvDetOperationCompleted);
        }
        this.InvokeAsync("GetMktgAdvDet", new object[] {
                    xDoc,
                    Dest}, this.GetMktgAdvDetOperationCompleted, userState);
    }

    private void OnGetMktgAdvDetOperationCompleted(object arg)
    {
        if ((this.GetMktgAdvDetCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetMktgAdvDetCompleted(this, new GetMktgAdvDetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClearMktgAdv", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode ClearMktgAdv(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("ClearMktgAdv", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginClearMktgAdv(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("ClearMktgAdv", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndClearMktgAdv(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void ClearMktgAdvAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.ClearMktgAdvAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void ClearMktgAdvAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.ClearMktgAdvOperationCompleted == null))
        {
            this.ClearMktgAdvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearMktgAdvOperationCompleted);
        }
        this.InvokeAsync("ClearMktgAdv", new object[] {
                    xDoc,
                    Dest}, this.ClearMktgAdvOperationCompleted, userState);
    }

    private void OnClearMktgAdvOperationCompleted(object arg)
    {
        if ((this.ClearMktgAdvCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ClearMktgAdvCompleted(this, new ClearMktgAdvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInvoiceDet", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetInvoiceDet(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetInvoiceDet", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetInvoiceDet(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetInvoiceDet", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetInvoiceDet(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetInvoiceDetAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.GetInvoiceDetAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void GetInvoiceDetAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.GetInvoiceDetOperationCompleted == null))
        {
            this.GetInvoiceDetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvoiceDetOperationCompleted);
        }
        this.InvokeAsync("GetInvoiceDet", new object[] {
                    xDoc,
                    Dest}, this.GetInvoiceDetOperationCompleted, userState);
    }

    private void OnGetInvoiceDetOperationCompleted(object arg)
    {
        if ((this.GetInvoiceDetCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetInvoiceDetCompleted(this, new GetInvoiceDetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertLabChemicalsItem", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertLabChemicalsItem(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertLabChemicalsItem", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertLabChemicalsItem(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertLabChemicalsItem", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertLabChemicalsItem(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertLabChemicalsItemAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertLabChemicalsItemAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertLabChemicalsItemAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertLabChemicalsItemOperationCompleted == null))
        {
            this.InsertLabChemicalsItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLabChemicalsItemOperationCompleted);
        }
        this.InvokeAsync("InsertLabChemicalsItem", new object[] {
                    xDoc,
                    Dest}, this.InsertLabChemicalsItemOperationCompleted, userState);
    }

    private void OnInsertLabChemicalsItemOperationCompleted(object arg)
    {
        if ((this.InsertLabChemicalsItemCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertLabChemicalsItemCompleted(this, new InsertLabChemicalsItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertPromotionalItem", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertPromotionalItem(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertPromotionalItem", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertPromotionalItem(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertPromotionalItem", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertPromotionalItem(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertPromotionalItemAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertPromotionalItemAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertPromotionalItemAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertPromotionalItemOperationCompleted == null))
        {
            this.InsertPromotionalItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPromotionalItemOperationCompleted);
        }
        this.InvokeAsync("InsertPromotionalItem", new object[] {
                    xDoc,
                    Dest}, this.InsertPromotionalItemOperationCompleted, userState);
    }

    private void OnInsertPromotionalItemOperationCompleted(object arg)
    {
        if ((this.InsertPromotionalItemCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertPromotionalItemCompleted(this, new InsertPromotionalItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertGlassWareItem", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertGlassWareItem(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertGlassWareItem", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertGlassWareItem(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertGlassWareItem", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertGlassWareItem(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertGlassWareItemAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertGlassWareItemAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertGlassWareItemAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertGlassWareItemOperationCompleted == null))
        {
            this.InsertGlassWareItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertGlassWareItemOperationCompleted);
        }
        this.InvokeAsync("InsertGlassWareItem", new object[] {
                    xDoc,
                    Dest}, this.InsertGlassWareItemOperationCompleted, userState);
    }

    private void OnInsertGlassWareItemOperationCompleted(object arg)
    {
        if ((this.InsertGlassWareItemCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertGlassWareItemCompleted(this, new InsertGlassWareItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertGeneralItem", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertGeneralItem(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertGeneralItem", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertGeneralItem(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertGeneralItem", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertGeneralItem(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertGeneralItemAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertGeneralItemAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertGeneralItemAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertGeneralItemOperationCompleted == null))
        {
            this.InsertGeneralItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertGeneralItemOperationCompleted);
        }
        this.InvokeAsync("InsertGeneralItem", new object[] {
                    xDoc,
                    Dest}, this.InsertGeneralItemOperationCompleted, userState);
    }

    private void OnInsertGeneralItemOperationCompleted(object arg)
    {
        if ((this.InsertGeneralItemCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertGeneralItemCompleted(this, new InsertGeneralItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertRDLabChemicalsItem", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertRDLabChemicalsItem(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertRDLabChemicalsItem", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertRDLabChemicalsItem(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertRDLabChemicalsItem", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertRDLabChemicalsItem(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertRDLabChemicalsItemAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertRDLabChemicalsItemAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertRDLabChemicalsItemAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertRDLabChemicalsItemOperationCompleted == null))
        {
            this.InsertRDLabChemicalsItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRDLabChemicalsItemOperationCompleted);
        }
        this.InvokeAsync("InsertRDLabChemicalsItem", new object[] {
                    xDoc,
                    Dest}, this.InsertRDLabChemicalsItemOperationCompleted, userState);
    }

    private void OnInsertRDLabChemicalsItemOperationCompleted(object arg)
    {
        if ((this.InsertRDLabChemicalsItemCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertRDLabChemicalsItemCompleted(this, new InsertRDLabChemicalsItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertRDConsumablesItem", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertRDConsumablesItem(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertRDConsumablesItem", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertRDConsumablesItem(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertRDConsumablesItem", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertRDConsumablesItem(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertRDConsumablesItemAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertRDConsumablesItemAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertRDConsumablesItemAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertRDConsumablesItemOperationCompleted == null))
        {
            this.InsertRDConsumablesItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRDConsumablesItemOperationCompleted);
        }
        this.InvokeAsync("InsertRDConsumablesItem", new object[] {
                    xDoc,
                    Dest}, this.InsertRDConsumablesItemOperationCompleted, userState);
    }

    private void OnInsertRDConsumablesItemOperationCompleted(object arg)
    {
        if ((this.InsertRDConsumablesItemCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertRDConsumablesItemCompleted(this, new InsertRDConsumablesItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertRDGlassWareItem", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertRDGlassWareItem(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertRDGlassWareItem", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertRDGlassWareItem(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertRDGlassWareItem", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertRDGlassWareItem(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertRDGlassWareItemAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertRDGlassWareItemAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertRDGlassWareItemAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertRDGlassWareItemOperationCompleted == null))
        {
            this.InsertRDGlassWareItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRDGlassWareItemOperationCompleted);
        }
        this.InvokeAsync("InsertRDGlassWareItem", new object[] {
                    xDoc,
                    Dest}, this.InsertRDGlassWareItemOperationCompleted, userState);
    }

    private void OnInsertRDGlassWareItemOperationCompleted(object arg)
    {
        if ((this.InsertRDGlassWareItemCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertRDGlassWareItemCompleted(this, new InsertRDGlassWareItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertRDCapitalAssetsItem", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertRDCapitalAssetsItem(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertRDCapitalAssetsItem", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertRDCapitalAssetsItem(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertRDCapitalAssetsItem", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertRDCapitalAssetsItem(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertRDCapitalAssetsItemAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertRDCapitalAssetsItemAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertRDCapitalAssetsItemAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertRDCapitalAssetsItemOperationCompleted == null))
        {
            this.InsertRDCapitalAssetsItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRDCapitalAssetsItemOperationCompleted);
        }
        this.InvokeAsync("InsertRDCapitalAssetsItem", new object[] {
                    xDoc,
                    Dest}, this.InsertRDCapitalAssetsItemOperationCompleted, userState);
    }

    private void OnInsertRDCapitalAssetsItemOperationCompleted(object arg)
    {
        if ((this.InsertRDCapitalAssetsItemCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertRDCapitalAssetsItemCompleted(this, new InsertRDCapitalAssetsItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertRDSparePartsItem", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertRDSparePartsItem(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertRDSparePartsItem", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertRDSparePartsItem(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertRDSparePartsItem", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertRDSparePartsItem(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertRDSparePartsItemAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertRDSparePartsItemAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertRDSparePartsItemAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertRDSparePartsItemOperationCompleted == null))
        {
            this.InsertRDSparePartsItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRDSparePartsItemOperationCompleted);
        }
        this.InvokeAsync("InsertRDSparePartsItem", new object[] {
                    xDoc,
                    Dest}, this.InsertRDSparePartsItemOperationCompleted, userState);
    }

    private void OnInsertRDSparePartsItemOperationCompleted(object arg)
    {
        if ((this.InsertRDSparePartsItemCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertRDSparePartsItemCompleted(this, new InsertRDSparePartsItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaterialInformationByItemCode", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetMaterialInformationByItemCode(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetMaterialInformationByItemCode", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetMaterialInformationByItemCode(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetMaterialInformationByItemCode", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetMaterialInformationByItemCode(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetMaterialInformationByItemCodeAsync(System.Xml.XmlNode xDoc)
    {
        this.GetMaterialInformationByItemCodeAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetMaterialInformationByItemCodeAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetMaterialInformationByItemCodeOperationCompleted == null))
        {
            this.GetMaterialInformationByItemCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaterialInformationByItemCodeOperationCompleted);
        }
        this.InvokeAsync("GetMaterialInformationByItemCode", new object[] {
                    xDoc}, this.GetMaterialInformationByItemCodeOperationCompleted, userState);
    }

    private void OnGetMaterialInformationByItemCodeOperationCompleted(object arg)
    {
        if ((this.GetMaterialInformationByItemCodeCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetMaterialInformationByItemCodeCompleted(this, new GetMaterialInformationByItemCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertRawMaterialExtension", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertRawMaterialExtension(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertRawMaterialExtension", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertRawMaterialExtension(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertRawMaterialExtension", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertRawMaterialExtension(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertRawMaterialExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertRawMaterialExtensionAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertRawMaterialExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertRawMaterialExtensionOperationCompleted == null))
        {
            this.InsertRawMaterialExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRawMaterialExtensionOperationCompleted);
        }
        this.InvokeAsync("InsertRawMaterialExtension", new object[] {
                    xDoc,
                    Dest}, this.InsertRawMaterialExtensionOperationCompleted, userState);
    }

    private void OnInsertRawMaterialExtensionOperationCompleted(object arg)
    {
        if ((this.InsertRawMaterialExtensionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertRawMaterialExtensionCompleted(this, new InsertRawMaterialExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertLabChemicalCodeExtension", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertLabChemicalCodeExtension(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertLabChemicalCodeExtension", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertLabChemicalCodeExtension(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertLabChemicalCodeExtension", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertLabChemicalCodeExtension(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertLabChemicalCodeExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertLabChemicalCodeExtensionAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertLabChemicalCodeExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertLabChemicalCodeExtensionOperationCompleted == null))
        {
            this.InsertLabChemicalCodeExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLabChemicalCodeExtensionOperationCompleted);
        }
        this.InvokeAsync("InsertLabChemicalCodeExtension", new object[] {
                    xDoc,
                    Dest}, this.InsertLabChemicalCodeExtensionOperationCompleted, userState);
    }

    private void OnInsertLabChemicalCodeExtensionOperationCompleted(object arg)
    {
        if ((this.InsertLabChemicalCodeExtensionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertLabChemicalCodeExtensionCompleted(this, new InsertLabChemicalCodeExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertPackagingMaterialCodeExtension", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertPackagingMaterialCodeExtension(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertPackagingMaterialCodeExtension", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertPackagingMaterialCodeExtension(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertPackagingMaterialCodeExtension", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertPackagingMaterialCodeExtension(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertPackagingMaterialCodeExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertPackagingMaterialCodeExtensionAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertPackagingMaterialCodeExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertPackagingMaterialCodeExtensionOperationCompleted == null))
        {
            this.InsertPackagingMaterialCodeExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPackagingMaterialCodeExtensionOperationCompleted);
        }
        this.InvokeAsync("InsertPackagingMaterialCodeExtension", new object[] {
                    xDoc,
                    Dest}, this.InsertPackagingMaterialCodeExtensionOperationCompleted, userState);
    }

    private void OnInsertPackagingMaterialCodeExtensionOperationCompleted(object arg)
    {
        if ((this.InsertPackagingMaterialCodeExtensionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertPackagingMaterialCodeExtensionCompleted(this, new InsertPackagingMaterialCodeExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertPromotinalMaterialCodeExtension", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertPromotinalMaterialCodeExtension(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertPromotinalMaterialCodeExtension", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertPromotinalMaterialCodeExtension(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertPromotinalMaterialCodeExtension", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertPromotinalMaterialCodeExtension(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertPromotinalMaterialCodeExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertPromotinalMaterialCodeExtensionAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertPromotinalMaterialCodeExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertPromotinalMaterialCodeExtensionOperationCompleted == null))
        {
            this.InsertPromotinalMaterialCodeExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPromotinalMaterialCodeExtensionOperationCompleted);
        }
        this.InvokeAsync("InsertPromotinalMaterialCodeExtension", new object[] {
                    xDoc,
                    Dest}, this.InsertPromotinalMaterialCodeExtensionOperationCompleted, userState);
    }

    private void OnInsertPromotinalMaterialCodeExtensionOperationCompleted(object arg)
    {
        if ((this.InsertPromotinalMaterialCodeExtensionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertPromotinalMaterialCodeExtensionCompleted(this, new InsertPromotinalMaterialCodeExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertSparePartsMaterialCodeExtension", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertSparePartsMaterialCodeExtension(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertSparePartsMaterialCodeExtension", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertSparePartsMaterialCodeExtension(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertSparePartsMaterialCodeExtension", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertSparePartsMaterialCodeExtension(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertSparePartsMaterialCodeExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertSparePartsMaterialCodeExtensionAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertSparePartsMaterialCodeExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertSparePartsMaterialCodeExtensionOperationCompleted == null))
        {
            this.InsertSparePartsMaterialCodeExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSparePartsMaterialCodeExtensionOperationCompleted);
        }
        this.InvokeAsync("InsertSparePartsMaterialCodeExtension", new object[] {
                    xDoc,
                    Dest}, this.InsertSparePartsMaterialCodeExtensionOperationCompleted, userState);
    }

    private void OnInsertSparePartsMaterialCodeExtensionOperationCompleted(object arg)
    {
        if ((this.InsertSparePartsMaterialCodeExtensionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertSparePartsMaterialCodeExtensionCompleted(this, new InsertSparePartsMaterialCodeExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCapitalGoodsCodeExtension", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertCapitalGoodsCodeExtension(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertCapitalGoodsCodeExtension", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertCapitalGoodsCodeExtension(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertCapitalGoodsCodeExtension", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertCapitalGoodsCodeExtension(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertCapitalGoodsCodeExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertCapitalGoodsCodeExtensionAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertCapitalGoodsCodeExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertCapitalGoodsCodeExtensionOperationCompleted == null))
        {
            this.InsertCapitalGoodsCodeExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCapitalGoodsCodeExtensionOperationCompleted);
        }
        this.InvokeAsync("InsertCapitalGoodsCodeExtension", new object[] {
                    xDoc,
                    Dest}, this.InsertCapitalGoodsCodeExtensionOperationCompleted, userState);
    }

    private void OnInsertCapitalGoodsCodeExtensionOperationCompleted(object arg)
    {
        if ((this.InsertCapitalGoodsCodeExtensionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertCapitalGoodsCodeExtensionCompleted(this, new InsertCapitalGoodsCodeExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertGlassWareMaterialCodeExtension", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertGlassWareMaterialCodeExtension(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertGlassWareMaterialCodeExtension", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertGlassWareMaterialCodeExtension(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertGlassWareMaterialCodeExtension", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertGlassWareMaterialCodeExtension(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertGlassWareMaterialCodeExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertGlassWareMaterialCodeExtensionAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertGlassWareMaterialCodeExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertGlassWareMaterialCodeExtensionOperationCompleted == null))
        {
            this.InsertGlassWareMaterialCodeExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertGlassWareMaterialCodeExtensionOperationCompleted);
        }
        this.InvokeAsync("InsertGlassWareMaterialCodeExtension", new object[] {
                    xDoc,
                    Dest}, this.InsertGlassWareMaterialCodeExtensionOperationCompleted, userState);
    }

    private void OnInsertGlassWareMaterialCodeExtensionOperationCompleted(object arg)
    {
        if ((this.InsertGlassWareMaterialCodeExtensionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertGlassWareMaterialCodeExtensionCompleted(this, new InsertGlassWareMaterialCodeExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertConsumableMaterialCodeExtension", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertConsumableMaterialCodeExtension(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertConsumableMaterialCodeExtension", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertConsumableMaterialCodeExtension(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertConsumableMaterialCodeExtension", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertConsumableMaterialCodeExtension(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertConsumableMaterialCodeExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertConsumableMaterialCodeExtensionAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertConsumableMaterialCodeExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertConsumableMaterialCodeExtensionOperationCompleted == null))
        {
            this.InsertConsumableMaterialCodeExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertConsumableMaterialCodeExtensionOperationCompleted);
        }
        this.InvokeAsync("InsertConsumableMaterialCodeExtension", new object[] {
                    xDoc,
                    Dest}, this.InsertConsumableMaterialCodeExtensionOperationCompleted, userState);
    }

    private void OnInsertConsumableMaterialCodeExtensionOperationCompleted(object arg)
    {
        if ((this.InsertConsumableMaterialCodeExtensionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertConsumableMaterialCodeExtensionCompleted(this, new InsertConsumableMaterialCodeExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostIncomeTax_Sec586", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode PostIncomeTax_Sec586(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("PostIncomeTax_Sec586", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginPostIncomeTax_Sec586(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("PostIncomeTax_Sec586", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndPostIncomeTax_Sec586(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void PostIncomeTax_Sec586Async(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.PostIncomeTax_Sec586Async(xDoc, Dest, null);
    }

    /// <remarks/>
    public void PostIncomeTax_Sec586Async(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.PostIncomeTax_Sec586OperationCompleted == null))
        {
            this.PostIncomeTax_Sec586OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostIncomeTax_Sec586OperationCompleted);
        }
        this.InvokeAsync("PostIncomeTax_Sec586", new object[] {
                    xDoc,
                    Dest}, this.PostIncomeTax_Sec586OperationCompleted, userState);
    }

    private void OnPostIncomeTax_Sec586OperationCompleted(object arg)
    {
        if ((this.PostIncomeTax_Sec586Completed != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.PostIncomeTax_Sec586Completed(this, new PostIncomeTax_Sec586CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostIncomeTax_Sec585", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode PostIncomeTax_Sec585(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("PostIncomeTax_Sec585", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginPostIncomeTax_Sec585(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("PostIncomeTax_Sec585", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndPostIncomeTax_Sec585(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void PostIncomeTax_Sec585Async(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.PostIncomeTax_Sec585Async(xDoc, Dest, null);
    }

    /// <remarks/>
    public void PostIncomeTax_Sec585Async(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.PostIncomeTax_Sec585OperationCompleted == null))
        {
            this.PostIncomeTax_Sec585OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostIncomeTax_Sec585OperationCompleted);
        }
        this.InvokeAsync("PostIncomeTax_Sec585", new object[] {
                    xDoc,
                    Dest}, this.PostIncomeTax_Sec585OperationCompleted, userState);
    }

    private void OnPostIncomeTax_Sec585OperationCompleted(object arg)
    {
        if ((this.PostIncomeTax_Sec585Completed != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.PostIncomeTax_Sec585Completed(this, new PostIncomeTax_Sec585CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostIncomeTax_Sec584", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode PostIncomeTax_Sec584(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("PostIncomeTax_Sec584", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginPostIncomeTax_Sec584(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("PostIncomeTax_Sec584", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndPostIncomeTax_Sec584(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void PostIncomeTax_Sec584Async(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.PostIncomeTax_Sec584Async(xDoc, Dest, null);
    }

    /// <remarks/>
    public void PostIncomeTax_Sec584Async(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.PostIncomeTax_Sec584OperationCompleted == null))
        {
            this.PostIncomeTax_Sec584OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostIncomeTax_Sec584OperationCompleted);
        }
        this.InvokeAsync("PostIncomeTax_Sec584", new object[] {
                    xDoc,
                    Dest}, this.PostIncomeTax_Sec584OperationCompleted, userState);
    }

    private void OnPostIncomeTax_Sec584OperationCompleted(object arg)
    {
        if ((this.PostIncomeTax_Sec584Completed != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.PostIncomeTax_Sec584Completed(this, new PostIncomeTax_Sec584CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostIncomeTax_Sec581", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode PostIncomeTax_Sec581(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("PostIncomeTax_Sec581", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginPostIncomeTax_Sec581(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("PostIncomeTax_Sec581", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndPostIncomeTax_Sec581(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void PostIncomeTax_Sec581Async(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.PostIncomeTax_Sec581Async(xDoc, Dest, null);
    }

    /// <remarks/>
    public void PostIncomeTax_Sec581Async(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.PostIncomeTax_Sec581OperationCompleted == null))
        {
            this.PostIncomeTax_Sec581OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostIncomeTax_Sec581OperationCompleted);
        }
        this.InvokeAsync("PostIncomeTax_Sec581", new object[] {
                    xDoc,
                    Dest}, this.PostIncomeTax_Sec581OperationCompleted, userState);
    }

    private void OnPostIncomeTax_Sec581OperationCompleted(object arg)
    {
        if ((this.PostIncomeTax_Sec581Completed != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.PostIncomeTax_Sec581Completed(this, new PostIncomeTax_Sec581CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PanCardUpdate", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode PanCardUpdate(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("PanCardUpdate", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginPanCardUpdate(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("PanCardUpdate", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndPanCardUpdate(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void PanCardUpdateAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.PanCardUpdateAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void PanCardUpdateAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.PanCardUpdateOperationCompleted == null))
        {
            this.PanCardUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPanCardUpdateOperationCompleted);
        }
        this.InvokeAsync("PanCardUpdate", new object[] {
                    xDoc,
                    Dest}, this.PanCardUpdateOperationCompleted, userState);
    }

    private void OnPanCardUpdateOperationCompleted(object arg)
    {
        if ((this.PanCardUpdateCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.PanCardUpdateCompleted(this, new PanCardUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/R3CurrentMonthTransaction", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode R3CurrentMonthTransaction(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("R3CurrentMonthTransaction", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginR3CurrentMonthTransaction(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("R3CurrentMonthTransaction", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndR3CurrentMonthTransaction(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void R3CurrentMonthTransactionAsync(System.Xml.XmlNode xDoc)
    {
        this.R3CurrentMonthTransactionAsync(xDoc, null);
    }

    /// <remarks/>
    public void R3CurrentMonthTransactionAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.R3CurrentMonthTransactionOperationCompleted == null))
        {
            this.R3CurrentMonthTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnR3CurrentMonthTransactionOperationCompleted);
        }
        this.InvokeAsync("R3CurrentMonthTransaction", new object[] {
                    xDoc}, this.R3CurrentMonthTransactionOperationCompleted, userState);
    }

    private void OnR3CurrentMonthTransactionOperationCompleted(object arg)
    {
        if ((this.R3CurrentMonthTransactionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.R3CurrentMonthTransactionCompleted(this, new R3CurrentMonthTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/R3ProductSales", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode R3ProductSales(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("R3ProductSales", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginR3ProductSales(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("R3ProductSales", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndR3ProductSales(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void R3ProductSalesAsync(System.Xml.XmlNode xDoc)
    {
        this.R3ProductSalesAsync(xDoc, null);
    }

    /// <remarks/>
    public void R3ProductSalesAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.R3ProductSalesOperationCompleted == null))
        {
            this.R3ProductSalesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnR3ProductSalesOperationCompleted);
        }
        this.InvokeAsync("R3ProductSales", new object[] {
                    xDoc}, this.R3ProductSalesOperationCompleted, userState);
    }

    private void OnR3ProductSalesOperationCompleted(object arg)
    {
        if ((this.R3ProductSalesCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.R3ProductSalesCompleted(this, new R3ProductSalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/R3AgeWise", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode R3AgeWise(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("R3AgeWise", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginR3AgeWise(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("R3AgeWise", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndR3AgeWise(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void R3AgeWiseAsync(System.Xml.XmlNode xDoc)
    {
        this.R3AgeWiseAsync(xDoc, null);
    }

    /// <remarks/>
    public void R3AgeWiseAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.R3AgeWiseOperationCompleted == null))
        {
            this.R3AgeWiseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnR3AgeWiseOperationCompleted);
        }
        this.InvokeAsync("R3AgeWise", new object[] {
                    xDoc}, this.R3AgeWiseOperationCompleted, userState);
    }

    private void OnR3AgeWiseOperationCompleted(object arg)
    {
        if ((this.R3AgeWiseCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.R3AgeWiseCompleted(this, new R3AgeWiseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/R3OrderStatus", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode R3OrderStatus(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("R3OrderStatus", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginR3OrderStatus(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("R3OrderStatus", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndR3OrderStatus(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void R3OrderStatusAsync(System.Xml.XmlNode xDoc)
    {
        this.R3OrderStatusAsync(xDoc, null);
    }

    /// <remarks/>
    public void R3OrderStatusAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.R3OrderStatusOperationCompleted == null))
        {
            this.R3OrderStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnR3OrderStatusOperationCompleted);
        }
        this.InvokeAsync("R3OrderStatus", new object[] {
                    xDoc}, this.R3OrderStatusOperationCompleted, userState);
    }

    private void OnR3OrderStatusOperationCompleted(object arg)
    {
        if ((this.R3OrderStatusCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.R3OrderStatusCompleted(this, new R3OrderStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/R3RollingPlan", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode R3RollingPlan(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("R3RollingPlan", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginR3RollingPlan(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("R3RollingPlan", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndR3RollingPlan(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void R3RollingPlanAsync(System.Xml.XmlNode xDoc)
    {
        this.R3RollingPlanAsync(xDoc, null);
    }

    /// <remarks/>
    public void R3RollingPlanAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.R3RollingPlanOperationCompleted == null))
        {
            this.R3RollingPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnR3RollingPlanOperationCompleted);
        }
        this.InvokeAsync("R3RollingPlan", new object[] {
                    xDoc}, this.R3RollingPlanOperationCompleted, userState);
    }

    private void OnR3RollingPlanOperationCompleted(object arg)
    {
        if ((this.R3RollingPlanCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.R3RollingPlanCompleted(this, new R3RollingPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Matitemstock", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode Matitemstock(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("Matitemstock", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginMatitemstock(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Matitemstock", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndMatitemstock(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void MatitemstockAsync(System.Xml.XmlNode xDoc)
    {
        this.MatitemstockAsync(xDoc, null);
    }

    /// <remarks/>
    public void MatitemstockAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.MatitemstockOperationCompleted == null))
        {
            this.MatitemstockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMatitemstockOperationCompleted);
        }
        this.InvokeAsync("Matitemstock", new object[] {
                    xDoc}, this.MatitemstockOperationCompleted, userState);
    }

    private void OnMatitemstockOperationCompleted(object arg)
    {
        if ((this.MatitemstockCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.MatitemstockCompleted(this, new MatitemstockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MatScrapDocNo", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode MatScrapDocNo(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("MatScrapDocNo", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginMatScrapDocNo(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("MatScrapDocNo", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndMatScrapDocNo(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void MatScrapDocNoAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.MatScrapDocNoAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void MatScrapDocNoAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.MatScrapDocNoOperationCompleted == null))
        {
            this.MatScrapDocNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMatScrapDocNoOperationCompleted);
        }
        this.InvokeAsync("MatScrapDocNo", new object[] {
                    xDoc,
                    Dest}, this.MatScrapDocNoOperationCompleted, userState);
    }

    private void OnMatScrapDocNoOperationCompleted(object arg)
    {
        if ((this.MatScrapDocNoCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.MatScrapDocNoCompleted(this, new MatScrapDocNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAssetData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetAssetData(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetAssetData", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetAssetData(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetAssetData", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetAssetData(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetAssetDataAsync(System.Xml.XmlNode xDoc)
    {
        this.GetAssetDataAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetAssetDataAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetAssetDataOperationCompleted == null))
        {
            this.GetAssetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssetDataOperationCompleted);
        }
        this.InvokeAsync("GetAssetData", new object[] {
                    xDoc}, this.GetAssetDataOperationCompleted, userState);
    }

    private void OnGetAssetDataOperationCompleted(object arg)
    {
        if ((this.GetAssetDataCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAssetDataCompleted(this, new GetAssetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostAssetData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode PostAssetData(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("PostAssetData", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginPostAssetData(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("PostAssetData", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndPostAssetData(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void PostAssetDataAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.PostAssetDataAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void PostAssetDataAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.PostAssetDataOperationCompleted == null))
        {
            this.PostAssetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostAssetDataOperationCompleted);
        }
        this.InvokeAsync("PostAssetData", new object[] {
                    xDoc,
                    Dest}, this.PostAssetDataOperationCompleted, userState);
    }

    private void OnPostAssetDataOperationCompleted(object arg)
    {
        if ((this.PostAssetDataCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.PostAssetDataCompleted(this, new PostAssetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/R3AITStockDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode R3AITStockDetails(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("R3AITStockDetails", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginR3AITStockDetails(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("R3AITStockDetails", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndR3AITStockDetails(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void R3AITStockDetailsAsync(System.Xml.XmlNode xDoc)
    {
        this.R3AITStockDetailsAsync(xDoc, null);
    }

    /// <remarks/>
    public void R3AITStockDetailsAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.R3AITStockDetailsOperationCompleted == null))
        {
            this.R3AITStockDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnR3AITStockDetailsOperationCompleted);
        }
        this.InvokeAsync("R3AITStockDetails", new object[] {
                    xDoc}, this.R3AITStockDetailsOperationCompleted, userState);
    }

    private void OnR3AITStockDetailsOperationCompleted(object arg)
    {
        if ((this.R3AITStockDetailsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.R3AITStockDetailsCompleted(this, new R3AITStockDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIndentorDetailsByPO", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetIndentorDetailsByPO(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetIndentorDetailsByPO", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetIndentorDetailsByPO(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetIndentorDetailsByPO", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetIndentorDetailsByPO(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetIndentorDetailsByPOAsync(System.Xml.XmlNode xDoc)
    {
        this.GetIndentorDetailsByPOAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetIndentorDetailsByPOAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetIndentorDetailsByPOOperationCompleted == null))
        {
            this.GetIndentorDetailsByPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIndentorDetailsByPOOperationCompleted);
        }
        this.InvokeAsync("GetIndentorDetailsByPO", new object[] {
                    xDoc}, this.GetIndentorDetailsByPOOperationCompleted, userState);
    }

    private void OnGetIndentorDetailsByPOOperationCompleted(object arg)
    {
        if ((this.GetIndentorDetailsByPOCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetIndentorDetailsByPOCompleted(this, new GetIndentorDetailsByPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetCustXD02", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode SetCustXD02(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("SetCustXD02", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginSetCustXD02(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("SetCustXD02", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndSetCustXD02(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void SetCustXD02Async(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.SetCustXD02Async(xDoc, Dest, null);
    }

    /// <remarks/>
    public void SetCustXD02Async(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.SetCustXD02OperationCompleted == null))
        {
            this.SetCustXD02OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCustXD02OperationCompleted);
        }
        this.InvokeAsync("SetCustXD02", new object[] {
                    xDoc,
                    Dest}, this.SetCustXD02OperationCompleted, userState);
    }

    private void OnSetCustXD02OperationCompleted(object arg)
    {
        if ((this.SetCustXD02Completed != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetCustXD02Completed(this, new SetCustXD02CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetMktgEmpAsCustomer", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode SetMktgEmpAsCustomer(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("SetMktgEmpAsCustomer", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginSetMktgEmpAsCustomer(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("SetMktgEmpAsCustomer", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndSetMktgEmpAsCustomer(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void SetMktgEmpAsCustomerAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.SetMktgEmpAsCustomerAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void SetMktgEmpAsCustomerAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.SetMktgEmpAsCustomerOperationCompleted == null))
        {
            this.SetMktgEmpAsCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMktgEmpAsCustomerOperationCompleted);
        }
        this.InvokeAsync("SetMktgEmpAsCustomer", new object[] {
                    xDoc,
                    Dest}, this.SetMktgEmpAsCustomerOperationCompleted, userState);
    }

    private void OnSetMktgEmpAsCustomerOperationCompleted(object arg)
    {
        if ((this.SetMktgEmpAsCustomerCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetMktgEmpAsCustomerCompleted(this, new SetMktgEmpAsCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTargets", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetTargets(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetTargets", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetTargets(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetTargets", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetTargets(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetTargetsAsync(System.Xml.XmlNode xDoc)
    {
        this.GetTargetsAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetTargetsAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetTargetsOperationCompleted == null))
        {
            this.GetTargetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTargetsOperationCompleted);
        }
        this.InvokeAsync("GetTargets", new object[] {
                    xDoc}, this.GetTargetsOperationCompleted, userState);
    }

    private void OnGetTargetsOperationCompleted(object arg)
    {
        if ((this.GetTargetsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetTargetsCompleted(this, new GetTargetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAITStockRep", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetAITStockRep(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetAITStockRep", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetAITStockRep(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetAITStockRep", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetAITStockRep(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetAITStockRepAsync(System.Xml.XmlNode xDoc)
    {
        this.GetAITStockRepAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetAITStockRepAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetAITStockRepOperationCompleted == null))
        {
            this.GetAITStockRepOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAITStockRepOperationCompleted);
        }
        this.InvokeAsync("GetAITStockRep", new object[] {
                    xDoc}, this.GetAITStockRepOperationCompleted, userState);
    }

    private void OnGetAITStockRepOperationCompleted(object arg)
    {
        if ((this.GetAITStockRepCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAITStockRepCompleted(this, new GetAITStockRepCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAITStockRepCust", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetAITStockRepCust(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetAITStockRepCust", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetAITStockRepCust(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetAITStockRepCust", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetAITStockRepCust(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetAITStockRepCustAsync(System.Xml.XmlNode xDoc)
    {
        this.GetAITStockRepCustAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetAITStockRepCustAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetAITStockRepCustOperationCompleted == null))
        {
            this.GetAITStockRepCustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAITStockRepCustOperationCompleted);
        }
        this.InvokeAsync("GetAITStockRepCust", new object[] {
                    xDoc}, this.GetAITStockRepCustOperationCompleted, userState);
    }

    private void OnGetAITStockRepCustOperationCompleted(object arg)
    {
        if ((this.GetAITStockRepCustCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAITStockRepCustCompleted(this, new GetAITStockRepCustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/R3getMonthwiseBasic", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode R3getMonthwiseBasic(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("R3getMonthwiseBasic", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginR3getMonthwiseBasic(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("R3getMonthwiseBasic", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndR3getMonthwiseBasic(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void R3getMonthwiseBasicAsync(System.Xml.XmlNode xDoc)
    {
        this.R3getMonthwiseBasicAsync(xDoc, null);
    }

    /// <remarks/>
    public void R3getMonthwiseBasicAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.R3getMonthwiseBasicOperationCompleted == null))
        {
            this.R3getMonthwiseBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnR3getMonthwiseBasicOperationCompleted);
        }
        this.InvokeAsync("R3getMonthwiseBasic", new object[] {
                    xDoc}, this.R3getMonthwiseBasicOperationCompleted, userState);
    }

    private void OnR3getMonthwiseBasicOperationCompleted(object arg)
    {
        if ((this.R3getMonthwiseBasicCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.R3getMonthwiseBasicCompleted(this, new R3getMonthwiseBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjects", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetProjects(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetProjects", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetProjects(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetProjects", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetProjects(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetProjectsAsync(System.Xml.XmlNode xDoc)
    {
        this.GetProjectsAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetProjectsAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetProjectsOperationCompleted == null))
        {
            this.GetProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectsOperationCompleted);
        }
        this.InvokeAsync("GetProjects", new object[] {
                    xDoc}, this.GetProjectsOperationCompleted, userState);
    }

    private void OnGetProjectsOperationCompleted(object arg)
    {
        if ((this.GetProjectsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetProjectsCompleted(this, new GetProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setMaterialReservation", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode setMaterialReservation(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("setMaterialReservation", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginsetMaterialReservation(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("setMaterialReservation", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndsetMaterialReservation(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void setMaterialReservationAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.setMaterialReservationAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void setMaterialReservationAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.setMaterialReservationOperationCompleted == null))
        {
            this.setMaterialReservationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetMaterialReservationOperationCompleted);
        }
        this.InvokeAsync("setMaterialReservation", new object[] {
                    xDoc,
                    Dest}, this.setMaterialReservationOperationCompleted, userState);
    }

    private void OnsetMaterialReservationOperationCompleted(object arg)
    {
        if ((this.setMaterialReservationCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setMaterialReservationCompleted(this, new setMaterialReservationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setMatllResIssue", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode setMatllResIssue(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("setMatllResIssue", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginsetMatllResIssue(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("setMatllResIssue", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndsetMatllResIssue(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void setMatllResIssueAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.setMatllResIssueAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void setMatllResIssueAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.setMatllResIssueOperationCompleted == null))
        {
            this.setMatllResIssueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetMatllResIssueOperationCompleted);
        }
        this.InvokeAsync("setMatllResIssue", new object[] {
                    xDoc,
                    Dest}, this.setMatllResIssueOperationCompleted, userState);
    }

    private void OnsetMatllResIssueOperationCompleted(object arg)
    {
        if ((this.setMatllResIssueCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setMatllResIssueCompleted(this, new setMatllResIssueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setMatllResTransfer", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode setMatllResTransfer(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("setMatllResTransfer", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginsetMatllResTransfer(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("setMatllResTransfer", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndsetMatllResTransfer(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void setMatllResTransferAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.setMatllResTransferAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void setMatllResTransferAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.setMatllResTransferOperationCompleted == null))
        {
            this.setMatllResTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetMatllResTransferOperationCompleted);
        }
        this.InvokeAsync("setMatllResTransfer", new object[] {
                    xDoc,
                    Dest}, this.setMatllResTransferOperationCompleted, userState);
    }

    private void OnsetMatllResTransferOperationCompleted(object arg)
    {
        if ((this.setMatllResTransferCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setMatllResTransferCompleted(this, new setMatllResTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setMaterialReservationReject", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode setMaterialReservationReject(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("setMaterialReservationReject", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginsetMaterialReservationReject(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("setMaterialReservationReject", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndsetMaterialReservationReject(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void setMaterialReservationRejectAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.setMaterialReservationRejectAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void setMaterialReservationRejectAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.setMaterialReservationRejectOperationCompleted == null))
        {
            this.setMaterialReservationRejectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetMaterialReservationRejectOperationCompleted);
        }
        this.InvokeAsync("setMaterialReservationReject", new object[] {
                    xDoc,
                    Dest}, this.setMaterialReservationRejectOperationCompleted, userState);
    }

    private void OnsetMaterialReservationRejectOperationCompleted(object arg)
    {
        if ((this.setMaterialReservationRejectCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setMaterialReservationRejectCompleted(this, new setMaterialReservationRejectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCCGLAmt", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetCCGLAmt(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetCCGLAmt", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetCCGLAmt(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetCCGLAmt", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetCCGLAmt(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetCCGLAmtAsync(System.Xml.XmlNode xDoc)
    {
        this.GetCCGLAmtAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetCCGLAmtAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetCCGLAmtOperationCompleted == null))
        {
            this.GetCCGLAmtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCCGLAmtOperationCompleted);
        }
        this.InvokeAsync("GetCCGLAmt", new object[] {
                    xDoc}, this.GetCCGLAmtOperationCompleted, userState);
    }

    private void OnGetCCGLAmtOperationCompleted(object arg)
    {
        if ((this.GetCCGLAmtCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetCCGLAmtCompleted(this, new GetCCGLAmtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmpStockRepOld", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetEmpStockRepOld(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetEmpStockRepOld", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetEmpStockRepOld(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetEmpStockRepOld", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetEmpStockRepOld(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetEmpStockRepOldAsync(System.Xml.XmlNode xDoc)
    {
        this.GetEmpStockRepOldAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetEmpStockRepOldAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetEmpStockRepOldOperationCompleted == null))
        {
            this.GetEmpStockRepOldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmpStockRepOldOperationCompleted);
        }
        this.InvokeAsync("GetEmpStockRepOld", new object[] {
                    xDoc}, this.GetEmpStockRepOldOperationCompleted, userState);
    }

    private void OnGetEmpStockRepOldOperationCompleted(object arg)
    {
        if ((this.GetEmpStockRepOldCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetEmpStockRepOldCompleted(this, new GetEmpStockRepOldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmpStockRep", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetEmpStockRep(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetEmpStockRep", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetEmpStockRep(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetEmpStockRep", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetEmpStockRep(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetEmpStockRepAsync(System.Xml.XmlNode xDoc)
    {
        this.GetEmpStockRepAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetEmpStockRepAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetEmpStockRepOperationCompleted == null))
        {
            this.GetEmpStockRepOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmpStockRepOperationCompleted);
        }
        this.InvokeAsync("GetEmpStockRep", new object[] {
                    xDoc}, this.GetEmpStockRepOperationCompleted, userState);
    }

    private void OnGetEmpStockRepOperationCompleted(object arg)
    {
        if ((this.GetEmpStockRepCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetEmpStockRepCompleted(this, new GetEmpStockRepCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getASUserCreation", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode getASUserCreation(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("getASUserCreation", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegingetASUserCreation(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("getASUserCreation", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndgetASUserCreation(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void getASUserCreationAsync(System.Xml.XmlNode xDoc)
    {
        this.getASUserCreationAsync(xDoc, null);
    }

    /// <remarks/>
    public void getASUserCreationAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.getASUserCreationOperationCompleted == null))
        {
            this.getASUserCreationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetASUserCreationOperationCompleted);
        }
        this.InvokeAsync("getASUserCreation", new object[] {
                    xDoc}, this.getASUserCreationOperationCompleted, userState);
    }

    private void OngetASUserCreationOperationCompleted(object arg)
    {
        if ((this.getASUserCreationCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getASUserCreationCompleted(this, new getASUserCreationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSalesDashboard", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetSalesDashboard(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetSalesDashboard", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetSalesDashboard(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetSalesDashboard", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetSalesDashboard(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetSalesDashboardAsync(System.Xml.XmlNode xDoc)
    {
        this.GetSalesDashboardAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetSalesDashboardAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetSalesDashboardOperationCompleted == null))
        {
            this.GetSalesDashboardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSalesDashboardOperationCompleted);
        }
        this.InvokeAsync("GetSalesDashboard", new object[] {
                    xDoc}, this.GetSalesDashboardOperationCompleted, userState);
    }

    private void OnGetSalesDashboardOperationCompleted(object arg)
    {
        if ((this.GetSalesDashboardCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetSalesDashboardCompleted(this, new GetSalesDashboardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSTNDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetSTNDetails(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetSTNDetails", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetSTNDetails(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetSTNDetails", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetSTNDetails(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetSTNDetailsAsync(System.Xml.XmlNode xDoc)
    {
        this.GetSTNDetailsAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetSTNDetailsAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetSTNDetailsOperationCompleted == null))
        {
            this.GetSTNDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSTNDetailsOperationCompleted);
        }
        this.InvokeAsync("GetSTNDetails", new object[] {
                    xDoc}, this.GetSTNDetailsOperationCompleted, userState);
    }

    private void OnGetSTNDetailsOperationCompleted(object arg)
    {
        if ((this.GetSTNDetailsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetSTNDetailsCompleted(this, new GetSTNDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertManHours", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertManHours(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertManHours", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertManHours(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertManHours", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertManHours(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertManHoursAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertManHoursAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertManHoursAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertManHoursOperationCompleted == null))
        {
            this.InsertManHoursOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertManHoursOperationCompleted);
        }
        this.InvokeAsync("InsertManHours", new object[] {
                    xDoc,
                    Dest}, this.InsertManHoursOperationCompleted, userState);
    }

    private void OnInsertManHoursOperationCompleted(object arg)
    {
        if ((this.InsertManHoursCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertManHoursCompleted(this, new InsertManHoursCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAssetDataFromSAP", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetAssetDataFromSAP(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetAssetDataFromSAP", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetAssetDataFromSAP(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetAssetDataFromSAP", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetAssetDataFromSAP(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetAssetDataFromSAPAsync(System.Xml.XmlNode xDoc)
    {
        this.GetAssetDataFromSAPAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetAssetDataFromSAPAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetAssetDataFromSAPOperationCompleted == null))
        {
            this.GetAssetDataFromSAPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssetDataFromSAPOperationCompleted);
        }
        this.InvokeAsync("GetAssetDataFromSAP", new object[] {
                    xDoc}, this.GetAssetDataFromSAPOperationCompleted, userState);
    }

    private void OnGetAssetDataFromSAPOperationCompleted(object arg)
    {
        if ((this.GetAssetDataFromSAPCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAssetDataFromSAPCompleted(this, new GetAssetDataFromSAPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GETAUCwisePOValue", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GETAUCwisePOValue(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GETAUCwisePOValue", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGETAUCwisePOValue(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GETAUCwisePOValue", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGETAUCwisePOValue(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GETAUCwisePOValueAsync(System.Xml.XmlNode xDoc)
    {
        this.GETAUCwisePOValueAsync(xDoc, null);
    }

    /// <remarks/>
    public void GETAUCwisePOValueAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GETAUCwisePOValueOperationCompleted == null))
        {
            this.GETAUCwisePOValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGETAUCwisePOValueOperationCompleted);
        }
        this.InvokeAsync("GETAUCwisePOValue", new object[] {
                    xDoc}, this.GETAUCwisePOValueOperationCompleted, userState);
    }

    private void OnGETAUCwisePOValueOperationCompleted(object arg)
    {
        if ((this.GETAUCwisePOValueCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GETAUCwisePOValueCompleted(this, new GETAUCwisePOValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setAttendanceLOPPost", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode setAttendanceLOPPost(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("setAttendanceLOPPost", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginsetAttendanceLOPPost(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("setAttendanceLOPPost", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndsetAttendanceLOPPost(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void setAttendanceLOPPostAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.setAttendanceLOPPostAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void setAttendanceLOPPostAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.setAttendanceLOPPostOperationCompleted == null))
        {
            this.setAttendanceLOPPostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetAttendanceLOPPostOperationCompleted);
        }
        this.InvokeAsync("setAttendanceLOPPost", new object[] {
                    xDoc,
                    Dest}, this.setAttendanceLOPPostOperationCompleted, userState);
    }

    private void OnsetAttendanceLOPPostOperationCompleted(object arg)
    {
        if ((this.setAttendanceLOPPostCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setAttendanceLOPPostCompleted(this, new setAttendanceLOPPostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setAttendanceLateMinLOPPost", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode setAttendanceLateMinLOPPost(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("setAttendanceLateMinLOPPost", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginsetAttendanceLateMinLOPPost(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("setAttendanceLateMinLOPPost", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndsetAttendanceLateMinLOPPost(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void setAttendanceLateMinLOPPostAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.setAttendanceLateMinLOPPostAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void setAttendanceLateMinLOPPostAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.setAttendanceLateMinLOPPostOperationCompleted == null))
        {
            this.setAttendanceLateMinLOPPostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetAttendanceLateMinLOPPostOperationCompleted);
        }
        this.InvokeAsync("setAttendanceLateMinLOPPost", new object[] {
                    xDoc,
                    Dest}, this.setAttendanceLateMinLOPPostOperationCompleted, userState);
    }

    private void OnsetAttendanceLateMinLOPPostOperationCompleted(object arg)
    {
        if ((this.setAttendanceLateMinLOPPostCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setAttendanceLateMinLOPPostCompleted(this, new setAttendanceLateMinLOPPostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GETAUCwisePOValueNew", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GETAUCwisePOValueNew(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GETAUCwisePOValueNew", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGETAUCwisePOValueNew(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GETAUCwisePOValueNew", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGETAUCwisePOValueNew(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GETAUCwisePOValueNewAsync(System.Xml.XmlNode xDoc)
    {
        this.GETAUCwisePOValueNewAsync(xDoc, null);
    }

    /// <remarks/>
    public void GETAUCwisePOValueNewAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GETAUCwisePOValueNewOperationCompleted == null))
        {
            this.GETAUCwisePOValueNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGETAUCwisePOValueNewOperationCompleted);
        }
        this.InvokeAsync("GETAUCwisePOValueNew", new object[] {
                    xDoc}, this.GETAUCwisePOValueNewOperationCompleted, userState);
    }

    private void OnGETAUCwisePOValueNewOperationCompleted(object arg)
    {
        if ((this.GETAUCwisePOValueNewCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GETAUCwisePOValueNewCompleted(this, new GETAUCwisePOValueNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPDSResults", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetPDSResults(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetPDSResults", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetPDSResults(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetPDSResults", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetPDSResults(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetPDSResultsAsync(System.Xml.XmlNode xDoc)
    {
        this.GetPDSResultsAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetPDSResultsAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetPDSResultsOperationCompleted == null))
        {
            this.GetPDSResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPDSResultsOperationCompleted);
        }
        this.InvokeAsync("GetPDSResults", new object[] {
                    xDoc}, this.GetPDSResultsOperationCompleted, userState);
    }

    private void OnGetPDSResultsOperationCompleted(object arg)
    {
        if ((this.GetPDSResultsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPDSResultsCompleted(this, new GetPDSResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertPDPosting", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertPDPosting(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertPDPosting", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertPDPosting(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertPDPosting", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertPDPosting(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertPDPostingAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertPDPostingAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertPDPostingAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertPDPostingOperationCompleted == null))
        {
            this.InsertPDPostingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPDPostingOperationCompleted);
        }
        this.InvokeAsync("InsertPDPosting", new object[] {
                    xDoc,
                    Dest}, this.InsertPDPostingOperationCompleted, userState);
    }

    private void OnInsertPDPostingOperationCompleted(object arg)
    {
        if ((this.InsertPDPostingCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertPDPostingCompleted(this, new InsertPDPostingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInstitutionalQuations", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetInstitutionalQuations(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetInstitutionalQuations", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetInstitutionalQuations(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetInstitutionalQuations", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetInstitutionalQuations(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetInstitutionalQuationsAsync(System.Xml.XmlNode xDoc)
    {
        this.GetInstitutionalQuationsAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetInstitutionalQuationsAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetInstitutionalQuationsOperationCompleted == null))
        {
            this.GetInstitutionalQuationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstitutionalQuationsOperationCompleted);
        }
        this.InvokeAsync("GetInstitutionalQuations", new object[] {
                    xDoc}, this.GetInstitutionalQuationsOperationCompleted, userState);
    }

    private void OnGetInstitutionalQuationsOperationCompleted(object arg)
    {
        if ((this.GetInstitutionalQuationsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetInstitutionalQuationsCompleted(this, new GetInstitutionalQuationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertQuoAdvAmt", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertQuoAdvAmt(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertQuoAdvAmt", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertQuoAdvAmt(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertQuoAdvAmt", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertQuoAdvAmt(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertQuoAdvAmtAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertQuoAdvAmtAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertQuoAdvAmtAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertQuoAdvAmtOperationCompleted == null))
        {
            this.InsertQuoAdvAmtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertQuoAdvAmtOperationCompleted);
        }
        this.InvokeAsync("InsertQuoAdvAmt", new object[] {
                    xDoc,
                    Dest}, this.InsertQuoAdvAmtOperationCompleted, userState);
    }

    private void OnInsertQuoAdvAmtOperationCompleted(object arg)
    {
        if ((this.InsertQuoAdvAmtCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertQuoAdvAmtCompleted(this, new InsertQuoAdvAmtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertFinishedMaterialExtension", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertFinishedMaterialExtension(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertFinishedMaterialExtension", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertFinishedMaterialExtension(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertFinishedMaterialExtension", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertFinishedMaterialExtension(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertFinishedMaterialExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertFinishedMaterialExtensionAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertFinishedMaterialExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertFinishedMaterialExtensionOperationCompleted == null))
        {
            this.InsertFinishedMaterialExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFinishedMaterialExtensionOperationCompleted);
        }
        this.InvokeAsync("InsertFinishedMaterialExtension", new object[] {
                    xDoc,
                    Dest}, this.InsertFinishedMaterialExtensionOperationCompleted, userState);
    }

    private void OnInsertFinishedMaterialExtensionOperationCompleted(object arg)
    {
        if ((this.InsertFinishedMaterialExtensionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertFinishedMaterialExtensionCompleted(this, new InsertFinishedMaterialExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertFinishedMaterialAccountingExtension", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertFinishedMaterialAccountingExtension(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertFinishedMaterialAccountingExtension", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertFinishedMaterialAccountingExtension(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertFinishedMaterialAccountingExtension", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertFinishedMaterialAccountingExtension(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertFinishedMaterialAccountingExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertFinishedMaterialAccountingExtensionAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertFinishedMaterialAccountingExtensionAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertFinishedMaterialAccountingExtensionOperationCompleted == null))
        {
            this.InsertFinishedMaterialAccountingExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFinishedMaterialAccountingExtensionOperationCompleted);
        }
        this.InvokeAsync("InsertFinishedMaterialAccountingExtension", new object[] {
                    xDoc,
                    Dest}, this.InsertFinishedMaterialAccountingExtensionOperationCompleted, userState);
    }

    private void OnInsertFinishedMaterialAccountingExtensionOperationCompleted(object arg)
    {
        if ((this.InsertFinishedMaterialAccountingExtensionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertFinishedMaterialAccountingExtensionCompleted(this, new InsertFinishedMaterialAccountingExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRetestMatAlertMailDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetRetestMatAlertMailDetails(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetRetestMatAlertMailDetails", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetRetestMatAlertMailDetails(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetRetestMatAlertMailDetails", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetRetestMatAlertMailDetails(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetRetestMatAlertMailDetailsAsync(System.Xml.XmlNode xDoc)
    {
        this.GetRetestMatAlertMailDetailsAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetRetestMatAlertMailDetailsAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetRetestMatAlertMailDetailsOperationCompleted == null))
        {
            this.GetRetestMatAlertMailDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRetestMatAlertMailDetailsOperationCompleted);
        }
        this.InvokeAsync("GetRetestMatAlertMailDetails", new object[] {
                    xDoc}, this.GetRetestMatAlertMailDetailsOperationCompleted, userState);
    }

    private void OnGetRetestMatAlertMailDetailsOperationCompleted(object arg)
    {
        if ((this.GetRetestMatAlertMailDetailsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetRetestMatAlertMailDetailsCompleted(this, new GetRetestMatAlertMailDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string HelloWorld()
    {
        object[] results = this.Invoke("HelloWorld", new object[0]);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("HelloWorld", new object[0], callback, asyncState);
    }

    /// <remarks/>
    public string EndHelloWorld(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void HelloWorldAsync()
    {
        this.HelloWorldAsync(null);
    }

    /// <remarks/>
    public void HelloWorldAsync(object userState)
    {
        if ((this.HelloWorldOperationCompleted == null))
        {
            this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
        }
        this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
    }

    private void OnHelloWorldOperationCompleted(object arg)
    {
        if ((this.HelloWorldCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccounts", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetAccounts(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetAccounts", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetAccounts(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetAccounts", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetAccounts(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetAccountsAsync(System.Xml.XmlNode xDoc)
    {
        this.GetAccountsAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetAccountsAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetAccountsOperationCompleted == null))
        {
            this.GetAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountsOperationCompleted);
        }
        this.InvokeAsync("GetAccounts", new object[] {
                    xDoc}, this.GetAccountsOperationCompleted, userState);
    }

    private void OnGetAccountsOperationCompleted(object arg)
    {
        if ((this.GetAccountsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAccountsCompleted(this, new GetAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEMDCustomers", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetEMDCustomers(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetEMDCustomers", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetEMDCustomers(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetEMDCustomers", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetEMDCustomers(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetEMDCustomersAsync(System.Xml.XmlNode xDoc)
    {
        this.GetEMDCustomersAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetEMDCustomersAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetEMDCustomersOperationCompleted == null))
        {
            this.GetEMDCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMDCustomersOperationCompleted);
        }
        this.InvokeAsync("GetEMDCustomers", new object[] {
                    xDoc}, this.GetEMDCustomersOperationCompleted, userState);
    }

    private void OnGetEMDCustomersOperationCompleted(object arg)
    {
        if ((this.GetEMDCustomersCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetEMDCustomersCompleted(this, new GetEMDCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomersListforOrd", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetCustomersListforOrd(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetCustomersListforOrd", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetCustomersListforOrd(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetCustomersListforOrd", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetCustomersListforOrd(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetCustomersListforOrdAsync(System.Xml.XmlNode xDoc)
    {
        this.GetCustomersListforOrdAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetCustomersListforOrdAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetCustomersListforOrdOperationCompleted == null))
        {
            this.GetCustomersListforOrdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersListforOrdOperationCompleted);
        }
        this.InvokeAsync("GetCustomersListforOrd", new object[] {
                    xDoc}, this.GetCustomersListforOrdOperationCompleted, userState);
    }

    private void OnGetCustomersListforOrdOperationCompleted(object arg)
    {
        if ((this.GetCustomersListforOrdCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetCustomersListforOrdCompleted(this, new GetCustomersListforOrdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertEMDClosure", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertEMDClosure(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertEMDClosure", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertEMDClosure(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertEMDClosure", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertEMDClosure(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertEMDClosureAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertEMDClosureAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertEMDClosureAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertEMDClosureOperationCompleted == null))
        {
            this.InsertEMDClosureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEMDClosureOperationCompleted);
        }
        this.InvokeAsync("InsertEMDClosure", new object[] {
                    xDoc,
                    Dest}, this.InsertEMDClosureOperationCompleted, userState);
    }

    private void OnInsertEMDClosureOperationCompleted(object arg)
    {
        if ((this.InsertEMDClosureCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertEMDClosureCompleted(this, new InsertEMDClosureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomersList", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetCustomersList()
    {
        object[] results = this.Invoke("GetCustomersList", new object[0]);
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetCustomersList(System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetCustomersList", new object[0], callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetCustomersList(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetCustomersListAsync()
    {
        this.GetCustomersListAsync(null);
    }

    /// <remarks/>
    public void GetCustomersListAsync(object userState)
    {
        if ((this.GetCustomersListOperationCompleted == null))
        {
            this.GetCustomersListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersListOperationCompleted);
        }
        this.InvokeAsync("GetCustomersList", new object[0], this.GetCustomersListOperationCompleted, userState);
    }

    private void OnGetCustomersListOperationCompleted(object arg)
    {
        if ((this.GetCustomersListCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetCustomersListCompleted(this, new GetCustomersListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTableData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetTableData(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetTableData", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetTableData(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetTableData", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetTableData(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetTableDataAsync(System.Xml.XmlNode xDoc)
    {
        this.GetTableDataAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetTableDataAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetTableDataOperationCompleted == null))
        {
            this.GetTableDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTableDataOperationCompleted);
        }
        this.InvokeAsync("GetTableData", new object[] {
                    xDoc}, this.GetTableDataOperationCompleted, userState);
    }

    private void OnGetTableDataOperationCompleted(object arg)
    {
        if ((this.GetTableDataCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetTableDataCompleted(this, new GetTableDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Readmaterial", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode Readmaterial(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("Readmaterial", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginReadmaterial(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Readmaterial", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndReadmaterial(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void ReadmaterialAsync(System.Xml.XmlNode xDoc)
    {
        this.ReadmaterialAsync(xDoc, null);
    }

    /// <remarks/>
    public void ReadmaterialAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.ReadmaterialOperationCompleted == null))
        {
            this.ReadmaterialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadmaterialOperationCompleted);
        }
        this.InvokeAsync("Readmaterial", new object[] {
                    xDoc}, this.ReadmaterialOperationCompleted, userState);
    }

    private void OnReadmaterialOperationCompleted(object arg)
    {
        if ((this.ReadmaterialCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ReadmaterialCompleted(this, new ReadmaterialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertQuotatoinInSAP", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertQuotatoinInSAP(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertQuotatoinInSAP", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertQuotatoinInSAP(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertQuotatoinInSAP", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertQuotatoinInSAP(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertQuotatoinInSAPAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertQuotatoinInSAPAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertQuotatoinInSAPAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertQuotatoinInSAPOperationCompleted == null))
        {
            this.InsertQuotatoinInSAPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertQuotatoinInSAPOperationCompleted);
        }
        this.InvokeAsync("InsertQuotatoinInSAP", new object[] {
                    xDoc,
                    Dest}, this.InsertQuotatoinInSAPOperationCompleted, userState);
    }

    private void OnInsertQuotatoinInSAPOperationCompleted(object arg)
    {
        if ((this.InsertQuotatoinInSAPCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertQuotatoinInSAPCompleted(this, new InsertQuotatoinInSAPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/R3itemstock", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode R3itemstock(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("R3itemstock", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginR3itemstock(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("R3itemstock", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndR3itemstock(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void R3itemstockAsync(System.Xml.XmlNode xDoc)
    {
        this.R3itemstockAsync(xDoc, null);
    }

    /// <remarks/>
    public void R3itemstockAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.R3itemstockOperationCompleted == null))
        {
            this.R3itemstockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnR3itemstockOperationCompleted);
        }
        this.InvokeAsync("R3itemstock", new object[] {
                    xDoc}, this.R3itemstockOperationCompleted, userState);
    }

    private void OnR3itemstockOperationCompleted(object arg)
    {
        if ((this.R3itemstockCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.R3itemstockCompleted(this, new R3itemstockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/R3itemConsumption", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode R3itemConsumption(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("R3itemConsumption", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginR3itemConsumption(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("R3itemConsumption", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndR3itemConsumption(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void R3itemConsumptionAsync(System.Xml.XmlNode xDoc)
    {
        this.R3itemConsumptionAsync(xDoc, null);
    }

    /// <remarks/>
    public void R3itemConsumptionAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.R3itemConsumptionOperationCompleted == null))
        {
            this.R3itemConsumptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnR3itemConsumptionOperationCompleted);
        }
        this.InvokeAsync("R3itemConsumption", new object[] {
                    xDoc}, this.R3itemConsumptionOperationCompleted, userState);
    }

    private void OnR3itemConsumptionOperationCompleted(object arg)
    {
        if ((this.R3itemConsumptionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.R3itemConsumptionCompleted(this, new R3itemConsumptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertTourApprovalBill", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertTourApprovalBill(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertTourApprovalBill", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertTourApprovalBill(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertTourApprovalBill", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertTourApprovalBill(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertTourApprovalBillAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertTourApprovalBillAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertTourApprovalBillAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertTourApprovalBillOperationCompleted == null))
        {
            this.InsertTourApprovalBillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTourApprovalBillOperationCompleted);
        }
        this.InvokeAsync("InsertTourApprovalBill", new object[] {
                    xDoc,
                    Dest}, this.InsertTourApprovalBillOperationCompleted, userState);
    }

    private void OnInsertTourApprovalBillOperationCompleted(object arg)
    {
        if ((this.InsertTourApprovalBillCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertTourApprovalBillCompleted(this, new InsertTourApprovalBillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertTourExpenditure", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertTourExpenditure(System.Xml.XmlNode xDoc, string[] Dest)
    {
        object[] results = this.Invoke("InsertTourExpenditure", new object[] {
                    xDoc,
                    Dest});
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertTourExpenditure(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertTourExpenditure", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertTourExpenditure(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertTourExpenditureAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertTourExpenditureAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertTourExpenditureAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertTourExpenditureOperationCompleted == null))
        {
            this.InsertTourExpenditureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTourExpenditureOperationCompleted);
        }
        this.InvokeAsync("InsertTourExpenditure", new object[] {
                    xDoc,
                    Dest}, this.InsertTourExpenditureOperationCompleted, userState);
    }

    private void OnInsertTourExpenditureOperationCompleted(object arg)
    {
        if ((this.InsertTourExpenditureCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertTourExpenditureCompleted(this, new InsertTourExpenditureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetPRAllocation1", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode SetPRAllocation1(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("SetPRAllocation1", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginSetPRAllocation1(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("SetPRAllocation1", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndSetPRAllocation1(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void SetPRAllocation1Async(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.SetPRAllocation1Async(xDoc, Dest, null);
    }

    /// <remarks/>
    public void SetPRAllocation1Async(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.SetPRAllocation1OperationCompleted == null))
        {
            this.SetPRAllocation1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPRAllocation1OperationCompleted);
        }
        this.InvokeAsync("SetPRAllocation1", new object[] {
                    xDoc,
                    Dest}, this.SetPRAllocation1OperationCompleted, userState);
    }

    private void OnSetPRAllocation1OperationCompleted(object arg)
    {
        if ((this.SetPRAllocation1Completed != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetPRAllocation1Completed(this, new SetPRAllocation1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetPRAllocation2", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode SetPRAllocation2(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("SetPRAllocation2", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginSetPRAllocation2(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("SetPRAllocation2", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndSetPRAllocation2(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void SetPRAllocation2Async(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.SetPRAllocation2Async(xDoc, Dest, null);
    }

    /// <remarks/>
    public void SetPRAllocation2Async(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.SetPRAllocation2OperationCompleted == null))
        {
            this.SetPRAllocation2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPRAllocation2OperationCompleted);
        }
        this.InvokeAsync("SetPRAllocation2", new object[] {
                    xDoc,
                    Dest}, this.SetPRAllocation2OperationCompleted, userState);
    }

    private void OnSetPRAllocation2OperationCompleted(object arg)
    {
        if ((this.SetPRAllocation2Completed != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetPRAllocation2Completed(this, new SetPRAllocation2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertLeaveEncashmentDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertLeaveEncashmentDetails(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertLeaveEncashmentDetails", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertLeaveEncashmentDetails(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertLeaveEncashmentDetails", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertLeaveEncashmentDetails(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertLeaveEncashmentDetailsAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertLeaveEncashmentDetailsAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertLeaveEncashmentDetailsAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertLeaveEncashmentDetailsOperationCompleted == null))
        {
            this.InsertLeaveEncashmentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLeaveEncashmentDetailsOperationCompleted);
        }
        this.InvokeAsync("InsertLeaveEncashmentDetails", new object[] {
                    xDoc,
                    Dest}, this.InsertLeaveEncashmentDetailsOperationCompleted, userState);
    }

    private void OnInsertLeaveEncashmentDetailsOperationCompleted(object arg)
    {
        if ((this.InsertLeaveEncashmentDetailsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertLeaveEncashmentDetailsCompleted(this, new InsertLeaveEncashmentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertTourApprovalBillDataTable", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertTourApprovalBillDataTable(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertTourApprovalBillDataTable", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertTourApprovalBillDataTable(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertTourApprovalBillDataTable", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertTourApprovalBillDataTable(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertTourApprovalBillDataTableAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertTourApprovalBillDataTableAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertTourApprovalBillDataTableAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertTourApprovalBillDataTableOperationCompleted == null))
        {
            this.InsertTourApprovalBillDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTourApprovalBillDataTableOperationCompleted);
        }
        this.InvokeAsync("InsertTourApprovalBillDataTable", new object[] {
                    xDoc,
                    Dest}, this.InsertTourApprovalBillDataTableOperationCompleted, userState);
    }

    private void OnInsertTourApprovalBillDataTableOperationCompleted(object arg)
    {
        if ((this.InsertTourApprovalBillDataTableCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertTourApprovalBillDataTableCompleted(this, new InsertTourApprovalBillDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PODetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode PODetails(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("PODetails", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginPODetails(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("PODetails", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndPODetails(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void PODetailsAsync(System.Xml.XmlNode xDoc)
    {
        this.PODetailsAsync(xDoc, null);
    }

    /// <remarks/>
    public void PODetailsAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.PODetailsOperationCompleted == null))
        {
            this.PODetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPODetailsOperationCompleted);
        }
        this.InvokeAsync("PODetails", new object[] {
                    xDoc}, this.PODetailsOperationCompleted, userState);
    }

    private void OnPODetailsOperationCompleted(object arg)
    {
        if ((this.PODetailsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.PODetailsCompleted(this, new PODetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertConveyance", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertConveyance(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertConveyance", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertConveyance(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertConveyance", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertConveyance(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertConveyanceAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertConveyanceAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertConveyanceAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertConveyanceOperationCompleted == null))
        {
            this.InsertConveyanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertConveyanceOperationCompleted);
        }
        this.InvokeAsync("InsertConveyance", new object[] {
                    xDoc,
                    Dest}, this.InsertConveyanceOperationCompleted, userState);
    }

    private void OnInsertConveyanceOperationCompleted(object arg)
    {
        if ((this.InsertConveyanceCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertConveyanceCompleted(this, new InsertConveyanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IndentsForClosing", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode IndentsForClosing(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("IndentsForClosing", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginIndentsForClosing(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("IndentsForClosing", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndIndentsForClosing(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void IndentsForClosingAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.IndentsForClosingAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void IndentsForClosingAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.IndentsForClosingOperationCompleted == null))
        {
            this.IndentsForClosingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIndentsForClosingOperationCompleted);
        }
        this.InvokeAsync("IndentsForClosing", new object[] {
                    xDoc,
                    Dest}, this.IndentsForClosingOperationCompleted, userState);
    }

    private void OnIndentsForClosingOperationCompleted(object arg)
    {
        if ((this.IndentsForClosingCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.IndentsForClosingCompleted(this, new IndentsForClosingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IndentClose", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode IndentClose(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("IndentClose", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginIndentClose(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("IndentClose", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndIndentClose(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void IndentCloseAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.IndentCloseAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void IndentCloseAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.IndentCloseOperationCompleted == null))
        {
            this.IndentCloseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIndentCloseOperationCompleted);
        }
        this.InvokeAsync("IndentClose", new object[] {
                    xDoc,
                    Dest}, this.IndentCloseOperationCompleted, userState);
    }

    private void OnIndentCloseOperationCompleted(object arg)
    {
        if ((this.IndentCloseCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.IndentCloseCompleted(this, new IndentCloseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertLTAFinance", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertLTAFinance(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertLTAFinance", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertLTAFinance(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertLTAFinance", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertLTAFinance(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertLTAFinanceAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertLTAFinanceAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertLTAFinanceAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertLTAFinanceOperationCompleted == null))
        {
            this.InsertLTAFinanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLTAFinanceOperationCompleted);
        }
        this.InvokeAsync("InsertLTAFinance", new object[] {
                    xDoc,
                    Dest}, this.InsertLTAFinanceOperationCompleted, userState);
    }

    private void OnInsertLTAFinanceOperationCompleted(object arg)
    {
        if ((this.InsertLTAFinanceCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertLTAFinanceCompleted(this, new InsertLTAFinanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/R3POdetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode R3POdetails(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("R3POdetails", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginR3POdetails(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("R3POdetails", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndR3POdetails(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void R3POdetailsAsync(System.Xml.XmlNode xDoc)
    {
        this.R3POdetailsAsync(xDoc, null);
    }

    /// <remarks/>
    public void R3POdetailsAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.R3POdetailsOperationCompleted == null))
        {
            this.R3POdetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnR3POdetailsOperationCompleted);
        }
        this.InvokeAsync("R3POdetails", new object[] {
                    xDoc}, this.R3POdetailsOperationCompleted, userState);
    }

    private void OnR3POdetailsOperationCompleted(object arg)
    {
        if ((this.R3POdetailsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.R3POdetailsCompleted(this, new R3POdetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/R3EmpCreation", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode R3EmpCreation(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("R3EmpCreation", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginR3EmpCreation(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("R3EmpCreation", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndR3EmpCreation(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void R3EmpCreationAsync(System.Xml.XmlNode xDoc)
    {
        this.R3EmpCreationAsync(xDoc, null);
    }

    /// <remarks/>
    public void R3EmpCreationAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.R3EmpCreationOperationCompleted == null))
        {
            this.R3EmpCreationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnR3EmpCreationOperationCompleted);
        }
        this.InvokeAsync("R3EmpCreation", new object[] {
                    xDoc}, this.R3EmpCreationOperationCompleted, userState);
    }

    private void OnR3EmpCreationOperationCompleted(object arg)
    {
        if ((this.R3EmpCreationCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.R3EmpCreationCompleted(this, new R3EmpCreationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/R3EmpUpdation", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode R3EmpUpdation(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("R3EmpUpdation", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginR3EmpUpdation(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("R3EmpUpdation", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndR3EmpUpdation(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void R3EmpUpdationAsync(System.Xml.XmlNode xDoc)
    {
        this.R3EmpUpdationAsync(xDoc, null);
    }

    /// <remarks/>
    public void R3EmpUpdationAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.R3EmpUpdationOperationCompleted == null))
        {
            this.R3EmpUpdationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnR3EmpUpdationOperationCompleted);
        }
        this.InvokeAsync("R3EmpUpdation", new object[] {
                    xDoc}, this.R3EmpUpdationOperationCompleted, userState);
    }

    private void OnR3EmpUpdationOperationCompleted(object arg)
    {
        if ((this.R3EmpUpdationCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.R3EmpUpdationCompleted(this, new R3EmpUpdationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmpMiscOS", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetEmpMiscOS(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetEmpMiscOS", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetEmpMiscOS(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetEmpMiscOS", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetEmpMiscOS(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetEmpMiscOSAsync(System.Xml.XmlNode xDoc)
    {
        this.GetEmpMiscOSAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetEmpMiscOSAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetEmpMiscOSOperationCompleted == null))
        {
            this.GetEmpMiscOSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmpMiscOSOperationCompleted);
        }
        this.InvokeAsync("GetEmpMiscOS", new object[] {
                    xDoc}, this.GetEmpMiscOSOperationCompleted, userState);
    }

    private void OnGetEmpMiscOSOperationCompleted(object arg)
    {
        if ((this.GetEmpMiscOSCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetEmpMiscOSCompleted(this, new GetEmpMiscOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSequenceNos", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetSequenceNos(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetSequenceNos", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetSequenceNos(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetSequenceNos", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetSequenceNos(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetSequenceNosAsync(System.Xml.XmlNode xDoc)
    {
        this.GetSequenceNosAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetSequenceNosAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetSequenceNosOperationCompleted == null))
        {
            this.GetSequenceNosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSequenceNosOperationCompleted);
        }
        this.InvokeAsync("GetSequenceNos", new object[] {
                    xDoc}, this.GetSequenceNosOperationCompleted, userState);
    }

    private void OnGetSequenceNosOperationCompleted(object arg)
    {
        if ((this.GetSequenceNosCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetSequenceNosCompleted(this, new GetSequenceNosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPaySlipforEmployee", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetPaySlipforEmployee(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetPaySlipforEmployee", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetPaySlipforEmployee(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetPaySlipforEmployee", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetPaySlipforEmployee(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetPaySlipforEmployeeAsync(System.Xml.XmlNode xDoc)
    {
        this.GetPaySlipforEmployeeAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetPaySlipforEmployeeAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetPaySlipforEmployeeOperationCompleted == null))
        {
            this.GetPaySlipforEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaySlipforEmployeeOperationCompleted);
        }
        this.InvokeAsync("GetPaySlipforEmployee", new object[] {
                    xDoc}, this.GetPaySlipforEmployeeOperationCompleted, userState);
    }

    private void OnGetPaySlipforEmployeeOperationCompleted(object arg)
    {
        if ((this.GetPaySlipforEmployeeCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPaySlipforEmployeeCompleted(this, new GetPaySlipforEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertMiscExpensePosting", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertMiscExpensePosting(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertMiscExpensePosting", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertMiscExpensePosting(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertMiscExpensePosting", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertMiscExpensePosting(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertMiscExpensePostingAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertMiscExpensePostingAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertMiscExpensePostingAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertMiscExpensePostingOperationCompleted == null))
        {
            this.InsertMiscExpensePostingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMiscExpensePostingOperationCompleted);
        }
        this.InvokeAsync("InsertMiscExpensePosting", new object[] {
                    xDoc,
                    Dest}, this.InsertMiscExpensePostingOperationCompleted, userState);
    }

    private void OnInsertMiscExpensePostingOperationCompleted(object arg)
    {
        if ((this.InsertMiscExpensePostingCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertMiscExpensePostingCompleted(this, new InsertMiscExpensePostingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/R3PRDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode R3PRDetails(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("R3PRDetails", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginR3PRDetails(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("R3PRDetails", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndR3PRDetails(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void R3PRDetailsAsync(System.Xml.XmlNode xDoc)
    {
        this.R3PRDetailsAsync(xDoc, null);
    }

    /// <remarks/>
    public void R3PRDetailsAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.R3PRDetailsOperationCompleted == null))
        {
            this.R3PRDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnR3PRDetailsOperationCompleted);
        }
        this.InvokeAsync("R3PRDetails", new object[] {
                    xDoc}, this.R3PRDetailsOperationCompleted, userState);
    }

    private void OnR3PRDetailsOperationCompleted(object arg)
    {
        if ((this.R3PRDetailsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.R3PRDetailsCompleted(this, new R3PRDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertEmpInternalorderCreation", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertEmpInternalorderCreation(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertEmpInternalorderCreation", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertEmpInternalorderCreation(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertEmpInternalorderCreation", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertEmpInternalorderCreation(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertEmpInternalorderCreationAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertEmpInternalorderCreationAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertEmpInternalorderCreationAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertEmpInternalorderCreationOperationCompleted == null))
        {
            this.InsertEmpInternalorderCreationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEmpInternalorderCreationOperationCompleted);
        }
        this.InvokeAsync("InsertEmpInternalorderCreation", new object[] {
                    xDoc,
                    Dest}, this.InsertEmpInternalorderCreationOperationCompleted, userState);
    }

    private void OnInsertEmpInternalorderCreationOperationCompleted(object arg)
    {
        if ((this.InsertEmpInternalorderCreationCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertEmpInternalorderCreationCompleted(this, new InsertEmpInternalorderCreationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertEmpVendorCreation", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertEmpVendorCreation(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertEmpVendorCreation", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertEmpVendorCreation(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertEmpVendorCreation", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertEmpVendorCreation(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertEmpVendorCreationAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertEmpVendorCreationAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertEmpVendorCreationAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertEmpVendorCreationOperationCompleted == null))
        {
            this.InsertEmpVendorCreationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEmpVendorCreationOperationCompleted);
        }
        this.InvokeAsync("InsertEmpVendorCreation", new object[] {
                    xDoc,
                    Dest}, this.InsertEmpVendorCreationOperationCompleted, userState);
    }

    private void OnInsertEmpVendorCreationOperationCompleted(object arg)
    {
        if ((this.InsertEmpVendorCreationCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertEmpVendorCreationCompleted(this, new InsertEmpVendorCreationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ctcAccountLedger", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode ctcAccountLedger(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("ctcAccountLedger", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginctcAccountLedger(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("ctcAccountLedger", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndctcAccountLedger(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void ctcAccountLedgerAsync(System.Xml.XmlNode xDoc)
    {
        this.ctcAccountLedgerAsync(xDoc, null);
    }

    /// <remarks/>
    public void ctcAccountLedgerAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.ctcAccountLedgerOperationCompleted == null))
        {
            this.ctcAccountLedgerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnctcAccountLedgerOperationCompleted);
        }
        this.InvokeAsync("ctcAccountLedger", new object[] {
                    xDoc}, this.ctcAccountLedgerOperationCompleted, userState);
    }

    private void OnctcAccountLedgerOperationCompleted(object arg)
    {
        if ((this.ctcAccountLedgerCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ctcAccountLedgerCompleted(this, new ctcAccountLedgerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertPhoneNumber", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertPhoneNumber(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertPhoneNumber", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertPhoneNumber(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertPhoneNumber", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertPhoneNumber(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertPhoneNumberAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertPhoneNumberAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertPhoneNumberAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertPhoneNumberOperationCompleted == null))
        {
            this.InsertPhoneNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPhoneNumberOperationCompleted);
        }
        this.InvokeAsync("InsertPhoneNumber", new object[] {
                    xDoc,
                    Dest}, this.InsertPhoneNumberOperationCompleted, userState);
    }

    private void OnInsertPhoneNumberOperationCompleted(object arg)
    {
        if ((this.InsertPhoneNumberCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertPhoneNumberCompleted(this, new InsertPhoneNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePhoneNumber", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode UpdatePhoneNumber(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("UpdatePhoneNumber", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginUpdatePhoneNumber(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("UpdatePhoneNumber", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndUpdatePhoneNumber(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void UpdatePhoneNumberAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.UpdatePhoneNumberAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void UpdatePhoneNumberAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.UpdatePhoneNumberOperationCompleted == null))
        {
            this.UpdatePhoneNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePhoneNumberOperationCompleted);
        }
        this.InvokeAsync("UpdatePhoneNumber", new object[] {
                    xDoc,
                    Dest}, this.UpdatePhoneNumberOperationCompleted, userState);
    }

    private void OnUpdatePhoneNumberOperationCompleted(object arg)
    {
        if ((this.UpdatePhoneNumberCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdatePhoneNumberCompleted(this, new UpdatePhoneNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDeductionsInSalary", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode UpdateDeductionsInSalary(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("UpdateDeductionsInSalary", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginUpdateDeductionsInSalary(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("UpdateDeductionsInSalary", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndUpdateDeductionsInSalary(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void UpdateDeductionsInSalaryAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.UpdateDeductionsInSalaryAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void UpdateDeductionsInSalaryAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.UpdateDeductionsInSalaryOperationCompleted == null))
        {
            this.UpdateDeductionsInSalaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDeductionsInSalaryOperationCompleted);
        }
        this.InvokeAsync("UpdateDeductionsInSalary", new object[] {
                    xDoc,
                    Dest}, this.UpdateDeductionsInSalaryOperationCompleted, userState);
    }

    private void OnUpdateDeductionsInSalaryOperationCompleted(object arg)
    {
        if ((this.UpdateDeductionsInSalaryCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateDeductionsInSalaryCompleted(this, new UpdateDeductionsInSalaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDeductionsInSalaryforRecExcessAmount", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode UpdateDeductionsInSalaryforRecExcessAmount(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("UpdateDeductionsInSalaryforRecExcessAmount", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginUpdateDeductionsInSalaryforRecExcessAmount(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("UpdateDeductionsInSalaryforRecExcessAmount", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndUpdateDeductionsInSalaryforRecExcessAmount(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void UpdateDeductionsInSalaryforRecExcessAmountAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.UpdateDeductionsInSalaryforRecExcessAmountAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void UpdateDeductionsInSalaryforRecExcessAmountAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.UpdateDeductionsInSalaryforRecExcessAmountOperationCompleted == null))
        {
            this.UpdateDeductionsInSalaryforRecExcessAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDeductionsInSalaryforRecExcessAmountOperationCompleted);
        }
        this.InvokeAsync("UpdateDeductionsInSalaryforRecExcessAmount", new object[] {
                    xDoc,
                    Dest}, this.UpdateDeductionsInSalaryforRecExcessAmountOperationCompleted, userState);
    }

    private void OnUpdateDeductionsInSalaryforRecExcessAmountOperationCompleted(object arg)
    {
        if ((this.UpdateDeductionsInSalaryforRecExcessAmountCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateDeductionsInSalaryforRecExcessAmountCompleted(this, new UpdateDeductionsInSalaryforRecExcessAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveBillEntry", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode SaveBillEntry(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("SaveBillEntry", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginSaveBillEntry(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("SaveBillEntry", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndSaveBillEntry(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void SaveBillEntryAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.SaveBillEntryAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void SaveBillEntryAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.SaveBillEntryOperationCompleted == null))
        {
            this.SaveBillEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveBillEntryOperationCompleted);
        }
        this.InvokeAsync("SaveBillEntry", new object[] {
                    xDoc,
                    Dest}, this.SaveBillEntryOperationCompleted, userState);
    }

    private void OnSaveBillEntryOperationCompleted(object arg)
    {
        if ((this.SaveBillEntryCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SaveBillEntryCompleted(this, new SaveBillEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaterials", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetMaterials(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetMaterials", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetMaterials(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetMaterials", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetMaterials(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetMaterialsAsync(System.Xml.XmlNode xDoc)
    {
        this.GetMaterialsAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetMaterialsAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetMaterialsOperationCompleted == null))
        {
            this.GetMaterialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaterialsOperationCompleted);
        }
        this.InvokeAsync("GetMaterials", new object[] {
                    xDoc}, this.GetMaterialsOperationCompleted, userState);
    }

    private void OnGetMaterialsOperationCompleted(object arg)
    {
        if ((this.GetMaterialsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetMaterialsCompleted(this, new GetMaterialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaterialItemandCode", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetMaterialItemandCode(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetMaterialItemandCode", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetMaterialItemandCode(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetMaterialItemandCode", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetMaterialItemandCode(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetMaterialItemandCodeAsync(System.Xml.XmlNode xDoc)
    {
        this.GetMaterialItemandCodeAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetMaterialItemandCodeAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetMaterialItemandCodeOperationCompleted == null))
        {
            this.GetMaterialItemandCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaterialItemandCodeOperationCompleted);
        }
        this.InvokeAsync("GetMaterialItemandCode", new object[] {
                    xDoc}, this.GetMaterialItemandCodeOperationCompleted, userState);
    }

    private void OnGetMaterialItemandCodeOperationCompleted(object arg)
    {
        if ((this.GetMaterialItemandCodeCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetMaterialItemandCodeCompleted(this, new GetMaterialItemandCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorageLocation", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetStorageLocation(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetStorageLocation", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetStorageLocation(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetStorageLocation", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetStorageLocation(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetStorageLocationAsync(System.Xml.XmlNode xDoc)
    {
        this.GetStorageLocationAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetStorageLocationAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetStorageLocationOperationCompleted == null))
        {
            this.GetStorageLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorageLocationOperationCompleted);
        }
        this.InvokeAsync("GetStorageLocation", new object[] {
                    xDoc}, this.GetStorageLocationOperationCompleted, userState);
    }

    private void OnGetStorageLocationOperationCompleted(object arg)
    {
        if ((this.GetStorageLocationCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetStorageLocationCompleted(this, new GetStorageLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWareHouseNumber", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetWareHouseNumber(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetWareHouseNumber", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetWareHouseNumber(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetWareHouseNumber", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetWareHouseNumber(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetWareHouseNumberAsync(System.Xml.XmlNode xDoc)
    {
        this.GetWareHouseNumberAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetWareHouseNumberAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetWareHouseNumberOperationCompleted == null))
        {
            this.GetWareHouseNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWareHouseNumberOperationCompleted);
        }
        this.InvokeAsync("GetWareHouseNumber", new object[] {
                    xDoc}, this.GetWareHouseNumberOperationCompleted, userState);
    }

    private void OnGetWareHouseNumberOperationCompleted(object arg)
    {
        if ((this.GetWareHouseNumberCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetWareHouseNumberCompleted(this, new GetWareHouseNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorageType", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetStorageType(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetStorageType", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetStorageType(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetStorageType", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetStorageType(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetStorageTypeAsync(System.Xml.XmlNode xDoc)
    {
        this.GetStorageTypeAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetStorageTypeAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetStorageTypeOperationCompleted == null))
        {
            this.GetStorageTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorageTypeOperationCompleted);
        }
        this.InvokeAsync("GetStorageType", new object[] {
                    xDoc}, this.GetStorageTypeOperationCompleted, userState);
    }

    private void OnGetStorageTypeOperationCompleted(object arg)
    {
        if ((this.GetStorageTypeCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetStorageTypeCompleted(this, new GetStorageTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BaseUnitofMeasure", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode BaseUnitofMeasure(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("BaseUnitofMeasure", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginBaseUnitofMeasure(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("BaseUnitofMeasure", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndBaseUnitofMeasure(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void BaseUnitofMeasureAsync(System.Xml.XmlNode xDoc)
    {
        this.BaseUnitofMeasureAsync(xDoc, null);
    }

    /// <remarks/>
    public void BaseUnitofMeasureAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.BaseUnitofMeasureOperationCompleted == null))
        {
            this.BaseUnitofMeasureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBaseUnitofMeasureOperationCompleted);
        }
        this.InvokeAsync("BaseUnitofMeasure", new object[] {
                    xDoc}, this.BaseUnitofMeasureOperationCompleted, userState);
    }

    private void OnBaseUnitofMeasureOperationCompleted(object arg)
    {
        if ((this.BaseUnitofMeasureCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.BaseUnitofMeasureCompleted(this, new BaseUnitofMeasureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MaterialGroup", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode MaterialGroup(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("MaterialGroup", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginMaterialGroup(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("MaterialGroup", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndMaterialGroup(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void MaterialGroupAsync(System.Xml.XmlNode xDoc)
    {
        this.MaterialGroupAsync(xDoc, null);
    }

    /// <remarks/>
    public void MaterialGroupAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.MaterialGroupOperationCompleted == null))
        {
            this.MaterialGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMaterialGroupOperationCompleted);
        }
        this.InvokeAsync("MaterialGroup", new object[] {
                    xDoc}, this.MaterialGroupOperationCompleted, userState);
    }

    private void OnMaterialGroupOperationCompleted(object arg)
    {
        if ((this.MaterialGroupCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.MaterialGroupCompleted(this, new MaterialGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PurchasingGroup", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode PurchasingGroup(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("PurchasingGroup", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginPurchasingGroup(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("PurchasingGroup", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndPurchasingGroup(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void PurchasingGroupAsync(System.Xml.XmlNode xDoc)
    {
        this.PurchasingGroupAsync(xDoc, null);
    }

    /// <remarks/>
    public void PurchasingGroupAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.PurchasingGroupOperationCompleted == null))
        {
            this.PurchasingGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchasingGroupOperationCompleted);
        }
        this.InvokeAsync("PurchasingGroup", new object[] {
                    xDoc}, this.PurchasingGroupOperationCompleted, userState);
    }

    private void OnPurchasingGroupOperationCompleted(object arg)
    {
        if ((this.PurchasingGroupCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.PurchasingGroupCompleted(this, new PurchasingGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PurchasingKeyValue", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode PurchasingKeyValue(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("PurchasingKeyValue", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginPurchasingKeyValue(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("PurchasingKeyValue", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndPurchasingKeyValue(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void PurchasingKeyValueAsync(System.Xml.XmlNode xDoc)
    {
        this.PurchasingKeyValueAsync(xDoc, null);
    }

    /// <remarks/>
    public void PurchasingKeyValueAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.PurchasingKeyValueOperationCompleted == null))
        {
            this.PurchasingKeyValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchasingKeyValueOperationCompleted);
        }
        this.InvokeAsync("PurchasingKeyValue", new object[] {
                    xDoc}, this.PurchasingKeyValueOperationCompleted, userState);
    }

    private void OnPurchasingKeyValueOperationCompleted(object arg)
    {
        if ((this.PurchasingKeyValueCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.PurchasingKeyValueCompleted(this, new PurchasingKeyValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MRPType", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode MRPType(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("MRPType", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginMRPType(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("MRPType", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndMRPType(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void MRPTypeAsync(System.Xml.XmlNode xDoc)
    {
        this.MRPTypeAsync(xDoc, null);
    }

    /// <remarks/>
    public void MRPTypeAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.MRPTypeOperationCompleted == null))
        {
            this.MRPTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMRPTypeOperationCompleted);
        }
        this.InvokeAsync("MRPType", new object[] {
                    xDoc}, this.MRPTypeOperationCompleted, userState);
    }

    private void OnMRPTypeOperationCompleted(object arg)
    {
        if ((this.MRPTypeCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.MRPTypeCompleted(this, new MRPTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TempConditions", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode TempConditions(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("TempConditions", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginTempConditions(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("TempConditions", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndTempConditions(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void TempConditionsAsync(System.Xml.XmlNode xDoc)
    {
        this.TempConditionsAsync(xDoc, null);
    }

    /// <remarks/>
    public void TempConditionsAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.TempConditionsOperationCompleted == null))
        {
            this.TempConditionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTempConditionsOperationCompleted);
        }
        this.InvokeAsync("TempConditions", new object[] {
                    xDoc}, this.TempConditionsOperationCompleted, userState);
    }

    private void OnTempConditionsOperationCompleted(object arg)
    {
        if ((this.TempConditionsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TempConditionsCompleted(this, new TempConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StockRemoval", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode StockRemoval(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("StockRemoval", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginStockRemoval(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("StockRemoval", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndStockRemoval(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void StockRemovalAsync(System.Xml.XmlNode xDoc)
    {
        this.StockRemovalAsync(xDoc, null);
    }

    /// <remarks/>
    public void StockRemovalAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.StockRemovalOperationCompleted == null))
        {
            this.StockRemovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStockRemovalOperationCompleted);
        }
        this.InvokeAsync("StockRemoval", new object[] {
                    xDoc}, this.StockRemovalOperationCompleted, userState);
    }

    private void OnStockRemovalOperationCompleted(object arg)
    {
        if ((this.StockRemovalCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.StockRemovalCompleted(this, new StockRemovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StockPlacement", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode StockPlacement(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("StockPlacement", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginStockPlacement(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("StockPlacement", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndStockPlacement(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void StockPlacementAsync(System.Xml.XmlNode xDoc)
    {
        this.StockPlacementAsync(xDoc, null);
    }

    /// <remarks/>
    public void StockPlacementAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.StockPlacementOperationCompleted == null))
        {
            this.StockPlacementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStockPlacementOperationCompleted);
        }
        this.InvokeAsync("StockPlacement", new object[] {
                    xDoc}, this.StockPlacementOperationCompleted, userState);
    }

    private void OnStockPlacementOperationCompleted(object arg)
    {
        if ((this.StockPlacementCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.StockPlacementCompleted(this, new StockPlacementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StorageSection", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode StorageSection(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("StorageSection", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginStorageSection(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("StorageSection", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndStorageSection(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void StorageSectionAsync(System.Xml.XmlNode xDoc)
    {
        this.StorageSectionAsync(xDoc, null);
    }

    /// <remarks/>
    public void StorageSectionAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.StorageSectionOperationCompleted == null))
        {
            this.StorageSectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStorageSectionOperationCompleted);
        }
        this.InvokeAsync("StorageSection", new object[] {
                    xDoc}, this.StorageSectionOperationCompleted, userState);
    }

    private void OnStorageSectionOperationCompleted(object arg)
    {
        if ((this.StorageSectionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.StorageSectionCompleted(this, new StorageSectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLotSize", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetLotSize(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetLotSize", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetLotSize(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetLotSize", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetLotSize(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetLotSizeAsync(System.Xml.XmlNode xDoc)
    {
        this.GetLotSizeAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetLotSizeAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetLotSizeOperationCompleted == null))
        {
            this.GetLotSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLotSizeOperationCompleted);
        }
        this.InvokeAsync("GetLotSize", new object[] {
                    xDoc}, this.GetLotSizeOperationCompleted, userState);
    }

    private void OnGetLotSizeOperationCompleted(object arg)
    {
        if ((this.GetLotSizeCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetLotSizeCompleted(this, new GetLotSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQMControlKey", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetQMControlKey(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetQMControlKey", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetQMControlKey(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetQMControlKey", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetQMControlKey(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetQMControlKeyAsync(System.Xml.XmlNode xDoc)
    {
        this.GetQMControlKeyAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetQMControlKeyAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetQMControlKeyOperationCompleted == null))
        {
            this.GetQMControlKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQMControlKeyOperationCompleted);
        }
        this.InvokeAsync("GetQMControlKey", new object[] {
                    xDoc}, this.GetQMControlKeyOperationCompleted, userState);
    }

    private void OnGetQMControlKeyOperationCompleted(object arg)
    {
        if ((this.GetQMControlKeyCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetQMControlKeyCompleted(this, new GetQMControlKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInspectionTypes", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetInspectionTypes(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetInspectionTypes", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetInspectionTypes(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetInspectionTypes", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetInspectionTypes(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetInspectionTypesAsync(System.Xml.XmlNode xDoc)
    {
        this.GetInspectionTypesAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetInspectionTypesAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetInspectionTypesOperationCompleted == null))
        {
            this.GetInspectionTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInspectionTypesOperationCompleted);
        }
        this.InvokeAsync("GetInspectionTypes", new object[] {
                    xDoc}, this.GetInspectionTypesOperationCompleted, userState);
    }

    private void OnGetInspectionTypesOperationCompleted(object arg)
    {
        if ((this.GetInspectionTypesCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetInspectionTypesCompleted(this, new GetInspectionTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaxId", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetMaxId(System.Xml.XmlNode xDoc, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("GetMaxId", new object[] {
                    xDoc});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetMaxId(System.Xml.XmlNode xDoc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetMaxId", new object[] {
                    xDoc}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGetMaxId(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void GetMaxIdAsync(System.Xml.XmlNode xDoc)
    {
        this.GetMaxIdAsync(xDoc, null);
    }

    /// <remarks/>
    public void GetMaxIdAsync(System.Xml.XmlNode xDoc, object userState)
    {
        if ((this.GetMaxIdOperationCompleted == null))
        {
            this.GetMaxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxIdOperationCompleted);
        }
        this.InvokeAsync("GetMaxId", new object[] {
                    xDoc}, this.GetMaxIdOperationCompleted, userState);
    }

    private void OnGetMaxIdOperationCompleted(object arg)
    {
        if ((this.GetMaxIdCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetMaxIdCompleted(this, new GetMaxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertRawMaterials", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertRawMaterials(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertRawMaterials", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertRawMaterials(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertRawMaterials", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertRawMaterials(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertRawMaterialsAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertRawMaterialsAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertRawMaterialsAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertRawMaterialsOperationCompleted == null))
        {
            this.InsertRawMaterialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRawMaterialsOperationCompleted);
        }
        this.InvokeAsync("InsertRawMaterials", new object[] {
                    xDoc,
                    Dest}, this.InsertRawMaterialsOperationCompleted, userState);
    }

    private void OnInsertRawMaterialsOperationCompleted(object arg)
    {
        if ((this.InsertRawMaterialsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertRawMaterialsCompleted(this, new InsertRawMaterialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertPackagingItem", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertPackagingItem(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertPackagingItem", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertPackagingItem(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertPackagingItem", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertPackagingItem(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertPackagingItemAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertPackagingItemAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertPackagingItemAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertPackagingItemOperationCompleted == null))
        {
            this.InsertPackagingItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPackagingItemOperationCompleted);
        }
        this.InvokeAsync("InsertPackagingItem", new object[] {
                    xDoc,
                    Dest}, this.InsertPackagingItemOperationCompleted, userState);
    }

    private void OnInsertPackagingItemOperationCompleted(object arg)
    {
        if ((this.InsertPackagingItemCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertPackagingItemCompleted(this, new InsertPackagingItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertSparePartsItem", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertSparePartsItem(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertSparePartsItem", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertSparePartsItem(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertSparePartsItem", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertSparePartsItem(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertSparePartsItemAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertSparePartsItemAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertSparePartsItemAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertSparePartsItemOperationCompleted == null))
        {
            this.InsertSparePartsItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSparePartsItemOperationCompleted);
        }
        this.InvokeAsync("InsertSparePartsItem", new object[] {
                    xDoc,
                    Dest}, this.InsertSparePartsItemOperationCompleted, userState);
    }

    private void OnInsertSparePartsItemOperationCompleted(object arg)
    {
        if ((this.InsertSparePartsItemCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertSparePartsItemCompleted(this, new InsertSparePartsItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertConsumablesItem", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertConsumablesItem(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertConsumablesItem", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertConsumablesItem(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertConsumablesItem", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertConsumablesItem(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertConsumablesItemAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertConsumablesItemAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertConsumablesItemAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertConsumablesItemOperationCompleted == null))
        {
            this.InsertConsumablesItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertConsumablesItemOperationCompleted);
        }
        this.InvokeAsync("InsertConsumablesItem", new object[] {
                    xDoc,
                    Dest}, this.InsertConsumablesItemOperationCompleted, userState);
    }

    private void OnInsertConsumablesItemOperationCompleted(object arg)
    {
        if ((this.InsertConsumablesItemCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertConsumablesItemCompleted(this, new InsertConsumablesItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCapitalItem", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode InsertCapitalItem(System.Xml.XmlNode xDoc, string[] Dest, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.Invoke("InsertCapitalItem", new object[] {
                    xDoc,
                    Dest});
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertCapitalItem(System.Xml.XmlNode xDoc, string[] Dest, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertCapitalItem", new object[] {
                    xDoc,
                    Dest}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndInsertCapitalItem(System.IAsyncResult asyncResult, out System.Xml.XmlNode xDocException)
    {
        object[] results = this.EndInvoke(asyncResult);
        xDocException = ((System.Xml.XmlNode)(results[1]));
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void InsertCapitalItemAsync(System.Xml.XmlNode xDoc, string[] Dest)
    {
        this.InsertCapitalItemAsync(xDoc, Dest, null);
    }

    /// <remarks/>
    public void InsertCapitalItemAsync(System.Xml.XmlNode xDoc, string[] Dest, object userState)
    {
        if ((this.InsertCapitalItemOperationCompleted == null))
        {
            this.InsertCapitalItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCapitalItemOperationCompleted);
        }
        this.InvokeAsync("InsertCapitalItem", new object[] {
                    xDoc,
                    Dest}, this.InsertCapitalItemOperationCompleted, userState);
    }

    private void OnInsertCapitalItemOperationCompleted(object arg)
    {
        if ((this.InsertCapitalItemCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertCapitalItemCompleted(this, new InsertCapitalItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    public new void CancelAsync(object userState)
    {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetLastPOPriceCompletedEventHandler(object sender, GetLastPOPriceCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetLastPOPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetLastPOPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void getEmpWageTypenBasicCompletedEventHandler(object sender, getEmpWageTypenBasicCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getEmpWageTypenBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal getEmpWageTypenBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void getMaterialQtyDetailsCompletedEventHandler(object sender, getMaterialQtyDetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getMaterialQtyDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal getMaterialQtyDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void setMaterialQtyDetailsCompletedEventHandler(object sender, setMaterialQtyDetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class setMaterialQtyDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal setMaterialQtyDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void getEcomCustomersCompletedEventHandler(object sender, getEcomCustomersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getEcomCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal getEcomCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetInvoiceandLRDetailsCompletedEventHandler(object sender, GetInvoiceandLRDetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetInvoiceandLRDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetInvoiceandLRDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void getFreeGoodsForCustomerCompletedEventHandler(object sender, getFreeGoodsForCustomerCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getFreeGoodsForCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal getFreeGoodsForCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void getinvoiceCompletedEventHandler(object sender, getinvoiceCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getinvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal getinvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetProductwiseBudgetCompletedEventHandler(object sender, GetProductwiseBudgetCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetProductwiseBudgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetProductwiseBudgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetOutstandingCompletedEventHandler(object sender, GetOutstandingCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetOutstandingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetOutstandingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertMaterialstoragelocationExtensionCompletedEventHandler(object sender, InsertMaterialstoragelocationExtensionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertMaterialstoragelocationExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertMaterialstoragelocationExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetPromoInvoiceDetailsCompletedEventHandler(object sender, GetPromoInvoiceDetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPromoInvoiceDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetPromoInvoiceDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetEmployeePromotiondetailsCompletedEventHandler(object sender, GetEmployeePromotiondetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetEmployeePromotiondetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetEmployeePromotiondetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetTableDataWithMultiCondnCompletedEventHandler(object sender, GetTableDataWithMultiCondnCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetTableDataWithMultiCondnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetTableDataWithMultiCondnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetOpeningbalCompletedEventHandler(object sender, GetOpeningbalCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetOpeningbalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetOpeningbalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetGRNSTNDataCompletedEventHandler(object sender, GetGRNSTNDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetGRNSTNDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetGRNSTNDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetSetEcomBankChargesCompletedEventHandler(object sender, GetSetEcomBankChargesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetSetEcomBankChargesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetSetEcomBankChargesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void rfcquarantineCompletedEventHandler(object sender, rfcquarantineCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class rfcquarantineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal rfcquarantineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void rfcpogatemoduleCompletedEventHandler(object sender, rfcpogatemoduleCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class rfcpogatemoduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal rfcpogatemoduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void rfcQACompletedEventHandler(object sender, rfcQACompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class rfcQACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal rfcQACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void rfcPODetModuleCompletedEventHandler(object sender, rfcPODetModuleCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class rfcPODetModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal rfcPODetModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void rfcToBeInspectedModuleCompletedEventHandler(object sender, rfcToBeInspectedModuleCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class rfcToBeInspectedModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal rfcToBeInspectedModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void rfcShipperModuleCompletedEventHandler(object sender, rfcShipperModuleCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class rfcShipperModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal rfcShipperModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetStockAtCFACompletedEventHandler(object sender, GetStockAtCFACompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetStockAtCFACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetStockAtCFACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertFGOSInSAPCompletedEventHandler(object sender, InsertFGOSInSAPCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertFGOSInSAPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertFGOSInSAPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetFGODetailsCompletedEventHandler(object sender, GetFGODetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetFGODetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetFGODetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetIntransitValuesCompletedEventHandler(object sender, GetIntransitValuesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetIntransitValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetIntransitValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void SetGetPostRTGSCompletedEventHandler(object sender, SetGetPostRTGSCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetGetPostRTGSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal SetGetPostRTGSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void SetGetPostRTGSUpdatedCompletedEventHandler(object sender, SetGetPostRTGSUpdatedCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetGetPostRTGSUpdatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal SetGetPostRTGSUpdatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void SetGetPRADetailsCompletedEventHandler(object sender, SetGetPRADetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetGetPRADetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal SetGetPRADetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetOrderToInvoiceCompletedEventHandler(object sender, GetOrderToInvoiceCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetOrderToInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetOrderToInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetStockToPromoCompletedEventHandler(object sender, GetStockToPromoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetStockToPromoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetStockToPromoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void TaxClassificationCompletedEventHandler(object sender, TaxClassificationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TaxClassificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal TaxClassificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void TaxActAssGroupCompletedEventHandler(object sender, TaxActAssGroupCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TaxActAssGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal TaxActAssGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void ItemAvailCompletedEventHandler(object sender, ItemAvailCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ItemAvailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal ItemAvailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void DivDetCompletedEventHandler(object sender, DivDetCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DivDetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal DivDetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GenCatItemGroupCompletedEventHandler(object sender, GenCatItemGroupCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GenCatItemGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GenCatItemGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetAssGroupCompletedEventHandler(object sender, GetAssGroupCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAssGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetAssGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetMatGroup1CompletedEventHandler(object sender, GetMatGroup1CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetMatGroup1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetMatGroup1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetLotSizeforFinCompletedEventHandler(object sender, GetLotSizeforFinCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetLotSizeforFinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetLotSizeforFinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetMRPDetCompletedEventHandler(object sender, GetMRPDetCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetMRPDetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetMRPDetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetMRPTypeDetCompletedEventHandler(object sender, GetMRPTypeDetCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetMRPTypeDetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetMRPTypeDetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetValuationClassCompletedEventHandler(object sender, GetValuationClassCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetValuationClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetValuationClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetProdHeirarchyCompletedEventHandler(object sender, GetProdHeirarchyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetProdHeirarchyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetProdHeirarchyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void FillddlTransGroupCompletedEventHandler(object sender, FillddlTransGroupCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FillddlTransGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal FillddlTransGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetProductHierarchyDetCompletedEventHandler(object sender, GetProductHierarchyDetCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetProductHierarchyDetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetProductHierarchyDetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetControlCodeCompletedEventHandler(object sender, GetControlCodeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetControlCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetControlCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetTempCondCompletedEventHandler(object sender, GetTempCondCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetTempCondCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetTempCondCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertFinishedItemCompletedEventHandler(object sender, InsertFinishedItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertFinishedItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertFinishedItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void FinishedMatExtensionCompletedEventHandler(object sender, FinishedMatExtensionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FinishedMatExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal FinishedMatExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void PromoPrintDetCompletedEventHandler(object sender, PromoPrintDetCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PromoPrintDetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal PromoPrintDetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void SetGetVendorRegistrationCompletedEventHandler(object sender, SetGetVendorRegistrationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetGetVendorRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal SetGetVendorRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetOISConsigneeAddrCompletedEventHandler(object sender, GetOISConsigneeAddrCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetOISConsigneeAddrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetOISConsigneeAddrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetOISMulitpleBatchesCompletedEventHandler(object sender, GetOISMulitpleBatchesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetOISMulitpleBatchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetOISMulitpleBatchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void OISCheckStockCompletedEventHandler(object sender, OISCheckStockCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class OISCheckStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal OISCheckStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void OISCrateInvoiceCompletedEventHandler(object sender, OISCrateInvoiceCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class OISCrateInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal OISCrateInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetPRADetCompletedEventHandler(object sender, GetPRADetCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPRADetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetPRADetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertMiscExpensePostingMulitpleCompletedEventHandler(object sender, InsertMiscExpensePostingMulitpleCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertMiscExpensePostingMulitpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertMiscExpensePostingMulitpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetPPDBdataCompletedEventHandler(object sender, GetPPDBdataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPPDBdataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetPPDBdataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertQuotationInterestRateCompletedEventHandler(object sender, InsertQuotationInterestRateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertQuotationInterestRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertQuotationInterestRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertMktgAdvCompletedEventHandler(object sender, InsertMktgAdvCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertMktgAdvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertMktgAdvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetMktgAdvDetCompletedEventHandler(object sender, GetMktgAdvDetCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetMktgAdvDetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetMktgAdvDetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void ClearMktgAdvCompletedEventHandler(object sender, ClearMktgAdvCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ClearMktgAdvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal ClearMktgAdvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetInvoiceDetCompletedEventHandler(object sender, GetInvoiceDetCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetInvoiceDetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetInvoiceDetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertLabChemicalsItemCompletedEventHandler(object sender, InsertLabChemicalsItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertLabChemicalsItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertLabChemicalsItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertPromotionalItemCompletedEventHandler(object sender, InsertPromotionalItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertPromotionalItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertPromotionalItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertGlassWareItemCompletedEventHandler(object sender, InsertGlassWareItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertGlassWareItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertGlassWareItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertGeneralItemCompletedEventHandler(object sender, InsertGeneralItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertGeneralItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertGeneralItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertRDLabChemicalsItemCompletedEventHandler(object sender, InsertRDLabChemicalsItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertRDLabChemicalsItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertRDLabChemicalsItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertRDConsumablesItemCompletedEventHandler(object sender, InsertRDConsumablesItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertRDConsumablesItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertRDConsumablesItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertRDGlassWareItemCompletedEventHandler(object sender, InsertRDGlassWareItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertRDGlassWareItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertRDGlassWareItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertRDCapitalAssetsItemCompletedEventHandler(object sender, InsertRDCapitalAssetsItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertRDCapitalAssetsItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertRDCapitalAssetsItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertRDSparePartsItemCompletedEventHandler(object sender, InsertRDSparePartsItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertRDSparePartsItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertRDSparePartsItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetMaterialInformationByItemCodeCompletedEventHandler(object sender, GetMaterialInformationByItemCodeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetMaterialInformationByItemCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetMaterialInformationByItemCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertRawMaterialExtensionCompletedEventHandler(object sender, InsertRawMaterialExtensionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertRawMaterialExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertRawMaterialExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertLabChemicalCodeExtensionCompletedEventHandler(object sender, InsertLabChemicalCodeExtensionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertLabChemicalCodeExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertLabChemicalCodeExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertPackagingMaterialCodeExtensionCompletedEventHandler(object sender, InsertPackagingMaterialCodeExtensionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertPackagingMaterialCodeExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertPackagingMaterialCodeExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertPromotinalMaterialCodeExtensionCompletedEventHandler(object sender, InsertPromotinalMaterialCodeExtensionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertPromotinalMaterialCodeExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertPromotinalMaterialCodeExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertSparePartsMaterialCodeExtensionCompletedEventHandler(object sender, InsertSparePartsMaterialCodeExtensionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertSparePartsMaterialCodeExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertSparePartsMaterialCodeExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertCapitalGoodsCodeExtensionCompletedEventHandler(object sender, InsertCapitalGoodsCodeExtensionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertCapitalGoodsCodeExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertCapitalGoodsCodeExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertGlassWareMaterialCodeExtensionCompletedEventHandler(object sender, InsertGlassWareMaterialCodeExtensionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertGlassWareMaterialCodeExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertGlassWareMaterialCodeExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertConsumableMaterialCodeExtensionCompletedEventHandler(object sender, InsertConsumableMaterialCodeExtensionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertConsumableMaterialCodeExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertConsumableMaterialCodeExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void PostIncomeTax_Sec586CompletedEventHandler(object sender, PostIncomeTax_Sec586CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PostIncomeTax_Sec586CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal PostIncomeTax_Sec586CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void PostIncomeTax_Sec585CompletedEventHandler(object sender, PostIncomeTax_Sec585CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PostIncomeTax_Sec585CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal PostIncomeTax_Sec585CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void PostIncomeTax_Sec584CompletedEventHandler(object sender, PostIncomeTax_Sec584CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PostIncomeTax_Sec584CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal PostIncomeTax_Sec584CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void PostIncomeTax_Sec581CompletedEventHandler(object sender, PostIncomeTax_Sec581CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PostIncomeTax_Sec581CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal PostIncomeTax_Sec581CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void PanCardUpdateCompletedEventHandler(object sender, PanCardUpdateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PanCardUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal PanCardUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void R3CurrentMonthTransactionCompletedEventHandler(object sender, R3CurrentMonthTransactionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class R3CurrentMonthTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal R3CurrentMonthTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void R3ProductSalesCompletedEventHandler(object sender, R3ProductSalesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class R3ProductSalesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal R3ProductSalesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void R3AgeWiseCompletedEventHandler(object sender, R3AgeWiseCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class R3AgeWiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal R3AgeWiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void R3OrderStatusCompletedEventHandler(object sender, R3OrderStatusCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class R3OrderStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal R3OrderStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void R3RollingPlanCompletedEventHandler(object sender, R3RollingPlanCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class R3RollingPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal R3RollingPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void MatitemstockCompletedEventHandler(object sender, MatitemstockCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MatitemstockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal MatitemstockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void MatScrapDocNoCompletedEventHandler(object sender, MatScrapDocNoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MatScrapDocNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal MatScrapDocNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetAssetDataCompletedEventHandler(object sender, GetAssetDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAssetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetAssetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void PostAssetDataCompletedEventHandler(object sender, PostAssetDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PostAssetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal PostAssetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void R3AITStockDetailsCompletedEventHandler(object sender, R3AITStockDetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class R3AITStockDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal R3AITStockDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetIndentorDetailsByPOCompletedEventHandler(object sender, GetIndentorDetailsByPOCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetIndentorDetailsByPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetIndentorDetailsByPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void SetCustXD02CompletedEventHandler(object sender, SetCustXD02CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetCustXD02CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal SetCustXD02CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void SetMktgEmpAsCustomerCompletedEventHandler(object sender, SetMktgEmpAsCustomerCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetMktgEmpAsCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal SetMktgEmpAsCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetTargetsCompletedEventHandler(object sender, GetTargetsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetTargetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetTargetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetAITStockRepCompletedEventHandler(object sender, GetAITStockRepCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAITStockRepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetAITStockRepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetAITStockRepCustCompletedEventHandler(object sender, GetAITStockRepCustCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAITStockRepCustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetAITStockRepCustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void R3getMonthwiseBasicCompletedEventHandler(object sender, R3getMonthwiseBasicCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class R3getMonthwiseBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal R3getMonthwiseBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetProjectsCompletedEventHandler(object sender, GetProjectsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void setMaterialReservationCompletedEventHandler(object sender, setMaterialReservationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class setMaterialReservationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal setMaterialReservationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void setMatllResIssueCompletedEventHandler(object sender, setMatllResIssueCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class setMatllResIssueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal setMatllResIssueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void setMatllResTransferCompletedEventHandler(object sender, setMatllResTransferCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class setMatllResTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal setMatllResTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void setMaterialReservationRejectCompletedEventHandler(object sender, setMaterialReservationRejectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class setMaterialReservationRejectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal setMaterialReservationRejectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetCCGLAmtCompletedEventHandler(object sender, GetCCGLAmtCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetCCGLAmtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetCCGLAmtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetEmpStockRepOldCompletedEventHandler(object sender, GetEmpStockRepOldCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetEmpStockRepOldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetEmpStockRepOldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetEmpStockRepCompletedEventHandler(object sender, GetEmpStockRepCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetEmpStockRepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetEmpStockRepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void getASUserCreationCompletedEventHandler(object sender, getASUserCreationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getASUserCreationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal getASUserCreationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetSalesDashboardCompletedEventHandler(object sender, GetSalesDashboardCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetSalesDashboardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetSalesDashboardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetSTNDetailsCompletedEventHandler(object sender, GetSTNDetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetSTNDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetSTNDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertManHoursCompletedEventHandler(object sender, InsertManHoursCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertManHoursCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertManHoursCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetAssetDataFromSAPCompletedEventHandler(object sender, GetAssetDataFromSAPCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAssetDataFromSAPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetAssetDataFromSAPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GETAUCwisePOValueCompletedEventHandler(object sender, GETAUCwisePOValueCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GETAUCwisePOValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GETAUCwisePOValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void setAttendanceLOPPostCompletedEventHandler(object sender, setAttendanceLOPPostCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class setAttendanceLOPPostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal setAttendanceLOPPostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void setAttendanceLateMinLOPPostCompletedEventHandler(object sender, setAttendanceLateMinLOPPostCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class setAttendanceLateMinLOPPostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal setAttendanceLateMinLOPPostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GETAUCwisePOValueNewCompletedEventHandler(object sender, GETAUCwisePOValueNewCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GETAUCwisePOValueNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GETAUCwisePOValueNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetPDSResultsCompletedEventHandler(object sender, GetPDSResultsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPDSResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetPDSResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertPDPostingCompletedEventHandler(object sender, InsertPDPostingCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertPDPostingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertPDPostingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetInstitutionalQuationsCompletedEventHandler(object sender, GetInstitutionalQuationsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetInstitutionalQuationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetInstitutionalQuationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertQuoAdvAmtCompletedEventHandler(object sender, InsertQuoAdvAmtCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertQuoAdvAmtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertQuoAdvAmtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertFinishedMaterialExtensionCompletedEventHandler(object sender, InsertFinishedMaterialExtensionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertFinishedMaterialExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertFinishedMaterialExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertFinishedMaterialAccountingExtensionCompletedEventHandler(object sender, InsertFinishedMaterialAccountingExtensionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertFinishedMaterialAccountingExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertFinishedMaterialAccountingExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetRetestMatAlertMailDetailsCompletedEventHandler(object sender, GetRetestMatAlertMailDetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetRetestMatAlertMailDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetRetestMatAlertMailDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetAccountsCompletedEventHandler(object sender, GetAccountsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetEMDCustomersCompletedEventHandler(object sender, GetEMDCustomersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetEMDCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetEMDCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetCustomersListforOrdCompletedEventHandler(object sender, GetCustomersListforOrdCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetCustomersListforOrdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetCustomersListforOrdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertEMDClosureCompletedEventHandler(object sender, InsertEMDClosureCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertEMDClosureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertEMDClosureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetCustomersListCompletedEventHandler(object sender, GetCustomersListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetCustomersListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetCustomersListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetTableDataCompletedEventHandler(object sender, GetTableDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetTableDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetTableDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void ReadmaterialCompletedEventHandler(object sender, ReadmaterialCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReadmaterialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal ReadmaterialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertQuotatoinInSAPCompletedEventHandler(object sender, InsertQuotatoinInSAPCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertQuotatoinInSAPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertQuotatoinInSAPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void R3itemstockCompletedEventHandler(object sender, R3itemstockCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class R3itemstockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal R3itemstockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void R3itemConsumptionCompletedEventHandler(object sender, R3itemConsumptionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class R3itemConsumptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal R3itemConsumptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertTourApprovalBillCompletedEventHandler(object sender, InsertTourApprovalBillCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertTourApprovalBillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertTourApprovalBillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertTourExpenditureCompletedEventHandler(object sender, InsertTourExpenditureCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertTourExpenditureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertTourExpenditureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void SetPRAllocation1CompletedEventHandler(object sender, SetPRAllocation1CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetPRAllocation1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal SetPRAllocation1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void SetPRAllocation2CompletedEventHandler(object sender, SetPRAllocation2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetPRAllocation2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal SetPRAllocation2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertLeaveEncashmentDetailsCompletedEventHandler(object sender, InsertLeaveEncashmentDetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertLeaveEncashmentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertLeaveEncashmentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertTourApprovalBillDataTableCompletedEventHandler(object sender, InsertTourApprovalBillDataTableCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertTourApprovalBillDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertTourApprovalBillDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void PODetailsCompletedEventHandler(object sender, PODetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PODetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal PODetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertConveyanceCompletedEventHandler(object sender, InsertConveyanceCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertConveyanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertConveyanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void IndentsForClosingCompletedEventHandler(object sender, IndentsForClosingCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class IndentsForClosingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal IndentsForClosingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void IndentCloseCompletedEventHandler(object sender, IndentCloseCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class IndentCloseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal IndentCloseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertLTAFinanceCompletedEventHandler(object sender, InsertLTAFinanceCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertLTAFinanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertLTAFinanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void R3POdetailsCompletedEventHandler(object sender, R3POdetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class R3POdetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal R3POdetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void R3EmpCreationCompletedEventHandler(object sender, R3EmpCreationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class R3EmpCreationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal R3EmpCreationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void R3EmpUpdationCompletedEventHandler(object sender, R3EmpUpdationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class R3EmpUpdationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal R3EmpUpdationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetEmpMiscOSCompletedEventHandler(object sender, GetEmpMiscOSCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetEmpMiscOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetEmpMiscOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetSequenceNosCompletedEventHandler(object sender, GetSequenceNosCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetSequenceNosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetSequenceNosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetPaySlipforEmployeeCompletedEventHandler(object sender, GetPaySlipforEmployeeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPaySlipforEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetPaySlipforEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertMiscExpensePostingCompletedEventHandler(object sender, InsertMiscExpensePostingCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertMiscExpensePostingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertMiscExpensePostingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void R3PRDetailsCompletedEventHandler(object sender, R3PRDetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class R3PRDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal R3PRDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertEmpInternalorderCreationCompletedEventHandler(object sender, InsertEmpInternalorderCreationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertEmpInternalorderCreationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertEmpInternalorderCreationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertEmpVendorCreationCompletedEventHandler(object sender, InsertEmpVendorCreationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertEmpVendorCreationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertEmpVendorCreationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void ctcAccountLedgerCompletedEventHandler(object sender, ctcAccountLedgerCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ctcAccountLedgerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal ctcAccountLedgerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertPhoneNumberCompletedEventHandler(object sender, InsertPhoneNumberCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertPhoneNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertPhoneNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void UpdatePhoneNumberCompletedEventHandler(object sender, UpdatePhoneNumberCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdatePhoneNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal UpdatePhoneNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void UpdateDeductionsInSalaryCompletedEventHandler(object sender, UpdateDeductionsInSalaryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateDeductionsInSalaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal UpdateDeductionsInSalaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void UpdateDeductionsInSalaryforRecExcessAmountCompletedEventHandler(object sender, UpdateDeductionsInSalaryforRecExcessAmountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateDeductionsInSalaryforRecExcessAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal UpdateDeductionsInSalaryforRecExcessAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void SaveBillEntryCompletedEventHandler(object sender, SaveBillEntryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SaveBillEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal SaveBillEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetMaterialsCompletedEventHandler(object sender, GetMaterialsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetMaterialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetMaterialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetMaterialItemandCodeCompletedEventHandler(object sender, GetMaterialItemandCodeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetMaterialItemandCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetMaterialItemandCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetStorageLocationCompletedEventHandler(object sender, GetStorageLocationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetStorageLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetStorageLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetWareHouseNumberCompletedEventHandler(object sender, GetWareHouseNumberCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetWareHouseNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetWareHouseNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetStorageTypeCompletedEventHandler(object sender, GetStorageTypeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetStorageTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetStorageTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void BaseUnitofMeasureCompletedEventHandler(object sender, BaseUnitofMeasureCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class BaseUnitofMeasureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal BaseUnitofMeasureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void MaterialGroupCompletedEventHandler(object sender, MaterialGroupCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MaterialGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal MaterialGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void PurchasingGroupCompletedEventHandler(object sender, PurchasingGroupCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PurchasingGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal PurchasingGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void PurchasingKeyValueCompletedEventHandler(object sender, PurchasingKeyValueCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PurchasingKeyValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal PurchasingKeyValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void MRPTypeCompletedEventHandler(object sender, MRPTypeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MRPTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal MRPTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void TempConditionsCompletedEventHandler(object sender, TempConditionsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TempConditionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal TempConditionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void StockRemovalCompletedEventHandler(object sender, StockRemovalCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class StockRemovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal StockRemovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void StockPlacementCompletedEventHandler(object sender, StockPlacementCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class StockPlacementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal StockPlacementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void StorageSectionCompletedEventHandler(object sender, StorageSectionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class StorageSectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal StorageSectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetLotSizeCompletedEventHandler(object sender, GetLotSizeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetLotSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetLotSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetQMControlKeyCompletedEventHandler(object sender, GetQMControlKeyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetQMControlKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetQMControlKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetInspectionTypesCompletedEventHandler(object sender, GetInspectionTypesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetInspectionTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetInspectionTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void GetMaxIdCompletedEventHandler(object sender, GetMaxIdCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetMaxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetMaxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertRawMaterialsCompletedEventHandler(object sender, InsertRawMaterialsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertRawMaterialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertRawMaterialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertPackagingItemCompletedEventHandler(object sender, InsertPackagingItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertPackagingItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertPackagingItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertSparePartsItemCompletedEventHandler(object sender, InsertSparePartsItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertSparePartsItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertSparePartsItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertConsumablesItemCompletedEventHandler(object sender, InsertConsumablesItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertConsumablesItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertConsumablesItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void InsertCapitalItemCompletedEventHandler(object sender, InsertCapitalItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertCapitalItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal InsertCapitalItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }

    /// <remarks/>
    public System.Xml.XmlNode xDocException
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[1]));
        }
    }
}
